{"version":3,"sources":["store/makeTweetstorm.js","store/makeInitialState.js","store/reducer.js","react-auth0-wrapper.js","components/NavBar/NavBar.js","hooks/useLocalStorage.js","containers/App/App.js","store/augment.js","serviceWorker.js","index.js"],"names":["LINEFEED","MAX_LENGTH","PREFIX_PLACEHOLDER","makeSequenceNumber","index","length","undefined","makeTweetstorm","hashtags","linefeed","source","copy","slice","parts","take","v","prune","indexOf","substr","push","map","part","tweet","trim","makeInitialState","healthy","items","userId","types","CHANGE_HASHTAGS","CHANGE_LINEFEED","CHANGE_SOURCE","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","reducer","state","action","type","value","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","useEffect","sub","className","alt","name","key","src","picture","aria-label","role","data-testid","onClick","returnTo","href","useLocalStorage","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","BASE_URL","App","feature","loading","fetch","then","response","json","data","catch","hashtags_","setHashtags","source_","setSource","useReducer","disabled","onSubmit","e","preventDefault","active","onChange","target","maxLength","placeholder","size","rows","readOnly","classnames","body","headers","method","version","augment","Boolean","hostname","match","features","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","setFeatures","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kWAEaA,EAAW,KAClBC,EAAa,IACbC,EAAqB,MAE3B,SAASC,EAAmBC,EAAOC,GACjC,YAAcC,IAAVF,QAAkCE,IAAXD,EAClBH,EAEH,GAAN,OAAUE,EAAQ,EAAlB,YAAuBC,GAqDVE,MAlDf,YAAyD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAE3B,OAAbD,QAAkCH,IAAbG,GAAuC,KAAbA,IACjDA,EAAWT,GAMb,IAHA,IAAIW,EAAOD,EAAOE,QACZC,EAAQ,GAES,IAAhBF,EAAKN,QAAc,CACxB,IAAIS,OAAI,GAENA,EADEN,EAASH,OAAS,EACbU,IAAEC,MACPL,EACAV,EAAaO,EAASH,OAASF,IAAqBE,OAAS,EAC7D,IAGKU,IAAEC,MACPL,EACAV,EAAaE,IAAqBE,OAAS,EAC3C,KAGKY,QAAQR,IAAa,GAC5BK,EAAOC,IAAEG,OAAOJ,EAAM,EAAGA,EAAKG,QAAQR,IACtCE,EAAOI,IAAEG,OAAOP,EAAMG,EAAKT,OAASI,EAASJ,SAE7CM,EAAOI,IAAEG,OAAOP,EAAMG,EAAKT,OAAS,GAEtCQ,EAAMM,KAAKL,GAiBb,OAdmBD,EAAMO,KAAI,SAACC,EAAMjB,GAClC,IAAIkB,EAUJ,MAAO,CAAEjB,QARPiB,EADEd,EAASH,OAAS,EACf,UAAMU,IAAEQ,KAAKF,GAAb,YAAsBb,EAAtB,YAAkCL,EACrCC,EACAS,EAAMR,SAGH,UAAMU,IAAEQ,KAAKF,GAAb,YAAsBlB,EAAmBC,EAAOS,EAAMR,UAGtCA,OAAQiB,aC5CpBE,MAXf,YAAgF,IAAD,IAAnDhB,gBAAmD,MAAxC,GAAwC,MAApCC,gBAAoC,MAAzBT,EAAyB,MAAfU,cAAe,MAAN,GAAM,EAC7E,MAAO,CACLF,WACAiB,SAAS,EACTC,MAAOnB,EAAe,CAAEC,WAAUC,WAAUC,WAC5CD,WACAC,SACAiB,OAAQ,O,yjBCNL,IAAMC,EAAQ,CACnBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,cAAe,gBACfC,iBAAkB,mBAClBC,YAAa,cACbC,YAAa,eA8DAC,MA3Df,WAAwD,IAAvCC,EAAsC,uDAA9BZ,EAAiB,IAAKa,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKV,EAAMC,gBACT,OAAO,EAAP,GACKO,EADL,CAEE5B,SAAU6B,EAAOE,MACjBb,MAAOnB,EAAe,CACpBC,SAAU6B,EAAOE,MACjB9B,SAAU2B,EAAM3B,SAChBC,OAAQ0B,EAAM1B,WAIpB,KAAKkB,EAAME,gBACT,OAAO,EAAP,GACKM,EADL,CAEE3B,SAAU4B,EAAOE,MACjBb,MAAOnB,EAAe,CACpBC,SAAU4B,EAAM5B,SAChBC,SAAU4B,EAAOE,MACjB7B,OAAQ0B,EAAM1B,WAIpB,KAAKkB,EAAMG,cACT,OAAO,EAAP,GACKK,EADL,CAEEV,MAAOnB,EAAe,CACpBC,SAAU4B,EAAM5B,SAChBC,SAAU2B,EAAM3B,SAChBC,OAAQ2B,EAAOE,QAEjB7B,OAAQ2B,EAAOE,QAGnB,KAAKX,EAAMI,iBACT,OAAO,EAAP,GACKR,EAAiB,IADtB,CAEEC,QAASW,EAAMX,QACfE,OAAQS,EAAMT,SAGlB,KAAKC,EAAMK,YACT,OAAO,EAAP,GACKG,EADL,CAEEX,QAASY,EAAOE,QAGpB,KAAKX,EAAMM,YACT,OAAO,EAAP,GACKE,EADL,CAEET,OAAQU,EAAOE,QAGnB,QACE,OAAOH,I,gDChEPI,EAA4B,kBAChCC,OAAOC,QAAQC,aAAa,GAAIC,SAASC,MAAOJ,OAAOK,SAASC,WAErDC,EAAeC,IAAMC,gBAErBC,EAAW,kBAAMC,qBAAWJ,ICsC1BK,G,MAzCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC8BH,IAArDI,EADuB,EACvBA,gBAAiBC,EADM,EACNA,kBAAmBC,EADb,EACaA,OAAQC,EADrB,EACqBA,KAQpD,OANAC,qBAAU,WACJJ,GACFD,EAAS,CAAEhB,KAAMV,EAAMM,YAAaK,MAAOmB,EAAKE,QAEjD,CAACN,EAAUC,EAAiBG,IAG7B,4BAAQG,UAAU,UACfN,EACC,CACE,yBAAKO,IAAKJ,EAAKK,KAAMC,IAAI,MAAMC,IAAKP,EAAKQ,UACzC,0BAAMF,IAAI,QACR,0BAAMG,aAAW,QAAQC,KAAK,OAA9B,gBAEQ,IACPV,EAAKK,MAER,4BACEM,cAAY,SACZL,IAAI,SACJM,QAAS,kBACPb,EAAO,CACLc,SAAU9B,OAAOK,SAAS0B,SALhC,YAaF,4BAAQH,cAAY,QAAQC,QAAS,kBAAMd,EAAkB,MAA7D,aCTOiB,MAzBf,SAAyBT,EAAKU,GAAe,IAAD,EACJC,oBAAS,WAC7C,IACE,IAAMC,EAAOnC,OAAOoC,aAAaC,QAAQd,GACzC,OAAOY,EAAOG,KAAKC,MAAMJ,GAAQF,EACjC,MAAOO,GAEP,OADAC,QAAQC,IAAIF,GACLP,MAP+B,mBACnCU,EADmC,KACtBC,EADsB,KAsB1C,MAAO,CAACD,EAXS,SAAA7C,GACf,IACE,IAAM+C,EACJ/C,aAAiBgD,SAAWhD,EAAM6C,GAAe7C,EACnD8C,EAAeC,GACf7C,OAAOoC,aAAaW,QAAQxB,EAAKe,KAAKU,UAAUH,IAChD,MAAOL,GACPC,QAAQC,IAAIF,OCXZS,G,MAAW,wCAqIFC,MAnIf,YAAoC,IAArBC,EAAoB,EAApBA,QAASzD,EAAW,EAAXA,QAAW,EACIgB,IAA7BI,EADyB,EACzBA,gBAAiBsC,EADQ,EACRA,QAEzBlC,qBAAU,WACRmC,MAAM,GAAD,OAAIJ,EAAJ,mBACFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJhB,QAAQC,IAAIe,GACZ5C,EAAS,CAAEhB,KAAMV,EAAMK,YAAaM,OAAO,OAE5C4D,OAAM,SAAAlB,GACLC,QAAQC,IAAIF,GACZ3B,EAAS,CAAEhB,KAAMV,EAAMK,YAAaM,OAAO,SAE9C,IAd8B,MAgBAkC,EAAgB,WAAY,IAhB5B,mBAgB1B2B,EAhB0B,KAgBfC,EAhBe,OAkBJ5B,EAAgB,SAAU,IAlBtB,mBAkB1B6B,EAlB0B,KAkBjBC,EAlBiB,OAuB7BC,qBACFrE,EACAX,EAAiB,CACfhB,SAAU4F,EACV3F,SAAUT,EACVU,OAAQ4F,KA5BqB,0BAqB7B9F,EArB6B,EAqB7BA,SAAUiB,EArBmB,EAqBnBA,QAASC,EArBU,EAqBVA,MAAOjB,EArBG,EAqBHA,SAAUC,EArBP,EAqBOA,OAAQiB,EArBf,EAqBeA,OAC9C2B,EAtB+B,KAgCjC,SAASmD,IACP,OAAQlD,IAAoB7B,EAAMrB,OAAS,IAAMoB,EAsBnD,OAAOoE,EACL,wCAEA,iCACE,kBAAC,EAAD,CAAQvC,SAAUA,IAClB,uCACA,0BAAMoD,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBACrB,+GAzBW,IA2BgBhB,EAAQiB,OAAO,6BAzB1C,2BACEhD,UAAU,gBACViD,SAAU,SAAAH,GACRrD,EAAS,CAAEhB,KAAMV,EAAME,gBAAiBS,MAAOoE,EAAEI,OAAOxE,SAG1DyE,UAAU,IACVC,YAAajH,EACbkH,KAAK,IACL3E,MAAO9B,IAIN,8BAAOA,IAcV,8BACE4D,cAAY,SACZ4C,YAAY,oBACZE,KAAM,EACN5E,MAAO7B,EACPoG,SAAU,SAAAH,GACRrD,EAAS,CAAEhB,KAAMV,EAAMG,cAAeQ,MAAOoE,EAAEI,OAAOxE,QACtDgE,EAAUI,EAAEI,OAAOxE,UAGvB,8BACE8B,cAAY,WACZyC,SAAU,SAAAH,GACRrD,EAAS,CAAEhB,KAAMV,EAAMC,gBAAiBU,MAAOoE,EAAEI,OAAOxE,QACxD8D,EAAYM,EAAEI,OAAOxE,QAEvB0E,YAAY,YACZE,KAAM,EACN7E,KAAK,OACLC,MAAO/B,IAET,wBAAI6D,cAAY,QACb3C,EAAMN,KAAI,SAACwD,EAAMxE,GAAP,OACT,wBAAI4D,IAAK5D,GACP,8BAAUgH,UAAQ,EAACD,KAAM,EAAG5E,MAAOqC,EAAKtD,aAI9C,4BACEuC,UAAWwD,IAAW,cAAe,CACnC,wBAAyBZ,MAE3BpC,cAAY,QACZoC,SAAUA,IACVnC,QAAS,WACPwB,MAAM,GAAD,OAAIJ,EAAJ,sBAAkC,CACrC4B,KAAMvC,KAAKU,UAAU,CAAE/D,QAAOC,WAC9B4F,QAAS,CACP,eAAgB,oBAElBC,OAAQ,SAEPzB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJhB,QAAQC,IAAIe,GACZ5C,EAAS,CAAEhB,KAAMV,EAAMI,mBACvBuE,EAAU,IACVF,EAAY,OAEbF,OAAM,SAAAlB,GACLC,QAAQC,IAAIF,GACZ3B,EAAS,CAAEhB,KAAMV,EAAMI,mBACvBuE,EAAU,IACVF,EAAY,SAzBpB,UAgCF,4BAAQxC,UAAWwD,IAAW,CAAE5F,QAASA,KAAzC,IAAuDgG,OCnI9CC,MARf,SAAiBvF,GAKf,OAJA,SAAmBC,EAAOC,GAExB,OAAOF,EAAQC,EAAOC,K,aCSNsF,QACW,cAA7BlF,OAAOK,SAAS8E,UAEe,UAA7BnF,OAAOK,SAAS8E,UAEhBnF,OAAOK,SAAS8E,SAASC,MACvB,2DCPN,IAEMC,EAAW,CAFiB,6BA2BlCC,iBACE,mBN7B2B,SAAC,GAIvB,IAHLC,EAGI,EAHJA,SAGI,IAFJC,0BAEI,MAFiBzF,EAEjB,EADD0F,EACC,mDAC0CvD,qBAD1C,mBACGpB,EADH,KACoB4E,EADpB,OAEoBxD,qBAFpB,mBAEGjB,EAFH,KAES0E,EAFT,OAG4BzD,qBAH5B,mBAGG0D,EAHH,KAGgBC,EAHhB,OAI0B3D,oBAAS,GAJnC,mBAIGkB,EAJH,KAIY0C,EAJZ,OAK8B5D,oBAAS,GALvC,mBAKG6D,EALH,KAKcC,EALd,KAOJ9E,qBAAU,YACO,uCAAG,oCAAA+E,EAAA,sEACYC,IAAkBT,GAD9B,UACVU,EADU,OAEhBN,EAASM,IAELnG,OAAOK,SAAS+F,OAAOC,SAAS,SAJpB,iCAKaF,EAAcG,yBAL3B,gBAKNC,EALM,EAKNA,SACRf,EAAmBe,GANL,yBAScJ,EAAcrF,kBAT5B,WASVA,EATU,OAWhB4E,EAAmB5E,IAEfA,EAbY,kCAcKqF,EAAcK,UAdnB,QAcRvF,EAdQ,OAed0E,EAAQ1E,GAfM,QAkBhB6E,GAAW,GAlBK,4CAAH,qDAoBfW,KAEC,IAEH,IAAMC,EAAc,uCAAG,0CAAAT,EAAA,6DAAOU,EAAP,+BAAgB,GACrCX,GAAa,GADQ,kBAGbJ,EAAYc,eAAeC,GAHd,uDAKnBlE,QAAQD,MAAR,MALmB,yBAOnBwD,GAAa,GAPM,sCASFJ,EAAYY,UATV,QASfvF,EATe,OAUrB0E,EAAQ1E,GACRyE,GAAmB,GAXE,+DAAH,qDAcdY,EAAsB,uCAAG,4BAAAL,EAAA,6DAC7BH,GAAW,GADkB,SAEvBF,EAAYU,yBAFW,uBAGVV,EAAYY,UAHF,OAGvBvF,EAHuB,OAI7B6E,GAAW,GACXJ,GAAmB,GACnBC,EAAQ1E,GANqB,2CAAH,qDAQ5B,OACE,kBAACV,EAAaqG,SAAd,CACE9G,MAAO,CACLgB,kBACAG,OACAmC,UACA2C,YACAW,iBACAJ,yBACAO,iBAAkB,kBAAUjB,EAAYiB,iBAAZ,MAAAjB,EAAW,YACvC7E,kBAAmB,kBAAU6E,EAAY7E,kBAAZ,MAAA6E,EAAW,YACxCkB,iBAAkB,kBAAUlB,EAAYkB,iBAAZ,MAAAlB,EAAW,YACvCmB,kBAAmB,kBAAUnB,EAAYmB,kBAAZ,MAAAnB,EAAW,YACxC5E,OAAQ,kBAAU4E,EAAY5E,OAAZ,MAAA4E,EAAW,cAG9BL,KM7CL,CACEyB,UAAWC,EAAOC,SAClBC,OAAQF,EAAOE,OACf3B,mBAduB,SAAAe,GACzBvG,OAAOC,QAAQC,aACb,GACAC,SAASC,MACTmG,GAAYA,EAASa,UACjBb,EAASa,UACTpH,OAAOK,SAASC,WASpB+G,aAAcrH,OAAOK,SAAS0B,MAE9B,kBAAC,EAAD,CAAKoB,QA9BT,SAAqBkC,GACnB,MAAO,CACLjB,OAAQ,SAAAjB,GACN,QAAIkC,GACKA,EAAS7G,QAAQ2E,IAAY,IA0B1BmE,CAAYjC,GAAW3F,QAASuF,EAAQvF,MAExDS,SAASoH,eAAe,SDkFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,MAAK,SAAAqE,GACjCA,EAAaC,iB","file":"static/js/main.9beec079.chunk.js","sourcesContent":["import v from 'voca';\n\nexport const LINEFEED = ';;';\nconst MAX_LENGTH = 280;\nconst PREFIX_PLACEHOLDER = '_/_';\n\nfunction makeSequenceNumber(index, length) {\n  if (index === undefined && length === undefined) {\n    return PREFIX_PLACEHOLDER;\n  }\n  return `${index + 1}/${length}`;\n}\n\nfunction makeTweetstorm({ hashtags, linefeed, source }) {\n  // INFO: hack :(\n  if (linefeed === null || linefeed === undefined || linefeed === '') {\n    linefeed = LINEFEED;\n  }\n\n  let copy = source.slice();\n  const parts = [];\n\n  while (copy.length !== 0) {\n    let take;\n    if (hashtags.length > 0) {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - hashtags.length - makeSequenceNumber().length - 2, // INFO: 1 space before the hashtags and 1 space before the sequence number\n        ''\n      );\n    } else {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - makeSequenceNumber().length - 1, // INFO: 1 space before the sequence number\n        ''\n      );\n    }\n    if (take.indexOf(linefeed) > -1) {\n      take = v.substr(take, 0, take.indexOf(linefeed));\n      copy = v.substr(copy, take.length + linefeed.length);\n    } else {\n      copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n    }\n    parts.push(take);\n  }\n\n  const tweetstorm = parts.map((part, index) => {\n    let tweet;\n    if (hashtags.length > 0) {\n      tweet = `${v.trim(part)} ${hashtags} ${makeSequenceNumber(\n        index,\n        parts.length\n      )}`;\n    } else {\n      tweet = `${v.trim(part)} ${makeSequenceNumber(index, parts.length)}`;\n    }\n\n    return { length: tweet.length, tweet };\n  });\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import makeTweetstorm, { LINEFEED } from './makeTweetstorm';\n\nfunction makeInitialState({ hashtags = '', linefeed = LINEFEED, source = '' }) {\n  return {\n    hashtags,\n    healthy: false,\n    items: makeTweetstorm({ hashtags, linefeed, source }),\n    linefeed,\n    source,\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_LINEFEED: 'CHANGE_LINEFEED',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction reducer(state = makeInitialState({}), action) {\n  switch (action.type) {\n    case types.CHANGE_HASHTAGS: {\n      return {\n        ...state,\n        hashtags: action.value,\n        items: makeTweetstorm({\n          hashtags: action.value,\n          linefeed: state.linefeed,\n          source: state.source\n        })\n      };\n    }\n    case types.CHANGE_LINEFEED: {\n      return {\n        ...state,\n        linefeed: action.value,\n        items: makeTweetstorm({\n          hashtags: state.hashtags,\n          linefeed: action.value,\n          source: state.source\n        })\n      };\n    }\n    case types.CHANGE_SOURCE: {\n      return {\n        ...state,\n        items: makeTweetstorm({\n          hashtags: state.hashtags,\n          linefeed: state.linefeed,\n          source: action.value\n        }),\n        source: action.value\n      };\n    }\n    case types.RESET_TWEETSTORM: {\n      return {\n        ...makeInitialState({}),\n        healthy: state.healthy,\n        userId: state.userId\n      };\n    }\n    case types.SET_HEALTHY: {\n      return {\n        ...state,\n        healthy: action.value\n      };\n    }\n    case types.SET_USER_ID: {\n      return {\n        ...state,\n        userId: action.value\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { types } from '../../store/reducer';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './NavBar.css';\n\nconst NavBar = ({ dispatch }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [dispatch, isAuthenticated, user]);\n\n  return (\n    <header className=\"NavBar\">\n      {isAuthenticated ? (\n        [\n          <img alt={user.name} key=\"img\" src={user.picture} />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            data-testid=\"logout\"\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            Log out\n          </button>\n        ]\n      ) : (\n        <button data-testid=\"login\" onClick={() => loginWithRedirect({})}>\n          Log in\n        </button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import classnames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { version } from '../../../package.json';\nimport NavBar from '../../components/NavBar/NavBar';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeInitialState from '../../store/makeInitialState';\nimport { LINEFEED } from '../../store/makeTweetstorm.js';\nimport { types } from '../../store/reducer';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './App.css';\n\nconst BASE_URL = 'https://china-musk-api.herokuapp.com'; // 'https://china-musk-api.herokuapp.com' | 'http://localhost:9000'\n\nfunction App({ feature, reducer }) {\n  const { isAuthenticated, loading } = useAuth0();\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/api/v1/health`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        dispatch({ type: types.SET_HEALTHY, value: true });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch({ type: types.SET_HEALTHY, value: false });\n      });\n  }, []);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  // const [linefeed_, setLinefeed] = useLocalStorage('linefeed', LINEFEED);\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { hashtags, healthy, items, linefeed, source, userId },\n    dispatch\n  ] = useReducer(\n    reducer,\n    makeInitialState({\n      hashtags: hashtags_,\n      linefeed: LINEFEED,\n      source: source_\n    })\n  );\n\n  function disabled() {\n    return !isAuthenticated || !items.length > 0 || !healthy;\n  }\n\n  function makeLinefeed(custom) {\n    if (custom === true) {\n      return (\n        <input\n          className=\"App__linefeed\"\n          onChange={e => {\n            dispatch({ type: types.CHANGE_LINEFEED, value: e.target.value });\n            // setLinefeed(e.target.value);\n          }}\n          maxLength=\"4\"\n          placeholder={LINEFEED}\n          size=\"4\"\n          value={linefeed}\n        />\n      );\n    }\n    return <span>{linefeed}</span>;\n  }\n\n  return loading ? (\n    <article>...</article>\n  ) : (\n    <article>\n      <NavBar dispatch={dispatch} />\n      <h1>Tweries</h1>\n      <form onSubmit={e => e.preventDefault()}>\n        <small>\n          Start typing, to insert a break prior to reaching 280 characters\n          please use {makeLinefeed(feature.active('PICK_YOUR_OWN_LINEFEED_V1'))}\n        </small>\n        <textarea\n          data-testid=\"source\"\n          placeholder=\"What's happening?\"\n          rows={8}\n          value={source}\n          onChange={e => {\n            dispatch({ type: types.CHANGE_SOURCE, value: e.target.value });\n            setSource(e.target.value);\n          }}\n        />\n        <textarea\n          data-testid=\"hashtags\"\n          onChange={e => {\n            dispatch({ type: types.CHANGE_HASHTAGS, value: e.target.value });\n            setHashtags(e.target.value);\n          }}\n          placeholder=\"#hashtags\"\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <ul data-testid=\"list\">\n          {items.map((item, index) => (\n            <li key={index}>\n              <textarea readOnly rows={4} value={item.tweet} />\n            </li>\n          ))}\n        </ul>\n        <button\n          className={classnames('App__button', {\n            'App__button--disabled': disabled()\n          })}\n          data-testid=\"tweet\"\n          disabled={disabled()}\n          onClick={() => {\n            fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n              body: JSON.stringify({ items, userId }),\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              method: 'POST'\n            })\n              .then(response => response.json())\n              .then(data => {\n                console.log(data);\n                dispatch({ type: types.RESET_TWEETSTORM });\n                setSource('');\n                setHashtags('');\n              })\n              .catch(error => {\n                console.log(error);\n                dispatch({ type: types.RESET_TWEETSTORM });\n                setSource('');\n                setHashtags('');\n              });\n          }}\n        >\n          Tweet\n        </button>\n      </form>\n      <footer className={classnames({ healthy: healthy })}>v{version}</footer>\n    </article>\n  );\n}\n\nexport default App;\n","function augment(reducer) {\n  function logAction(state, action) {\n    // console.log('action:', action);\n    return reducer(state, action);\n  }\n  return logAction;\n}\n\nexport default augment;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport reducer from './store/reducer';\nimport config from './auth_config.json';\nimport './index.css';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// <feature-toggles>\nconst PICK_YOUR_OWN_LINEFEED_V1 = 'PICK_YOUR_OWN_LINEFEED_V1';\n\nconst features = [PICK_YOUR_OWN_LINEFEED_V1];\n\nfunction setFeatures(features) {\n  return {\n    active: feature => {\n      if (features) {\n        return features.indexOf(feature) > -1;\n      }\n      return false;\n    }\n  };\n}\n// </ feature-toggles>\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.href}\n  >\n    <App feature={setFeatures(features)} reducer={augment(reducer)} />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}