{"version":3,"sources":["components/Footer/Footer.js","constants.js","api/fetchTweet.js","components/ReplyToTweet/ReplyToTweet.js","components/Textarea/Textarea.js","components/TweetstormButton/TweetstormButton.js","containers/App/Counter.js","components/Form/Form.js","components/Loading/Loading.js","components/LogIn/LogIn.js","components/NavBar/NavBar.js","components/SubHeader/SubHeader.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","react-auth0-wrapper.js","api/fetchHealth.js","containers/App/fetchHealthAndSetHealthy.js","api/fetchTweetstorm.js","containers/App/makeLink.js","containers/App/makeOnClick.js","containers/App/App.js","store/augment.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["copy","Footer","healthy","version","className","href","rel","target","classnames","Date","getFullYear","BASE_URL","a","inReplyToTweetUrl","userId","fetch","body","JSON","stringify","tweetUrl","headers","method","response","json","fetchTweet","ReplyToTweet","callback","onChange","useState","isValidTweet","setIsValidTweet","waiting","setWaiting","useEffect","console","log","data","error","fetchData","htmlFor","data-testid","name","value","placeholder","rows","Textarea","item","tweet","length","id","TweetstormButton","disabled","onClick","type","icon","faSpinner","spin","Counter","danger","defaultProps","Form","items","memoizedCallback","onChangeSource","onChangeTweet","setInReplyToTweetUrl","source","onSubmit","e","preventDefault","key","map","index","some","Loading","LogIn","loginWithRedirect","faInfo","size","NavBar","logout","user","show","setShow","alt","onError","src","picture","returnTo","window","location","SubHeader","faTwitter","ToastNotification","notification","link","message","useLocalStorage","initialValue","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","makeTweetstorm","feature","backUpToLastPunctuation","take","punctuation","v","lastIndexOf","sort","b","substr","hasSpaceAfterPunctuation","endOfSource","makeSequenceNumber","undefined","linefeed","goodLinefeed","getGoodLineFeed","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","sequenceNumber","trim","Math","random","toString","makeInitialState","types","makeReducer","state","action","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","fetchHealth","dispatch","setHealthy","fetchHealthAndSetHealthy","fetchTweetstorm","makeLink","split","statusIds","makeOnClick","setSource","resetTweetstorm","App","initialState","reducer","useContext","useFeature","sub","source_","useReducer","timer","setTimeout","clearTimeout","useCallback","screen_name","augment","logEvent","newState","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","render","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","setFeatures","renderApp","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c01b7273.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries',\n  '@TweriesApp': '@TweriesApp'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-sm\">\n      <ul className=\"flex\">\n        <li className=\"m-1\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n        <li className=\"m-1\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n      </ul>\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}\n      </p>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  healthy: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired\n};\n\nexport default Footer;\n","const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const DANGER = 'danger';\n\nexport const FEATURE_V1 = 'FEATURE_V1';\n\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\nexport const SUCCESS = 'success';\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ inReplyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweet`, {\n    body: JSON.stringify({ tweetUrl: inReplyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'If you want to reply to a specific Tweet:':\n    'If you want to reply to a specific Tweet:',\n  'Optional: reply to Tweet URL': 'Optional: reply to Tweet URL',\n  'URL goes here': 'URL goes here'\n};\n\n// TODO: move to containers\nfunction ReplyToTweet({ callback, onChange, tweetUrl, userId }) {\n  const [isValidTweet, setIsValidTweet] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchTweet({\n          inReplyToTweetUrl: tweetUrl,\n          userId\n        });\n        console.log(response);\n        if (response.data) {\n          callback(null, response.data);\n          setIsValidTweet(true);\n          setWaiting(false);\n        } else {\n          callback(response.error);\n          setIsValidTweet(false);\n          setWaiting(false);\n        }\n      } catch (error) {\n        callback(error);\n        setIsValidTweet(false);\n        setWaiting(false);\n      }\n    }\n    if (tweetUrl && userId) {\n      setWaiting(true);\n      fetchData();\n    }\n  }, [callback, tweetUrl, userId]);\n\n  return (\n    <>\n      <label className=\"pb-1 text-sm\" htmlFor=\"reply-to\">\n        {copy['If you want to reply to a specific Tweet:']}\n      </label>\n      <textarea\n        className={classnames('p-2 tweries-border', {\n          'tweries-background-color-blue-white':\n            waiting === true || tweetUrl === '',\n          'bg-green-200': waiting === false && tweetUrl !== '' && isValidTweet,\n          'bg-red-200': waiting === false && tweetUrl !== '' && !isValidTweet\n        })}\n        data-testid=\"reply-to\"\n        name=\"reply-to\"\n        onChange={({ target: { value } }) => {\n          onChange(value);\n        }}\n        placeholder={copy['URL goes here']}\n        rows={1}\n        value={tweetUrl}\n      />\n    </>\n  );\n}\n\nReplyToTweet.propTypes = {\n  callback: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tweetUrl: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n};\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\nfunction Textarea({ item, onChange }) {\n  return (\n    <textarea\n      className={classnames('p-2 tweries-background-color-blue-white', {\n        'tweries-border': item.tweet.length <= MAX_LENGTH,\n        'border-2 border-red-500': item.tweet.length > MAX_LENGTH\n      })}\n      data-testid=\"textarea\"\n      name={item.id}\n      onChange={onChange}\n      rows={4}\n      value={item.tweet}\n    />\n  );\n}\n\nTextarea.propTypes = {\n  item: PropTypes.shape({ id: PropTypes.string, tweet: PropTypes.string })\n    .isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default Textarea;\n","import { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  Tweet: 'Tweet'\n};\n\nfunction TweetstormButton({ disabled, onClick, waiting }) {\n  return (\n    <button\n      className={classnames(\n        'bg-gray-300 border border-gray-500 font-bold my-4 px-6 py-2 rounded self-center',\n        {\n          'tweries-background-color-blue-button': !(disabled || waiting),\n          'cursor-auto': disabled || waiting\n        }\n      )}\n      data-testid=\"tweet\"\n      disabled={disabled || waiting}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {waiting ? <FontAwesomeIcon icon={faSpinner} spin /> : copy.Tweet}\n    </button>\n  );\n}\n\nTweetstormButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  waiting: PropTypes.bool.isRequired\n};\n\nexport default TweetstormButton;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\n// TODO: move to components\nfunction Counter({ length, type }) {\n  const value = length === 0 ? null : length;\n  const danger = type === 'tweet';\n\n  return (\n    <p\n      className={classnames('text-right text-xs', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      &nbsp;\n      {value}\n    </p>\n  );\n}\n\nCounter.propTypes = {\n  length: PropTypes.number.isRequired,\n  type: PropTypes.string\n};\n\nCounter.defaultProps = {\n  type: ''\n};\n\nexport default Counter;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReplyToTweet from '../ReplyToTweet/ReplyToTweet';\nimport Textarea from '../Textarea/Textarea';\nimport TweetstormButton from '../TweetstormButton/TweetstormButton';\nimport Counter from '../../containers/App/Counter';\nimport { MAX_LENGTH } from '../../constants';\n\nconst copy = {\n  'Edits can be made in the boxes below before publishing':\n    'Edits can be made in the boxes below before publishing',\n  'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)':\n    'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)',\n  Tweet: 'Tweet',\n  'Type your thoughts here': 'Type your thoughts here'\n};\n\nfunction Form({\n  healthy,\n  inReplyToTweetUrl,\n  items,\n  memoizedCallback,\n  onChangeSource,\n  onChangeTweet,\n  onClick,\n  setInReplyToTweetUrl,\n  source,\n  userId,\n  waiting\n}) {\n  function disabled() {\n    return (\n      !healthy ||\n      !items.length > 0 ||\n      items.some((item) => item.tweet.length > MAX_LENGTH)\n    );\n  }\n\n  return (\n    <form\n      className=\"flex flex-col\"\n      onSubmit={/* istanbul ignore next */ (e) => e.preventDefault()}\n    >\n      <ReplyToTweet\n        callback={memoizedCallback}\n        onChange={setInReplyToTweetUrl}\n        tweetUrl={inReplyToTweetUrl}\n        userId={userId}\n      />\n      <p className=\"italic py-4 text-sm\">\n        {\n          copy[\n            'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)'\n          ]\n        }\n      </p>\n      <textarea\n        className=\"p-2 tweries-background-color-blue-white tweries-border\"\n        data-testid=\"source\"\n        name=\"source\"\n        onChange={onChangeSource}\n        placeholder={copy['Type your thoughts here']}\n        rows={8}\n        value={source}\n      />\n      <Counter length={source.length} />\n      {items.length > 0 && [\n        <p className=\"italic py-4 text-sm\" key=\"copy\">\n          {copy['Edits can be made in the boxes below before publishing']}\n        </p>,\n        <ul className=\"flex flex-col\" data-testid=\"list\" key=\"list\">\n          {items.map((item, index) => (\n            <li className=\"flex flex-col\" key={item.id}>\n              <label className=\"pb-1 text-sm\" htmlFor={item.id}>\n                {`${copy.Tweet} #${index + 1}`}\n              </label>\n              <Textarea item={item} onChange={(e) => onChangeTweet(e, item)} />\n              <Counter length={item.tweet.length} type=\"tweet\" />\n            </li>\n          ))}\n        </ul>\n      ]}\n      <TweetstormButton\n        disabled={disabled()}\n        onClick={onClick}\n        waiting={waiting}\n      />\n    </form>\n  );\n}\n\nForm.propTypes = {\n  healthy: PropTypes.bool.isRequired,\n  inReplyToTweetUrl: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  memoizedCallback: PropTypes.func.isRequired,\n  onChangeSource: PropTypes.func.isRequired,\n  onChangeTweet: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  setInReplyToTweetUrl: PropTypes.func.isRequired,\n  source: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  waiting: PropTypes.bool.isRequired\n};\n\nexport default Form;\n","import React from 'react';\n\nconst copy = {\n  '...': '...'\n};\n\nfunction Loading() {\n  return (\n    <article className=\"container content-center mx-auto m-1 p-4 text-center\">\n      {copy['...']}\n    </article>\n  );\n}\n\nexport default Loading;\n","import { faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  'Log in': 'Log in',\n  'Login is necessary in order for your series of Tweets to be sent through your Twitter account':\n    'Login is necessary in order for your series of Tweets to be sent through your Twitter account'\n};\n\nfunction LogIn({ loginWithRedirect }) {\n  return (\n    <>\n      <p className=\"flex justify-center my-4\">\n        <button\n          className=\"font-bold px-6 py-2 rounded tweries-background-color-blue-button\"\n          data-testid=\"login\"\n          onClick={() => loginWithRedirect({})}\n          type=\"button\"\n        >\n          {copy['Log in']}\n        </button>\n      </p>\n      <p className=\"flex justify-center my-4\">\n        <FontAwesomeIcon\n          className=\"tooltip tweries-color-dark-blue\"\n          icon={faInfo}\n          size=\"1x\"\n        />\n        <span className=\"p-3 mt-6 -ml-1 tooltip-text tweries-border\">\n          {\n            copy[\n              'Login is necessary in order for your series of Tweets to be sent through your Twitter account'\n            ]\n          }\n        </span>\n      </p>\n    </>\n  );\n}\n\nLogIn.propTypes = {\n  loginWithRedirect: PropTypes.func.isRequired\n};\n\nexport default LogIn;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst copy = {\n  'Log out': 'Log out'\n};\n\nfunction NavBar({ logout, user }) {\n  const [show, setShow] = useState(true);\n\n  return (\n    <>\n      <p className=\"flex items-center\">\n        {show && (\n          <img\n            alt={user.name}\n            className=\"border mr-2 rounded-full tweries-border-color\"\n            onError={/* istanbul ignore next */ () => setShow(false)}\n            src={user.picture}\n          />\n        )}\n        {user.name}\n      </p>\n      <button\n        className=\"px-4 underline\"\n        data-testid=\"logout\"\n        onClick={() =>\n          logout({\n            returnTo: window.location.href\n          })\n        }\n        type=\"button\"\n      >\n        {copy['Log out']}\n      </button>\n    </>\n  );\n}\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default NavBar;\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst copy = {\n  Tweries: 'Tweries',\n  \"When 280 characters just aren't enough\":\n    \"When 280 characters just aren't enough\"\n};\n\nfunction SubHeader() {\n  return (\n    <>\n      <h1 className=\"font-bold my-4 text-5xl text-center tweries-font-family\">\n        {copy.Tweries}\n      </h1>\n      <h2 className=\"my-4 text-center\">\n        {copy[\"When 280 characters just aren't enough\"]}\n      </h2>\n      <p className=\"my-4 text-center\">\n        <FontAwesomeIcon\n          className=\"tweries-color-blue\"\n          icon={faTwitter}\n          size=\"3x\"\n        />\n      </p>\n    </>\n  );\n}\n\nexport default SubHeader;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DANGER, SUCCESS } from '../../constants';\n\nconst copy = {\n  'Your tweetstorm has been created!': 'Your tweetstorm has been created!'\n};\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { link, message, type } = notification;\n    return (\n      <p\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === SUCCESS,\n          'bg-red-100 border-red-800 text-red-800': type === DANGER\n        })}\n        data-testid=\"notification\"\n      >\n        <span>\n          {type === DANGER && message}\n          {type === SUCCESS && (\n            <a\n              className=\"underline\"\n              href={link}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {copy['Your tweetstorm has been created!']}\n            </a>\n          )}\n        </span>\n        <button\n          className=\"font-bold\"\n          data-testid=\"dismiss\"\n          onClick={onClick}\n          type=\"button\"\n        >\n          &times;\n        </button>\n      </p>\n    );\n  }\n  return null;\n}\n\nToastNotification.defaultProps = {\n  notification: null\n};\n\nToastNotification.propTypes = {\n  notification: PropTypes.object,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  function setValue(value) {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport { MAX_LENGTH, NEWLINE } from '../constants';\n\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\n// CREDIT: https://gist.github.com/gordonbrander/2230317\nfunction generateUniqueId() {\n  return `_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    // INFO: index + 1 is the character after the punctuation\n    return v.substr(take, index + 1, 1) === ' ';\n  }\n\n  function endOfSource(copy, take) {\n    return copy === take;\n  }\n\n  function backUpToLastPunctuation(copy, take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map((punctuation) => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (\n      data.value !== -1 &&\n      hasSpaceAfterPunctuation(data.value, take) &&\n      !endOfSource(copy, take)\n    ) {\n      return v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return ` ${SEQUENCE_NUMBER_PLACEHOLDER}`;\n    }\n    if (index === 0 && length === 1) {\n      return '';\n    }\n    return ` ${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  function getGoodLineFeed(linefeed) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      return NEWLINE;\n    }\n    return linefeed;\n  }\n\n  function tweetstorm({ linefeed, source }) {\n    const goodLinefeed = getGoodLineFeed(linefeed);\n\n    let copy = replaceNewlinesWithNewline(goodLinefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      const max = MAX_LENGTH - makeSequenceNumber().length; // INFO: 1 space before the sequence number\n      take = v.prune(copy, max, '');\n      if (take.indexOf(goodLinefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(goodLinefeed));\n        copy = v.substr(copy, take.length + goodLinefeed.length);\n      } else {\n        take = backUpToLastPunctuation(copy, take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweets = parts.map((part, index) => {\n      const sequenceNumber = makeSequenceNumber(index, parts.length);\n      const tweet = `${v.trim(part)}${sequenceNumber}`;\n      return { id: generateUniqueId(), tweet };\n    });\n\n    return tweets;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { NEWLINE } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({ feature }) {\n  return {\n    healthy: false,\n    items: makeTweetstorm(feature)({\n      linefeed: NEWLINE,\n      source: ''\n    }),\n    linefeed: NEWLINE,\n    notification: null,\n    source: '',\n    userId: ''\n  };\n}\n\nexport default makeInitialState;\n","import { SUCCESS } from '../constants';\nimport makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  APPEND_SCREEN_NAME: 'APPEND_SCREEN_NAME',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  CHANGE_TWEET: 'CHANGE_TWEET',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.APPEND_SCREEN_NAME: {\n        const source = `@${action.value} ${state.source}`;\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            linefeed: state.linefeed,\n            source\n          }),\n          source\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.CHANGE_TWEET: {\n        return {\n          ...state,\n          items: [...state.items].map((item) => {\n            const copy = { ...item };\n            if (copy.id === action.value.id) {\n              copy.tweet = action.value.tweet;\n            }\n            return copy;\n          })\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        if (action.value.type === SUCCESS) {\n          return {\n            ...makeInitialState({ feature }),\n            healthy: state.healthy,\n            notification: action.value,\n            userId: state.userId\n          };\n        }\n        return {\n          ...state,\n          notification: action.value\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v2/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import fetchHealth from '../../api/fetchHealth';\nimport { types } from '../../store/makeReducer';\n\nasync function fetchHealthAndSetHealthy(dispatch) {\n  function setHealthy(error, response) {\n    if (error) {\n      console.log(error);\n      dispatch({ type: types.SET_HEALTHY, value: false });\n    }\n    if (response) {\n      console.log(response);\n      dispatch({\n        type: types.SET_HEALTHY,\n        value: !response.error\n      });\n    }\n  }\n\n  try {\n    const response = await fetchHealth();\n    setHealthy(null, response);\n  } catch (error) {\n    setHealthy(error);\n  }\n}\n\nexport default fetchHealthAndSetHealthy;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ inReplyToTweetUrl, items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweetstorm`, {\n    body: JSON.stringify({ inReplyToTweetUrl, items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","function makeLink(data) {\n  return `https://twitter.com/${data.userId.split('|')[1]}/status/${\n    data.statusIds[0]\n  }`;\n}\n\nexport default makeLink;\n","import fetchTweetstorm from '../../api/fetchTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport { DANGER, SUCCESS } from '../../constants';\nimport makeLink from './makeLink';\n\nfunction makeOnClick({\n  dispatch,\n  inReplyToTweetUrl,\n  items,\n  setInReplyToTweetUrl,\n  setSource,\n  setWaiting,\n  userId\n}) {\n  function resetTweetstorm(error, response) {\n    let link = null;\n    let message = null;\n    let type = SUCCESS;\n    if (error || response.error) {\n      message = error ? error.message : response.error.message;\n      type = DANGER;\n    } else {\n      link = makeLink(response.data);\n    }\n    console.log(error, response);\n    dispatch({\n      type: types.RESET_TWEETSTORM,\n      value: {\n        link,\n        message,\n        type\n      }\n    });\n    if (type === SUCCESS) {\n      setInReplyToTweetUrl('');\n      setSource('');\n    }\n    setWaiting(false);\n  }\n\n  async function onClick() {\n    setWaiting(true);\n    try {\n      const response = await fetchTweetstorm({\n        inReplyToTweetUrl,\n        items,\n        userId\n      });\n      resetTweetstorm(null, response);\n    } catch (error) {\n      resetTweetstorm(error);\n    }\n  }\n\n  return onClick;\n}\n\nexport default makeOnClick;\n","import { useFeature } from 'feature-provider';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport { version } from '../../../package.json';\nimport Footer from '../../components/Footer/Footer';\nimport Form from '../../components/Form/Form';\nimport Loading from '../../components/Loading/Loading';\nimport LogIn from '../../components/LogIn/LogIn';\nimport NavBar from '../../components/NavBar/NavBar';\nimport SubHeader from '../../components/SubHeader/SubHeader';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport { DANGER } from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport fetchHealthAndSetHealthy from './fetchHealthAndSetHealthy';\nimport makeOnClick from './makeOnClick';\n\nfunction App({ initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  const feature = useFeature();\n\n  useEffect(() => {\n    fetchHealthAndSetHealthy(dispatch);\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    items: makeTweetstorm(feature)({\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (notification && notification.type !== DANGER) {\n      const timer = setTimeout(() => {\n        dispatch({ type: types.DISMISS_TOAST });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // TODO: add to global state? YES!\n  const [inReplyToTweetUrl, setInReplyToTweetUrl] = useState('');\n  const [waiting, setWaiting] = useState(false);\n\n  const onClick = makeOnClick({\n    dispatch,\n    inReplyToTweetUrl,\n    items,\n    setInReplyToTweetUrl,\n    setSource,\n    setWaiting,\n    userId\n  });\n\n  const memoizedCallback = useCallback((error, data) => {\n    if (data) {\n      dispatch({\n        type: types.APPEND_SCREEN_NAME,\n        value: data.user.screen_name\n      });\n    }\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <header className=\"flex flex-row justify-between\">\n        {isAuthenticated ? (\n          <NavBar logout={logout} user={user} />\n        ) : (\n          <span className=\"my-4\" />\n        )}\n      </header>\n      <SubHeader />\n      {isAuthenticated ? (\n        <Form\n          healthy={healthy}\n          inReplyToTweetUrl={inReplyToTweetUrl}\n          items={items}\n          memoizedCallback={memoizedCallback}\n          onChangeSource={(e) => {\n            dispatch({\n              type: types.CHANGE_SOURCE,\n              value: e.target.value\n            });\n            setSource(e.target.value);\n          }}\n          onChangeTweet={(e, item) => {\n            dispatch({\n              type: types.CHANGE_TWEET,\n              value: {\n                id: item.id,\n                tweet: e.target.value\n              }\n            });\n          }}\n          onClick={onClick}\n          setInReplyToTweetUrl={setInReplyToTweetUrl}\n          source={source}\n          userId={userId}\n          waiting={waiting}\n        />\n      ) : (\n        <LogIn loginWithRedirect={loginWithRedirect} />\n      )}\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nApp.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  reducer: PropTypes.func.isRequired\n};\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_SOURCE:\n      case types.CHANGE_TWEET:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import { FEATURE_V1 } from './constants';\n\nconst features = [FEATURE_V1];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './styles.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nfunction onRedirectCallback(appState) {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n}\n\nfunction renderApp(logEvent) {\n  const feature = setFeatures(features);\n  return (\n    <FeatureProvider features={features}>\n      <App\n        initialState={makeInitialState({ feature })}\n        reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n      />\n    </FeatureProvider>\n  );\n}\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>{({ logEvent }) => renderApp(logEvent)}</Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root'),\n  initializeReactGA()\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}