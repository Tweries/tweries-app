{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.js","components/Layout/Layout.js","constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","api/fetchTweet.js","components/ReplyToTweet/ReplyToTweet.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","containers/App/Counter.js","containers/App/TweetstormButton.js","containers/App/App.js","store/augment.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","copy","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","className","alt","name","key","src","picture","aria-label","role","data-testid","onClick","returnTo","href","Layout","BASE_URL","EDITABLE_TWEETSTORM_V1","EDITABLE_TWEETSTORM_COPY_V1","REPLY_TO_TWEET_V1","MAX_LENGTH","NEWLINE","a","fetch","response","json","fetchHealth","items","replyToStatusId","userId","body","JSON","stringify","headers","method","fetchTweetstorm","Tweries","Footer","healthy","version","classnames","Date","getFullYear","rel","target","replyToTweetUrl","tweetUrl","fetchTweet","ReplyToTweet","onChangeId","onChangeUrl","value","useState","id","setId","waiting","setWaiting","useEffect","statusId","fetchData","onChange","placeholder","rows","ToastNotification","notification","message","type","useLocalStorage","initialValue","item","localStorage","getItem","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","SEQUENCE_NUMBER_PLACEHOLDER","makeTweetstorm","feature","backUpToLastPunctuation","take","data","map","punctuation","v","lastIndexOf","sort","b","index","substr","hasSpaceAfterPunctuation","endOfSource","makeSequenceNumber","length","undefined","hashtags","linefeed","source","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","tweet","sequenceNumber","trim","Math","random","toString","makeInitialState","types","CHANGE_HASHTAGS","CHANGE_LINEFEED","CHANGE_SOURCE","CHANGE_TWEET","DISMISS_TOAST","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","makeReducer","state","action","Counter","danger","TweetstormButton","disabled","icon","faSpinner","spin","App","initialState","reducer","loading","useFeature","setHealthy","sub","hashtags_","setHashtags","source_","setSource","useReducer","timer","setTimeout","clearTimeout","replyToTweetId","setReplyToTweetId","setReplyToTweetUrl","resetTweetstorm","onSubmit","e","preventDefault","active","readOnly","renderTextarea","find","augment","logEvent","newState","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","setFeatures","renderApp","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8dAGMA,EAA4B,kBAChCC,OAAOC,QAAQC,aAAa,GAAIC,SAASC,MAAOJ,OAAOK,SAASC,WAErDC,EAAeC,IAAMC,gBAErBC,EAAW,kBAAMC,qBAAWJ,ICNnCK,EACM,SADNA,EAEO,UAoDEC,EAjDA,SAAC,GAMV,EALJC,SAKK,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,OACAC,EACI,EADJA,KAEA,OACE,4BAAQC,UAAU,8BACfJ,EACC,CACE,yBACEK,IAAKF,EAAKG,KACVF,UAAU,iCACVG,IAAI,MACJC,IAAKL,EAAKM,UAEZ,0BAAMF,IAAI,QACR,0BAAMG,aAAW,QAAQC,KAAK,OAA9B,gBAEQ,IACPR,EAAKG,MAER,4BACEF,UAAU,4DACVQ,cAAY,SACZL,IAAI,SACJM,QAAS,kBACPX,EAAO,CACLY,SAAU7B,OAAOK,SAASyB,SAI7BlB,IAIL,4BACEO,UAAU,4DACVQ,cAAY,QACZC,QAAS,kBAAMZ,EAAkB,MAEhCJ,KCVImB,I,+BChCFC,EAGP,oCAEOC,EAAyB,yBACzBC,EAA8B,8BAE9BC,EAAoB,oBAGpBC,EAAa,IACbC,EAAU,K,4CCjBvB,8BAAAC,EAAA,sEACyBC,MAAM,GAAD,OAAIP,EAAJ,mBAD9B,cACQQ,EADR,gBAEqBA,EAASC,OAF9B,cAEQA,EAFR,yBAGSA,GAHT,4C,sBAMeC,M,uFCNf,qCAAAJ,EAAA,6DAAiCK,EAAjC,EAAiCA,MAAOC,EAAxC,EAAwCA,gBAAiBC,EAAzD,EAAyDA,OAAzD,SACyBN,MAAM,GAAD,OAAIP,EAAJ,sBAAkC,CAC5Dc,KAAMC,KAAKC,UAAU,CAAEL,QAAOC,kBAAiBC,WAC/CI,QAAS,CACP,eAAgB,oBAElBC,OAAQ,SANZ,cACQV,EADR,gBAQqBA,EAASC,OAR9B,cAQQA,EARR,yBASSA,GATT,4C,sBAYeU,M,4CCXTvC,EAAO,CACX,qBAAsB,qBACtBwC,QAAS,UACT,cAAe,eAsCFC,MAnCf,YAAuC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACzB,OACE,4BAAQpC,UAAU,sCAChB,uBACEA,UAAWqC,IAAW,CACpB,iBAAkBF,EAClB,gBAAiBA,KAGlB1C,EAAKwC,QANR,KAMmBG,EANnB,UAMoC,IAAIE,MAAOC,cAAe,KAE9D,wBAAIvC,UAAU,QACZ,wBAAIA,UAAU,+BACZ,uBACEW,KAAK,iCACL6B,IAAI,sBACJC,OAAO,UAENhD,EAAK,iBAGV,wBAAIO,UAAU,+BACZ,uBACEW,KAAK,6BACL6B,IAAI,sBACJC,OAAO,UAENhD,EAAK,2B,4CClClB,mCAAA0B,EAAA,6DAA4BuB,EAA5B,EAA4BA,gBAAiBhB,EAA7C,EAA6CA,OAA7C,SACyBN,MAAM,GAAD,OAAIP,EAAJ,iBAA6B,CACvDc,KAAMC,KAAKC,UAAU,CAAEc,SAAUD,EAAiBhB,WAClDI,QAAS,CACP,eAAgB,oBAElBC,OAAQ,SANZ,cACQV,EADR,gBAQqBA,EAASC,OAR9B,cAQQA,EARR,yBASSA,GATT,4C,sBAYesB,M,4CCVTnD,EAAO,CACX,+BAAgC,gCAqDnBoD,MAlDf,YAAmE,IAA3CC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,YAAarB,EAAiB,EAAjBA,OAAQsB,EAAS,EAATA,MAAS,EAC5CC,mBAAS,MADmC,mBACzDC,EADyD,KACrDC,EADqD,OAElCF,oBAAS,GAFyB,mBAEzDG,EAFyD,KAEhDC,EAFgD,KA+BhE,OA3BAC,qBAAU,WAAM,4CAEd,8BAAAnC,EAAA,+EAE+ByB,EAAW,CACpCF,gBAAiBM,EACjBtB,WAJN,iBAEY6B,EAFZ,EAEYA,WAKNF,GAAW,GACXF,EAAMI,KAENF,GAAW,GACXF,EAAM,OAXZ,gDAcIE,GAAW,GACXF,EAAM,MAfV,0DAFc,sBACdE,GAAW,GADG,mCAoBdG,KACC,CAAC9B,EAAQsB,IAEZM,qBAAU,WACRR,EAAWI,KACV,CAACA,EAAIJ,IAGN,8BACE9C,UAAWqC,IAAW,qCAAsC,CAC1D,eAA2B,IAAZe,GAA8B,KAAVJ,EACnC,gBAA4B,IAAZI,GAA+B,KAAVJ,GAAuB,OAAPE,EACrD,cAA0B,IAAZE,GAA+B,KAAVJ,GAAuB,OAAPE,IAErD1C,cAAY,WACZiD,SAAU,YAA4B,IAAfT,EAAc,EAAxBP,OAAUO,MAErBD,EAAYC,IAEdU,YAAajE,EAAK,gCAClBkE,KAAM,EACNX,MAAOA,KC7BEY,MArBf,YAAuD,IAA1BC,EAAyB,EAAzBA,aAAcpD,EAAW,EAAXA,QACzC,GAAIoD,EAAc,CAAC,IACTC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KACjB,OACE,yBACE/D,UAAWqC,IAAW,+CAAgD,CACpE,+CAAyD,YAAT0B,EAChD,yCAAmD,WAATA,KAG5C,8BAAOD,GACP,4BAAQ9D,UAAU,YAAYQ,cAAY,UAAUC,QAASA,GAA7D,SAMJ,OAAO,MCQIuD,MAzBf,SAAyB7D,EAAK8D,GAAe,IAAD,EACJhB,oBAAS,WAC7C,IACE,IAAMiB,EAAOrF,OAAOsF,aAAaC,QAAQjE,GACzC,OAAO+D,EAAOtC,KAAKyC,MAAMH,GAAQD,EACjC,MAAOK,GAEP,OADAC,QAAQC,IAAIF,GACLL,MAP+B,mBACnCQ,EADmC,KACtBC,EADsB,KAsB1C,MAAO,CAACD,EAXS,SAAAzB,GACf,IACE,IAAM2B,EACJ3B,aAAiB4B,SAAW5B,EAAMyB,GAAezB,EACnD0B,EAAeC,GACf9F,OAAOsF,aAAaU,QAAQ1E,EAAKyB,KAAKC,UAAU8C,IAChD,MAAOL,GACPC,QAAQC,IAAIF,O,gBClBZQ,EAA8B,MAkHrBC,MAtGf,SAAwBC,GAUtB,SAASC,EAAwBxF,EAAMyF,GACrC,IACMC,EADe,CAAC,IAAK,SAAK,IAAK,IAAK,IAAK,IAAK,KAEjDC,KAAI,SAAAC,GAAW,MAAK,CACnBlF,IAAKkF,EACLrC,MAAOsC,IAAEC,YAAYL,EAAMG,OAE5BG,MAAK,SAACrE,EAAGsE,GACR,OAAItE,EAAE6B,MAAQyC,EAAEzC,OACN,EAEN7B,EAAE6B,MAAQyC,EAAEzC,MACP,EAEF,KACN,GAQL,OANkB,IAAhBmC,EAAKnC,OA1BT,SAAkC0C,EAAOR,GAEvC,MAAwC,MAAjCI,IAAEK,OAAOT,EAAMQ,EAAQ,EAAG,GAyB/BE,CAAyBT,EAAKnC,MAAOkC,KAtBzC,SAAqBzF,EAAMyF,GACzB,OAAOzF,IAASyF,EAsBbW,CAAYpG,EAAMyF,KAEnBA,EAAOI,IAAEK,OAAOT,EAAM,EAAGC,EAAKnC,MAAQ,IAEjCkC,EAGT,SAASY,EAAmBJ,EAAOK,GACjC,YAAcC,IAAVN,QAAkCM,IAAXD,EACnB,IAAN,OAAWjB,GAEC,IAAVY,GAA0B,IAAXK,EACV,GAEH,IAAN,OAAWL,EAAQ,EAAnB,YAAwBK,GAwD1B,OA5CA,YAAqD,IAA/BE,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAEvB,OAAbD,QAAkCF,IAAbE,GAAuC,KAAbA,IACjD3B,QAAQC,IAAI,kBACZ0B,EAAWhF,GAMb,IAHA,IAAIzB,EAhBN,SAAoCyG,EAAUC,GAC5C,IAAI1G,EAAO0G,EAAOC,QAIlB,OAHIF,IAAahF,IACfzB,EAAOA,EAAK4G,QAAQ,OAAQnF,IAEvBzB,EAWI6G,CAA2BJ,EAAUC,GAC1CI,EAAQ,GAES,IAAhB9G,EAAKsG,QAAc,CACxB,IAAIb,OAAI,EACJsB,OAAG,EAELA,EADEP,EAASF,OAAS,EACd9E,EAAagF,EAASF,OAAS,EAAID,IAAqBC,OAExD9E,EAAa6E,IAAqBC,QAGV,KADhCb,EAAOI,IAAEmB,MAAMhH,EAAM+G,EAAK,KACjBE,QAAQR,IACfhB,EAAOI,IAAEK,OAAOT,EAAM,EAAGA,EAAKwB,QAAQR,IACtCzG,EAAO6F,IAAEK,OAAOlG,EAAMyF,EAAKa,OAASG,EAASH,UAE7Cb,EAAOD,EAAwBxF,EAAMyF,GACrCzF,EAAO6F,IAAEK,OAAOlG,EAAMyF,EAAKa,OAAS,IAEtCQ,EAAMI,KAAKzB,GAeb,OAZmBqB,EAAMnB,KAAI,SAACwB,EAAMlB,GAClC,IAAImB,EACEC,EAAiBhB,EAAmBJ,EAAOa,EAAMR,QAOvD,OALEc,EADEZ,EAASF,OAAS,EACf,UAAMT,IAAEyB,KAAKH,GAAb,YAAsBX,GAAtB,OAAiCa,GAEjC,UAAMxB,IAAEyB,KAAKH,IAAb,OAAqBE,GAGrB,CAAE5D,GApGX,IACA8D,KAAKC,SACFC,SAAS,IACTvB,OAAO,EAAG,GAiGsBkB,c,QCzFxBM,MAhBf,YAAwC,IAAZnC,EAAW,EAAXA,QAC1B,MAAO,CACLiB,SAAU,GACV9D,SAAS,EACTX,MAAOuD,EAAeC,EAAfD,CAAwB,CAC7BkB,SAAU,GACVC,SAAUhF,EACViF,OAAQ,KAEVD,SAAUhF,EACV2C,aAAc,KACdsC,OAAQ,GACRzE,OAAQ,O,yjBCZL,IAAM0F,GAAQ,CACnBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,cAAe,gBACfC,aAAc,eACdC,cAAe,gBACfC,iBAAkB,mBAClBC,YAAa,cACbC,YAAa,eAoFAC,OAjFf,SAAqB7C,GA8EnB,OA7EA,WAAiE,IAAhD8C,EAA+C,uDAAvCX,EAAiB,CAAEnC,YAAY+C,EAAQ,uCAC9D,OAAQA,EAAOhE,MACb,KAAKqD,GAAMC,gBACT,OAAO,EAAP,GACKS,EADL,CAEE7B,SAAU8B,EAAO/E,MACjBxB,MAAOuD,EAAeC,EAAfD,CAAwB,CAC7BkB,SAAU8B,EAAO/E,MACjBkD,SAAU4B,EAAM5B,SAChBC,OAAQ2B,EAAM3B,WAIpB,KAAKiB,GAAME,gBACT,OAAO,EAAP,GACKQ,EADL,CAEEtG,MAAOuD,EAAeC,EAAfD,CAAwB,CAC7BkB,SAAU6B,EAAM7B,SAChBC,SAAU6B,EAAO/E,MACjBmD,OAAQ2B,EAAM3B,SAEhBD,SAAU6B,EAAO/E,QAGrB,KAAKoE,GAAMG,cACT,OAAO,EAAP,GACKO,EADL,CAEEtG,MAAOuD,EAAeC,EAAfD,CAAwB,CAC7BkB,SAAU6B,EAAM7B,SAChBC,SAAU4B,EAAM5B,SAChBC,OAAQ4B,EAAO/E,QAEjBmD,OAAQ4B,EAAO/E,QAGnB,KAAKoE,GAAMI,aACT,OAAO,EAAP,GACKM,EADL,CAEEtG,MAAO,YAAIsG,EAAMtG,OAAO4D,KAAI,SAAAlB,GAI1B,OAHIA,EAAKhB,KAAO6E,EAAO/E,MAAME,KAC3BgB,EAAK2C,MAAQkB,EAAO/E,MAAM6D,OAErB3C,OAIb,KAAKkD,GAAMK,cACT,OAAO,EAAP,GACKK,EADL,CAEEjE,aAAc,OAGlB,KAAKuD,GAAMM,iBACT,OAAO,EAAP,GACKP,EAAiB,CAAEnC,YADxB,CAEE7C,QAAS2F,EAAM3F,QACf0B,aAAckE,EAAO/E,MACrBtB,OAAQoG,EAAMpG,SAGlB,KAAK0F,GAAMO,YACT,OAAO,EAAP,GACKG,EADL,CAEE3F,QAAS4F,EAAO/E,QAGpB,KAAKoE,GAAMQ,YACT,OAAO,EAAP,GACKE,EADL,CAEEpG,OAAQqG,EAAO/E,QAGnB,QACE,OAAO8E,KCpEAE,OAhBf,YAAoC,IAAjBjC,EAAgB,EAAhBA,OACX/C,EAAmB,IAAX+C,EAAe,GAAKA,EAC5BkC,EAAkB,UAFS,EAARlE,KAIzB,OACE,2BACE/D,UAAWqC,IAAW,kBAAmB,CACvC,iBAAkB4F,GAAWA,GAAUlC,GAAU9E,EACjD,gBAAiBgH,GAAUlC,EAAS9E,KAGrC+B,I,kBCSQkF,OAnBf,YAA2D,IAA/BC,EAA8B,EAA9BA,SAAU1H,EAAoB,EAApBA,QAAS2C,EAAW,EAAXA,QAC7C,OACE,4BACE+E,SAAUA,EACVnI,UAAWqC,IACT,6EACA,CACE,0BAA2B8F,EAC3B,cAAeA,IAGnB3H,cAAY,QACZC,QAASA,GAER2C,EAAU,kBAAC,KAAD,CAAiBgF,KAAMC,KAAWC,MAAM,IAAW,U,+NCIpE,IAAM7I,GAAO,CACX,MAAO,MACP,yDACE,yDACF,aAAc,aACd,8EACE,8EACF,gDACE,gDACFwC,QAAS,UACT,oBAAqB,oBACrB,YAAa,aAiPAsG,OA9Of,YAAyC,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QAAW,EAOlClJ,IALFK,EAFoC,EAEpCA,gBACA8I,EAHoC,EAGpCA,QACA7I,EAJoC,EAIpCA,kBACAC,EALoC,EAKpCA,OACAC,EANoC,EAMpCA,KAGIiF,EAAU2D,uBAEhB,SAASC,EAAWtE,EAAOa,GACzB,IAAIrB,EAAUqB,EACVnC,GAAQ,EACRsB,IACFR,EAAUQ,EACVtB,GAAQ,GAEVuB,QAAQC,IAAIV,GACZnE,EAAS,CAAEoE,KAAMqD,GAAMO,YAAa3E,UAGtCM,qBAAU,WAAM,4CACd,sBAAAnC,EAAA,+EAEuBI,IAFvB,OAGIqH,EAAW,KAHf,wDAKIA,EAAW,EAAD,IALd,0DADc,uBAAC,WAAD,wBASdpF,KACC,IAEHF,qBAAU,WACJ1D,GAAmBG,GACrBJ,EAAS,CAAEoE,KAAMqD,GAAMQ,YAAa5E,MAAOjD,EAAK8I,QAEjD,CAACjJ,EAAiBG,IAtCiB,MAwCLiE,EAAgB,WAAY,IAxCvB,mBAwC/B8E,EAxC+B,KAwCpBC,EAxCoB,OAyCT/E,EAAgB,SAAU,IAzCjB,mBAyC/BgF,EAzC+B,KAyCtBC,EAzCsB,OA8ClCC,qBAAWT,E,2VAAD,IACTD,EADS,CAEZvC,SAAU6C,EACVtH,MAAOuD,EAAeC,EAAfD,CAAwB,CAC7BkB,SAAU6C,EACV5C,SAAUsC,EAAatC,SACvBC,OAAQ6C,IAEV7C,OAAQ6C,KAtD4B,0BA4ClC/C,EA5CkC,EA4ClCA,SAAU9D,EA5CwB,EA4CxBA,QAASX,EA5Ce,EA4CfA,MAAOqC,EA5CQ,EA4CRA,aAAcsC,EA5CN,EA4CMA,OAAQzE,EA5Cd,EA4CcA,OAClD/B,EA7CoC,KAyDtC2D,qBAAU,WACR,GAAIO,EAAc,CAChB,IAAMsF,EAAQC,YAAW,WACvB7E,QAAQC,IAAI,gBAAiBX,GAC7BlE,EAAS,CAAEoE,KAAMqD,GAAMK,kBACtB,KACH,OAAO,kBAAM4B,aAAaF,OAE3B,CAACtF,IAjEkC,MAmEMZ,mBAAS,MAnEf,mBAmE/BqG,EAnE+B,KAmEfC,GAnEe,QAoEQtG,mBAAS,IApEjB,qBAoE/BP,GApE+B,MAoEd8G,GApEc,SAqERvG,oBAAS,GArED,qBAqE/BG,GArE+B,MAqEtBC,GArEsB,MAkHtC,SAASoG,GAAgBnF,EAAOa,GAC9B,IAAIrB,EAAUrE,GAAK,iDACfsE,EAAO,UACPO,IACFR,EAAUQ,EAAMR,QAChBC,EAAO,UAETQ,QAAQC,IAAIF,EAAOa,GACnBxF,EAAS,CACPoE,KAAMqD,GAAMM,iBACZ1E,MAAO,CACLc,UACAC,UAGJkF,EAAU,IACVF,EAAY,IACZQ,GAAkB,MAClBC,GAAmB,IACnBnG,IAAW,GArIyB,8CAwItC,sBAAAlC,EAAA,6DACEkC,IAAW,GADb,kBAGuBrB,EAAgB,CACjCR,QACAC,gBAAiB6H,EACjB5H,WANN,OAQI+H,GAAgB,KARpB,wDAUIA,GAAgB,EAAD,IAVnB,0DAxIsC,sBAsJtC,OAAOf,EACL,6BAAS1I,UAAU,wDAChBP,GAAK,QAGR,6BAASO,UAAU,4CACjB,kBAAC,EAAD,CACEL,SAAUA,EACVC,gBAAiBA,EACjBC,kBAAmBA,EACnBC,OAAQA,EACRC,KAAMA,IAER,wBAAIC,UAAU,4CACXP,GAAKwC,SAER,0BAAMjC,UAAU,gBAAgB0J,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAC9C5E,EAAQ6E,OAAO7I,IACd,kBAAC,EAAD,CACE8B,WAAYyG,GACZxG,YAAayG,GACb9H,OAAQA,EACRsB,MAAON,KAGX,2BAAO1C,UAAU,YAEbP,GACE,+EAEF,IACF,0BAAMO,UAAU,aAAaP,GAAK,gBAEpC,8BACEO,UAAU,iDACVQ,cAAY,SACZkD,YAAajE,GAAK,qBAClBkE,KAAM,EACNX,MAAOmD,EACP1C,SAAU,SAAAkG,GACRhK,EAAS,CAAEoE,KAAMqD,GAAMG,cAAevE,MAAO2G,EAAElH,OAAOO,QACtDiG,EAAUU,EAAElH,OAAOO,UAGvB,kBAAC,GAAD,CAAS+C,OAAQI,EAAOJ,SACxB,8BACE/F,UAAU,iDACVQ,cAAY,WACZiD,SAAU,SAAAkG,GACRhK,EAAS,CAAEoE,KAAMqD,GAAMC,gBAAiBrE,MAAO2G,EAAElH,OAAOO,QACxD+F,EAAYY,EAAElH,OAAOO,QAEvBU,YAAajE,GAAK,aAClBkE,KAAM,EACNI,KAAK,OACLf,MAAOiD,IAET,kBAAC,GAAD,CAASF,OAAQE,EAASF,SACzBvE,EAAMuE,OAAS,GAAK,CACnBf,EAAQ6E,OAAO9I,GACb,2BAAOf,UAAU,WAAWG,IAAI,QAC7BV,GAAK,2DAEN,KACJ,wBAAIO,UAAU,gBAAgBQ,cAAY,OAAOL,IAAI,QAClDqB,EAAM4D,KAAI,SAAClB,EAAMwB,GAAP,OACT,wBAAI1F,UAAU,gBAAgBG,IAAKuF,GAxI/C,SAAwBxB,GACtB,OAAIc,EAAQ6E,OAAO/I,GAEf,8BACEd,UAAWqC,IAAW,0BAA2B,CAC/C,yBAA0B6B,EAAK2C,MAAMd,QAAU9E,EAC/C,0BAA2BiD,EAAK2C,MAAMd,OAAS9E,IAEjDwC,SAAU,SAAAkG,GACRhK,EAAS,CACPoE,KAAMqD,GAAMI,aACZxE,MAAO,CACLE,GAAIgB,EAAKhB,GACT2D,MAAO8C,EAAElH,OAAOO,UAItBW,KAAM,EACNX,MAAOkB,EAAK2C,QAKd,8BACE7G,UAAU,iDACVmI,UAAQ,EACR2B,UAAQ,EACRnG,KAAM,EACNX,MAAOkB,EAAK2C,QA6GLkD,CAAe7F,GAChB,kBAAC,GAAD,CAAS6B,OAAQ7B,EAAK2C,MAAMd,OAAQhC,KAAK,gBAKjD,kBAAC,GAAD,CACEoE,UAvJHvI,IACA4B,EAAMuE,OAAS,IACf5D,GACDX,EAAMwI,MAAK,SAAA9F,GAAI,OAAIA,EAAK2C,MAAMd,OAAS,OAqJnCtF,QAjO8B,4CAkO9B2C,QAASA,MAGb,kBAAC,EAAD,CACES,aAAcA,EACdpD,QAAS,kBAAMd,EAAS,CAAEoE,KAAMqD,GAAMK,mBAExC,kBAAC,EAAD,CAAQtF,QAASA,EAASC,QAASA,QCtP1B6H,OArBf,YAAyC,IAAtBC,EAAqB,EAArBA,SAAUzB,EAAW,EAAXA,QAkB3B,OAhBA,SAAmBX,EAAOC,GAGxB,IAAMoC,EAAW1B,EAAQX,EAAOC,GAEhC,OAAQA,EAAOhE,MACb,KAAKqD,GAAMC,gBACX,KAAKD,GAAMG,cACX,KAAKH,GAAMI,aACT,MACF,QACE0C,EAASnC,EAAOhE,KAAMgE,EAAO/E,OAGjC,OAAOmH,I,iBCLIC,GAPE,CACftJ,EACAC,EfKwB,aeHxBC,G,SCAaqJ,OARf,WAGIC,KAAQC,WAAW,kBACnBD,KAAQE,SAAS,MCKDC,QACW,cAA7B5L,OAAOK,SAASwL,UAEe,UAA7B7L,OAAOK,SAASwL,UAEhB7L,OAAOK,SAASwL,SAASC,MACvB,2DC4BNC,iBACE,mBrBrC2B,SAAC,GAIvB,IAHLC,EAGI,EAHJA,SAGI,IAFJC,0BAEI,MAFiBlM,EAEjB,EADDmM,EACC,mDAC0C9H,qBAD1C,mBACGrD,EADH,KACoBoL,EADpB,OAEoB/H,qBAFpB,mBAEGlD,EAFH,KAESkL,EAFT,OAG4BhI,qBAH5B,mBAGGiI,EAHH,KAGgBC,EAHhB,OAI0BlI,oBAAS,GAJnC,mBAIGyF,EAJH,KAIY0C,EAJZ,OAK8BnI,oBAAS,GALvC,mBAKGoI,EALH,KAKcC,EALd,KAOJhI,qBAAU,YACO,uCAAG,oCAAAnC,EAAA,sEACYoK,IAAkBR,GAD9B,UACVS,EADU,OAEhBL,EAASK,IAEL3M,OAAOK,SAASuM,OAAOC,SAAS,SAJpB,iCAKaF,EAAcG,yBAL3B,gBAKNC,EALM,EAKNA,SACRd,EAAmBc,GANL,yBAScJ,EAAc5L,kBAT5B,WASVA,EATU,OAWhBoL,EAAmBpL,IAEfA,EAbY,kCAcK4L,EAAcK,UAdnB,QAcR9L,EAdQ,OAedkL,EAAQlL,GAfM,QAkBhBqL,GAAW,GAlBK,4CAAH,qDAoBfU,KAEC,IAEH,IAAMC,EAAc,uCAAG,0CAAA5K,EAAA,6DAAO6K,EAAP,+BAAgB,GACrCV,GAAa,GADQ,kBAGbJ,EAAYa,eAAeC,GAHd,uDAKnBzH,QAAQD,MAAR,MALmB,yBAOnBgH,GAAa,GAPM,sCASFJ,EAAYW,UATV,QASf9L,EATe,OAUrBkL,EAAQlL,GACRiL,GAAmB,GAXE,+DAAH,qDAcdW,EAAsB,uCAAG,4BAAAxK,EAAA,6DAC7BiK,GAAW,GADkB,SAEvBF,EAAYS,yBAFW,uBAGVT,EAAYW,UAHF,OAGvB9L,EAHuB,OAI7BqL,GAAW,GACXJ,GAAmB,GACnBC,EAAQlL,GANqB,2CAAH,qDAQ5B,OACE,kBAACX,EAAa6M,SAAd,CACEjJ,MAAO,CACLpD,kBACAG,OACA2I,UACA2C,YACAU,iBACAJ,yBACAO,iBAAkB,kBAAUhB,EAAYgB,iBAAZ,MAAAhB,EAAW,YACvCrL,kBAAmB,kBAAUqL,EAAYrL,kBAAZ,MAAAqL,EAAW,YACxCiB,iBAAkB,kBAAUjB,EAAYiB,iBAAZ,MAAAjB,EAAW,YACvCkB,kBAAmB,kBAAUlB,EAAYkB,kBAAZ,MAAAlB,EAAW,YACxCpL,OAAQ,kBAAUoL,EAAYpL,OAAZ,MAAAoL,EAAW,cAG9BL,KqBrCL,CACEwB,UAAWC,GAAOC,SAClBC,OAAQF,GAAOE,OACf1B,mBA/BuB,SAAAc,GACzB/M,OAAOC,QAAQC,aACb,GACAC,SAASC,MACT2M,GAAYA,EAASa,UACjBb,EAASa,UACT5N,OAAOK,SAASC,WA0BpBuN,aAAc7N,OAAOK,SAASyN,QAE9B,kBAAC,oBAAD,CACEC,kBAAmBC,IAAUC,cAC7BC,OlBlDA,oCkBoDA,kBAAC,YAAD,MAAY,mBA5BlB,SAAmB7C,GAKjBG,KACA,IAAMrF,EAAUgI,sBAAY5C,IAC5B,OACE,kBAAC,IAAD,CAAiBA,SAAUA,IACzB,kBAAC,GAAD,CACE5B,aAAcrB,EAAiB,CAAEnC,YACjCyD,QAASwB,GAAQ,CAAEC,WAAUzB,QAASZ,GAAY7C,QAiBtBiI,CAAlB,EAAG/C,eAGnBlL,SAASkO,eAAe,SDqEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.03962d14.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from 'react';\n\nconst copy = {\n  'Log in': 'Log in',\n  'Log out': 'Log out'\n};\n\nconst NavBar = ({\n  dispatch,\n  isAuthenticated,\n  loginWithRedirect,\n  logout,\n  user\n}) => {\n  return (\n    <header className=\"flex flex-col items-center\">\n      {isAuthenticated ? (\n        [\n          <img\n            alt={user.name}\n            className=\"border border-gray-500 rounded\"\n            key=\"img\"\n            src={user.picture}\n          />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            className=\"bg-gray-300 border border-gray-500 font-bold px-4 rounded\"\n            data-testid=\"logout\"\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            {copy['Log out']}\n          </button>\n        ]\n      ) : (\n        <button\n          className=\"bg-gray-300 border border-gray-500 font-bold px-4 rounded\"\n          data-testid=\"login\"\n          onClick={() => loginWithRedirect({})}\n        >\n          {copy['Log in']}\n        </button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport NavBar from '../NavBar/NavBar';\n\nfunction Layout() {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex mb-4\">\n        <div className=\"w-full\">\n          {loading ? (\n            <h2 className=\"text-center\">...</h2>\n          ) : (\n            <NavBar\n              dispatch={console.log}\n              isAuthenticated={isAuthenticated}\n              loginWithRedirect={loginWithRedirect}\n              logout={logout}\n              user={user}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"flex mb-4\">\n        <div className=\"w-full\">\n          <h1 className=\"font-bold logo my-4 text-5xl text-center\">Tweries</h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const EDITABLE_TWEETSTORM_V1 = 'EDITABLE_TWEETSTORM_V1';\nexport const EDITABLE_TWEETSTORM_COPY_V1 = 'EDITABLE_TWEETSTORM_COPY_V1';\nexport const FEATURE_V1 = 'FEATURE_V1';\nexport const REPLY_TO_TWEET_V1 = 'REPLY_TO_TWEET_V1';\n\nexport const LINEFEED = ';;'; // TODO: deprecate\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v1/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ items, replyToStatusId, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n    body: JSON.stringify({ items, replyToStatusId, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport React from 'react';\n\nconst copy = {\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries',\n  '@TweriesApp': '@TweriesApp'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-xs\">\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}{' '}\n      </p>\n      <ul className=\"flex\">\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ replyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v1/tweet`, {\n    body: JSON.stringify({ tweetUrl: replyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'Optional: reply to Tweet URL': 'Optional: reply to Tweet URL'\n};\n\nfunction ReplyToTweet({ onChangeId, onChangeUrl, userId, value }) {\n  const [id, setId] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    setWaiting(true);\n    async function fetchData() {\n      try {\n        const { statusId } = await fetchTweet({\n          replyToTweetUrl: value,\n          userId\n        });\n        if (statusId) {\n          setWaiting(false);\n          setId(statusId);\n        } else {\n          setWaiting(false);\n          setId(null);\n        }\n      } catch (error) {\n        setWaiting(false);\n        setId(null);\n      }\n    }\n    fetchData();\n  }, [userId, value]);\n\n  useEffect(() => {\n    onChangeId(id);\n  }, [id, onChangeId]);\n\n  return (\n    <textarea\n      className={classnames('border border-gray-500 p-2 rounded', {\n        'bg-gray-200': waiting === true || value === '',\n        'bg-green-200': waiting === false && value !== '' && id !== null,\n        'bg-red-200': waiting === false && value !== '' && id === null\n      })}\n      data-testid=\"reply-to\"\n      onChange={({ target: { value } }) => {\n        // TODO: add a debounce\n        onChangeUrl(value);\n      }}\n      placeholder={copy['Optional: reply to Tweet URL']}\n      rows={1}\n      value={value}\n    />\n  );\n}\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport React from 'react';\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { message, type } = notification;\n    return (\n      <div\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === 'success',\n          'bg-red-100 border-red-800 text-red-800': type === 'danger'\n        })}\n      >\n        <span>{message}</span>\n        <button className=\"font-bold\" data-testid=\"dismiss\" onClick={onClick}>\n          &times;\n        </button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport { MAX_LENGTH, NEWLINE } from '../constants';\n\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\n// CREDIT: https://gist.github.com/gordonbrander/2230317\nfunction generateUniqueId() {\n  return (\n    '_' +\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  );\n}\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    // INFO: index + 1 is the character after the punctuation\n    return v.substr(take, index + 1, 1) === ' ';\n  }\n\n  function endOfSource(copy, take) {\n    return copy === take;\n  }\n\n  function backUpToLastPunctuation(copy, take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map(punctuation => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (\n      data.value !== -1 &&\n      hasSpaceAfterPunctuation(data.value, take) &&\n      !endOfSource(copy, take)\n    ) {\n      take = v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return ` ${SEQUENCE_NUMBER_PLACEHOLDER}`;\n    }\n    if (index === 0 && length === 1) {\n      return '';\n    }\n    return ` ${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  // TODO: change name\n  function tweetstorm({ hashtags, linefeed, source }) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      console.log('empty linefeed');\n      linefeed = NEWLINE;\n    }\n\n    let copy = replaceNewlinesWithNewline(linefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      let max;\n      if (hashtags.length > 0) {\n        max = MAX_LENGTH - hashtags.length - 1 - makeSequenceNumber().length; // INFO: 1 space before the hashtags\n      } else {\n        max = MAX_LENGTH - makeSequenceNumber().length; // INFO: 1 space before the sequence number\n      }\n      take = v.prune(copy, max, '');\n      if (take.indexOf(linefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(linefeed));\n        copy = v.substr(copy, take.length + linefeed.length);\n      } else {\n        take = backUpToLastPunctuation(copy, take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweetstorm = parts.map((part, index) => {\n      let tweet;\n      const sequenceNumber = makeSequenceNumber(index, parts.length);\n      if (hashtags.length > 0) {\n        tweet = `${v.trim(part)} ${hashtags}${sequenceNumber}`;\n      } else {\n        tweet = `${v.trim(part)}${sequenceNumber}`;\n      }\n\n      return { id: generateUniqueId(), tweet };\n    });\n\n    return tweetstorm;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { NEWLINE } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({ feature }) {\n  return {\n    hashtags: '',\n    healthy: false,\n    items: makeTweetstorm(feature)({\n      hashtags: '',\n      linefeed: NEWLINE,\n      source: ''\n    }),\n    linefeed: NEWLINE,\n    notification: null,\n    source: '',\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_LINEFEED: 'CHANGE_LINEFEED', // INFO: not used at the moment\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  CHANGE_TWEET: 'CHANGE_TWEET',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS: {\n        return {\n          ...state,\n          hashtags: action.value,\n          items: makeTweetstorm(feature)({\n            hashtags: action.value,\n            linefeed: state.linefeed,\n            source: state.source\n          })\n        };\n      }\n      case types.CHANGE_LINEFEED: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: action.value,\n            source: state.source\n          }),\n          linefeed: action.value\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.CHANGE_TWEET: {\n        return {\n          ...state,\n          items: [...state.items].map(item => {\n            if (item.id === action.value.id) {\n              item.tweet = action.value.tweet;\n            }\n            return item;\n          })\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        return {\n          ...makeInitialState({ feature }),\n          healthy: state.healthy,\n          notification: action.value,\n          userId: state.userId\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","import classnames from 'classnames';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\nfunction Counter({ length, type }) {\n  const value = length === 0 ? '' : length;\n  const danger = type === 'tweet' ? true : false;\n\n  return (\n    <small\n      className={classnames('mb-2 text-right', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      {value}\n    </small>\n  );\n}\n\nexport default Counter;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport React from 'react';\n\nfunction TweetstormButton({ disabled, onClick, waiting }) {\n  return (\n    <button\n      disabled={disabled}\n      className={classnames(\n        'bg-gray-300 border border-gray-500 font-bold px-4 mb-2 rounded self-center',\n        {\n          'bg-blue-600 text-white': !disabled,\n          'cursor-auto': disabled\n        }\n      )}\n      data-testid=\"tweet\"\n      onClick={onClick}\n    >\n      {waiting ? <FontAwesomeIcon icon={faSpinner} spin={true} /> : 'Tweet'}\n    </button>\n  );\n}\n\nexport default TweetstormButton;\n","import classnames from 'classnames';\nimport { useFeature } from 'feature-provider';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth.js';\nimport fetchTweetstorm from '../../api/fetchTweetstorm.js';\nimport Footer from '../../components/Footer/Footer';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ReplyToTweet from '../../components/ReplyToTweet/ReplyToTweet';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification.js';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport {\n  EDITABLE_TWEETSTORM_V1,\n  EDITABLE_TWEETSTORM_COPY_V1,\n  MAX_LENGTH,\n  REPLY_TO_TWEET_V1\n} from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport Counter from './Counter';\nimport TweetstormButton from './TweetstormButton';\n\nconst copy = {\n  '...': '...',\n  'Edits can be made in the boxes below before publishing':\n    'Edits can be made in the boxes below before publishing',\n  'Newline(s)': 'Newline(s)',\n  'Start typing, to insert a break prior to reaching 280 characters please use':\n    'Start typing, to insert a break prior to reaching 280 characters please use',\n  'The tweetstorm has been created successfully.':\n    'The tweetstorm has been created successfully.',\n  Tweries: 'Tweries',\n  \"What's happening?\": \"What's happening?\",\n  '#hashtags': '#hashtags'\n};\n\nfunction App({ initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  const feature = useFeature();\n\n  function setHealthy(error, data) {\n    let message = data;\n    let value = true;\n    if (error) {\n      message = error;\n      value = false;\n    }\n    console.log(message);\n    dispatch({ type: types.SET_HEALTHY, value });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetchHealth();\n        setHealthy(null, data);\n      } catch (error) {\n        setHealthy(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { hashtags, healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    hashtags: hashtags_,\n    items: makeTweetstorm(feature)({\n      hashtags: hashtags_,\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        console.log('notification:', notification);\n        dispatch({ type: types.DISMISS_TOAST });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  const [replyToTweetId, setReplyToTweetId] = useState(null);\n  const [replyToTweetUrl, setReplyToTweetUrl] = useState('');\n  const [waiting, setWaiting] = useState(false);\n\n  function disabled() {\n    return (\n      !isAuthenticated ||\n      !items.length > 0 ||\n      !healthy ||\n      items.find(item => item.tweet.length > 280)\n    );\n  }\n\n  function renderTextarea(item) {\n    if (feature.active(EDITABLE_TWEETSTORM_V1)) {\n      return (\n        <textarea\n          className={classnames('bg-gray-200 p-2 rounded', {\n            'border border-gray-500': item.tweet.length <= MAX_LENGTH,\n            'border-2 border-red-500': item.tweet.length > MAX_LENGTH\n          })}\n          onChange={e => {\n            dispatch({\n              type: types.CHANGE_TWEET,\n              value: {\n                id: item.id,\n                tweet: e.target.value\n              }\n            });\n          }}\n          rows={4}\n          value={item.tweet}\n        />\n      );\n    } else {\n      return (\n        <textarea\n          className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n          disabled\n          readOnly\n          rows={4}\n          value={item.tweet}\n        />\n      );\n    }\n  }\n\n  function resetTweetstorm(error, data) {\n    let message = copy['The tweetstorm has been created successfully.'];\n    let type = 'success';\n    if (error) {\n      message = error.message;\n      type = 'danger';\n    }\n    console.log(error, data);\n    dispatch({\n      type: types.RESET_TWEETSTORM,\n      value: {\n        message,\n        type\n      }\n    });\n    setSource('');\n    setHashtags('');\n    setReplyToTweetId(null);\n    setReplyToTweetUrl('');\n    setWaiting(false);\n  }\n\n  async function onClick() {\n    setWaiting(true);\n    try {\n      const data = await fetchTweetstorm({\n        items,\n        replyToStatusId: replyToTweetId,\n        userId\n      });\n      resetTweetstorm(null, data);\n    } catch (error) {\n      resetTweetstorm(error);\n    }\n  }\n\n  return loading ? (\n    <article className=\"container content-center mx-auto m-1 p-4 text-center\">\n      {copy['...']}\n    </article>\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <NavBar\n        dispatch={dispatch}\n        isAuthenticated={isAuthenticated}\n        loginWithRedirect={loginWithRedirect}\n        logout={logout}\n        user={user}\n      />\n      <h1 className=\"font-bold logo my-4 text-5xl text-center\">\n        {copy.Tweries}\n      </h1>\n      <form className=\"flex flex-col\" onSubmit={e => e.preventDefault()}>\n        {feature.active(REPLY_TO_TWEET_V1) && (\n          <ReplyToTweet\n            onChangeId={setReplyToTweetId}\n            onChangeUrl={setReplyToTweetUrl}\n            userId={userId}\n            value={replyToTweetUrl}\n          />\n        )}\n        <small className=\"mb-2 p-2\">\n          {\n            copy[\n              'Start typing, to insert a break prior to reaching 280 characters please use'\n            ]\n          }{' '}\n          <span className=\"font-bold\">{copy['Newline(s)']}</span>\n        </small>\n        <textarea\n          className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n          data-testid=\"source\"\n          placeholder={copy[\"What's happening?\"]}\n          rows={8}\n          value={source}\n          onChange={e => {\n            dispatch({ type: types.CHANGE_SOURCE, value: e.target.value });\n            setSource(e.target.value);\n          }}\n        />\n        <Counter length={source.length} />\n        <textarea\n          className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n          data-testid=\"hashtags\"\n          onChange={e => {\n            dispatch({ type: types.CHANGE_HASHTAGS, value: e.target.value });\n            setHashtags(e.target.value);\n          }}\n          placeholder={copy['#hashtags']}\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <Counter length={hashtags.length} />\n        {items.length > 0 && [\n          feature.active(EDITABLE_TWEETSTORM_COPY_V1) ? (\n            <small className=\"mb-2 p-2\" key=\"copy\">\n              {copy['Edits can be made in the boxes below before publishing']}\n            </small>\n          ) : null,\n          <ul className=\"flex flex-col\" data-testid=\"list\" key=\"list\">\n            {items.map((item, index) => (\n              <li className=\"flex flex-col\" key={index}>\n                {renderTextarea(item)}\n                <Counter length={item.tweet.length} type=\"tweet\" />\n              </li>\n            ))}\n          </ul>\n        ]}\n        <TweetstormButton\n          disabled={disabled()}\n          onClick={onClick}\n          waiting={waiting}\n        />\n      </form>\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS:\n      case types.CHANGE_SOURCE:\n      case types.CHANGE_TWEET:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import {\n  EDITABLE_TWEETSTORM_V1,\n  EDITABLE_TWEETSTORM_COPY_V1,\n  FEATURE_V1,\n  REPLY_TO_TWEET_V1\n} from './constants';\n\nconst features = [\n  EDITABLE_TWEETSTORM_V1,\n  EDITABLE_TWEETSTORM_COPY_V1,\n  FEATURE_V1,\n  REPLY_TO_TWEET_V1\n];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Layout from './components/Layout/Layout';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './index.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nfunction renderApp(logEvent) {\n  const { REACT_APP_LAYOUT_V1 } = process.env;\n  if (REACT_APP_LAYOUT_V1 === 'true') {\n    return <Layout />;\n  }\n  initializeReactGA();\n  const feature = setFeatures(features);\n  return (\n    <FeatureProvider features={features}>\n      <App\n        initialState={makeInitialState({ feature })}\n        reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n      />\n    </FeatureProvider>\n  );\n}\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>{({ logEvent }) => renderApp(logEvent)}</Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}