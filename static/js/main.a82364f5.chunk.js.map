{"version":3,"sources":["constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","components/NavBar/NavBar.js","api/fetchTweet.js","components/ReplyToTweet/ReplyToTweet.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","react-auth0-wrapper.js","containers/App/Counter.js","containers/App/TweetstormButton.js","containers/App/App.js","store/augment.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["BASE_URL","MAX_LENGTH","NEWLINE","a","fetch","response","json","fetchHealth","inReplyToTweetUrl","items","userId","body","JSON","stringify","headers","method","fetchTweetstorm","copy","Tweries","Footer","healthy","version","className","href","rel","target","classnames","Date","getFullYear","NavBar","logout","user","alt","name","src","picture","data-testid","onClick","returnTo","window","location","type","tweetUrl","fetchTweet","ReplyToTweet","callback","onChange","useState","isValidTweet","setIsValidTweet","waiting","setWaiting","useEffect","console","log","data","error","fetchData","htmlFor","value","placeholder","rows","ToastNotification","notification","message","defaultProps","useLocalStorage","key","initialValue","item","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","SEQUENCE_NUMBER_PLACEHOLDER","makeTweetstorm","feature","backUpToLastPunctuation","take","map","punctuation","v","lastIndexOf","sort","b","index","substr","hasSpaceAfterPunctuation","endOfSource","makeSequenceNumber","length","undefined","hashtags","linefeed","source","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","tweet","sequenceNumber","trim","id","Math","random","toString","makeInitialState","types","APPEND_SCREEN_NAME","CHANGE_HASHTAGS","CHANGE_SOURCE","CHANGE_TWEET","DISMISS_TOAST","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","makeReducer","state","action","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","useAuth0","useContext","Counter","danger","Tweet","TweetstormButton","disabled","icon","faSpinner","spin","Tags","App","initialState","reducer","isAuthenticated","loading","loginWithRedirect","useFeature","setHealthy","dispatch","sub","hashtags_","setHashtags","source_","setSource","useReducer","timer","setTimeout","clearTimeout","setInReplyToTweetUrl","resetTweetstorm","memoizedCallback","useCallback","screen_name","faTwitter","size","onSubmit","e","preventDefault","renderTextarea","find","augment","logEvent","newState","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","setFeatures","renderApp","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a82364f5.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const FEATURE_V1 = 'FEATURE_V1';\n\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v2/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ inReplyToTweetUrl, items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweetstorm`, {\n    body: JSON.stringify({ inReplyToTweetUrl, items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries',\n  '@TweriesApp': '@TweriesApp'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-sm\">\n      <ul className=\"flex\">\n        <li className=\"m-1\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n        <li className=\"m-1\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n      </ul>\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}{' '}\n      </p>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  healthy: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  'Log out': 'Log out'\n};\n\nfunction NavBar({ logout, user }) {\n  return (\n    <>\n      <p className=\"flex items-center\">\n        <img\n          alt={user.name}\n          className=\"border tweries-border-color rounded-full\"\n          src={user.picture}\n        />\n        <span className=\"px-2\">{user.name}</span>\n      </p>\n      <button\n        className=\"px-4 underline\"\n        data-testid=\"logout\"\n        onClick={() =>\n          logout({\n            returnTo: window.location.href\n          })\n        }\n        type=\"button\"\n      >\n        {copy['Log out']}\n      </button>\n    </>\n  );\n}\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default NavBar;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ inReplyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweet`, {\n    body: JSON.stringify({ tweetUrl: inReplyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'If you want to reply to a specific Tweet:':\n    'If you want to reply to a specific Tweet:',\n  'Optional: reply to Tweet URL': 'Optional: reply to Tweet URL',\n  'URL goes here': 'URL goes here'\n};\n\n// TODO: move to containers\nfunction ReplyToTweet({ callback, onChange, tweetUrl, userId }) {\n  const [isValidTweet, setIsValidTweet] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchTweet({\n          inReplyToTweetUrl: tweetUrl,\n          userId\n        });\n        console.log(response);\n        if (response.data) {\n          callback(null, response.data);\n          setIsValidTweet(true);\n          setWaiting(false);\n        } else {\n          callback(response.error);\n          setIsValidTweet(false);\n          setWaiting(false);\n        }\n      } catch (error) {\n        callback(error);\n        setIsValidTweet(false);\n        setWaiting(false);\n      }\n    }\n    if (tweetUrl && userId) {\n      setWaiting(true);\n      fetchData();\n    }\n  }, [callback, tweetUrl, userId]);\n\n  return (\n    <>\n      <label className=\"pb-1 text-sm\" htmlFor=\"reply-to\">\n        {copy['If you want to reply to a specific Tweet:']}\n      </label>\n      <textarea\n        className={classnames('p-2 tweries-border', {\n          'tweries-background-color-blue-white':\n            waiting === true || tweetUrl === '',\n          'bg-green-200': waiting === false && tweetUrl !== '' && isValidTweet,\n          'bg-red-200': waiting === false && tweetUrl !== '' && !isValidTweet\n        })}\n        data-testid=\"reply-to\"\n        name=\"reply-to\"\n        onChange={({ target: { value } }) => {\n          onChange(value);\n        }}\n        placeholder={copy['URL goes here']}\n        rows={1}\n        value={tweetUrl}\n      />\n    </>\n  );\n}\n\nReplyToTweet.propTypes = {\n  callback: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tweetUrl: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n};\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { message, type } = notification;\n    return (\n      <p\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === 'success',\n          'bg-red-100 border-red-800 text-red-800': type === 'danger'\n        })}\n      >\n        <span>{message}</span>\n        <button\n          className=\"font-bold\"\n          data-testid=\"dismiss\"\n          onClick={onClick}\n          type=\"button\"\n        >\n          &times;\n        </button>\n      </p>\n    );\n  }\n  return null;\n}\n\nToastNotification.propTypes = {\n  notification: PropTypes.object,\n  onClick: PropTypes.func.isRequired\n};\n\nToastNotification.defaultProps = {\n  notification: null\n};\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport { MAX_LENGTH, NEWLINE } from '../constants';\n\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\n// CREDIT: https://gist.github.com/gordonbrander/2230317\nfunction generateUniqueId() {\n  return `_${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n}\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    // INFO: index + 1 is the character after the punctuation\n    return v.substr(take, index + 1, 1) === ' ';\n  }\n\n  function endOfSource(copy, take) {\n    return copy === take;\n  }\n\n  function backUpToLastPunctuation(copy, take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map(punctuation => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (\n      data.value !== -1 &&\n      hasSpaceAfterPunctuation(data.value, take) &&\n      !endOfSource(copy, take)\n    ) {\n      take = v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return ` ${SEQUENCE_NUMBER_PLACEHOLDER}`;\n    }\n    if (index === 0 && length === 1) {\n      return '';\n    }\n    return ` ${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  // TODO: change name\n  function tweetstorm({ hashtags, linefeed, source }) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      linefeed = NEWLINE;\n    }\n\n    let copy = replaceNewlinesWithNewline(linefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      let max;\n      if (hashtags.length > 0) {\n        max = MAX_LENGTH - hashtags.length - 1 - makeSequenceNumber().length; // INFO: 1 space before the hashtags\n      } else {\n        max = MAX_LENGTH - makeSequenceNumber().length; // INFO: 1 space before the sequence number\n      }\n      take = v.prune(copy, max, '');\n      if (take.indexOf(linefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(linefeed));\n        copy = v.substr(copy, take.length + linefeed.length);\n      } else {\n        take = backUpToLastPunctuation(copy, take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweetstorm = parts.map((part, index) => {\n      let tweet;\n      const sequenceNumber = makeSequenceNumber(index, parts.length);\n      if (hashtags.length > 0) {\n        tweet = `${v.trim(part)} ${hashtags}${sequenceNumber}`;\n      } else {\n        tweet = `${v.trim(part)}${sequenceNumber}`;\n      }\n\n      return { id: generateUniqueId(), tweet };\n    });\n\n    return tweetstorm;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { NEWLINE } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({ feature }) {\n  return {\n    hashtags: '',\n    healthy: false,\n    items: makeTweetstorm(feature)({\n      hashtags: '',\n      linefeed: NEWLINE,\n      source: ''\n    }),\n    linefeed: NEWLINE,\n    notification: null,\n    source: '',\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  APPEND_SCREEN_NAME: 'APPEND_SCREEN_NAME',\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  CHANGE_TWEET: 'CHANGE_TWEET',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.APPEND_SCREEN_NAME: {\n        const source = `@${action.value} ${state.source}`;\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source\n          }),\n          source\n        };\n      }\n      case types.CHANGE_HASHTAGS: {\n        return {\n          ...state,\n          hashtags: action.value,\n          items: makeTweetstorm(feature)({\n            hashtags: action.value,\n            linefeed: state.linefeed,\n            source: state.source\n          })\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.CHANGE_TWEET: {\n        return {\n          ...state,\n          items: [...state.items].map(item => {\n            if (item.id === action.value.id) {\n              item.tweet = action.value.tweet;\n            }\n            return item;\n          })\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        return {\n          ...makeInitialState({ feature }),\n          healthy: state.healthy,\n          notification: action.value,\n          userId: state.userId\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\n// TODO: move to components\nfunction Counter({ length, type }) {\n  const value = length === 0 ? null : length;\n  const danger = type === 'tweet';\n\n  return (\n    <p\n      className={classnames('text-right text-xs', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      &nbsp;\n      {value}\n    </p>\n  );\n}\n\nCounter.propTypes = {\n  length: PropTypes.number.isRequired,\n  type: PropTypes.string\n};\n\nCounter.defaultProps = {\n  type: ''\n};\n\nexport default Counter;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  Tweet: 'Tweet'\n};\n\n// TODO: move to components\nfunction TweetstormButton({ disabled, onClick, waiting }) {\n  return (\n    <button\n      disabled={disabled}\n      className={classnames(\n        'bg-gray-300 border border-gray-500 font-bold my-4 px-6 py-2 rounded self-center',\n        {\n          'tweries-background-color-blue-button': !disabled,\n          'cursor-auto': disabled\n        }\n      )}\n      data-testid=\"tweet\"\n      onClick={onClick}\n      type=\"button\"\n    >\n      {waiting ? <FontAwesomeIcon icon={faSpinner} spin /> : copy.Tweet}\n    </button>\n  );\n}\n\nTweetstormButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  waiting: PropTypes.bool.isRequired\n};\n\nexport default TweetstormButton;\n","import classnames from 'classnames';\nimport { useFeature } from 'feature-provider';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth';\nimport fetchTweetstorm from '../../api/fetchTweetstorm';\nimport Footer from '../../components/Footer/Footer';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ReplyToTweet from '../../components/ReplyToTweet/ReplyToTweet';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport { MAX_LENGTH } from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport Counter from './Counter';\nimport TweetstormButton from './TweetstormButton';\n\nconst copy = {\n  '...': '...',\n  'Edits can be made in the boxes below before publishing':\n    'Edits can be made in the boxes below before publishing',\n  'Log in': 'Log in',\n  'Start typing, to insert a break prior to reaching 280 characters please use Newline(s)':\n    'Start typing, to insert a break prior to reaching 280 characters please use Newline(s)',\n  Tags: 'Tags',\n  Tweet: 'Tweet',\n  Tweries: 'Tweries',\n  'Type your thoughts here': 'Type your thoughts here',\n  \"What's happening?\": \"What's happening?\",\n  \"When 280 characters just isn't enough\":\n    \"When 280 characters just isn't enough\",\n  'Your tweetstorm has been created!': 'Your tweetstorm has been created!',\n  '#': '#',\n  '#hashtags': '#hashtags'\n};\n\nfunction App({ initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  const feature = useFeature();\n\n  function setHealthy(error, response) {\n    if (error) {\n      console.log(error);\n      dispatch({ type: types.SET_HEALTHY, value: false });\n    }\n    if (response) {\n      console.log(response);\n      dispatch({\n        type: types.SET_HEALTHY,\n        value: !response.error\n      });\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchHealth();\n        setHealthy(null, response);\n      } catch (error) {\n        setHealthy(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { hashtags, healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    hashtags: hashtags_,\n    items: makeTweetstorm(feature)({\n      hashtags: hashtags_,\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        dispatch({ type: types.DISMISS_TOAST });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // TODO: add to global state?\n  const [inReplyToTweetUrl, setInReplyToTweetUrl] = useState('');\n  const [waiting, setWaiting] = useState(false);\n\n  function disabled() {\n    return (\n      !isAuthenticated ||\n      !items.length > 0 ||\n      !healthy ||\n      items.find(item => item.tweet.length > MAX_LENGTH)\n    );\n  }\n\n  function renderTextarea(item) {\n    return (\n      <textarea\n        className={classnames('p-2 tweries-background-color-blue-white', {\n          'tweries-border': item.tweet.length <= MAX_LENGTH,\n          'border-2 border-red-500': item.tweet.length > MAX_LENGTH\n        })}\n        name={item.id}\n        onChange={e => {\n          dispatch({\n            type: types.CHANGE_TWEET,\n            value: {\n              id: item.id,\n              tweet: e.target.value\n            }\n          });\n        }}\n        rows={4}\n        value={item.tweet}\n      />\n    );\n  }\n\n  function resetTweetstorm(error, response) {\n    let message = copy['Your tweetstorm has been created!'];\n    let type = 'success';\n    if (error || response.error) {\n      message = error ? error.message : response.error.message;\n      type = 'danger';\n    }\n    console.log(error, response);\n    dispatch({\n      type: types.RESET_TWEETSTORM,\n      value: {\n        message,\n        type\n      }\n    });\n    setHashtags('');\n    setInReplyToTweetUrl('');\n    setSource('');\n    setWaiting(false);\n  }\n\n  async function onClick() {\n    setWaiting(true);\n    try {\n      const response = await fetchTweetstorm({\n        inReplyToTweetUrl,\n        items,\n        userId\n      });\n      resetTweetstorm(null, response);\n    } catch (error) {\n      resetTweetstorm(error);\n    }\n  }\n\n  const memoizedCallback = useCallback((error, data) => {\n    if (data) {\n      dispatch({\n        type: types.APPEND_SCREEN_NAME,\n        value: data.user.screen_name\n      });\n    }\n  }, []);\n\n  return loading ? (\n    <article className=\"container content-center mx-auto m-1 p-4 text-center\">\n      {copy['...']}\n    </article>\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <header className=\"flex flex-row justify-between\">\n        {isAuthenticated ? (\n          <NavBar logout={logout} user={user} />\n        ) : (\n          <span className=\"my-4\" />\n        )}\n      </header>\n      <h1 className=\"font-bold my-4 text-5xl text-center tweries-font-family\">\n        {copy.Tweries}\n      </h1>\n      <h2 className=\"my-4 text-center\">\n        {copy[\"When 280 characters just isn't enough\"]}\n      </h2>\n      <p className=\"my-4 text-center\">\n        <FontAwesomeIcon\n          className=\"tweries-color-blue\"\n          icon={faTwitter}\n          size=\"3x\"\n        />\n      </p>\n      {isAuthenticated ? (\n        <form className=\"flex flex-col\" onSubmit={e => e.preventDefault()}>\n          <ReplyToTweet\n            callback={memoizedCallback}\n            onChange={setInReplyToTweetUrl}\n            tweetUrl={inReplyToTweetUrl}\n            userId={userId}\n          />\n          <p className=\"italic py-4 text-sm\">\n            {\n              copy[\n                'Start typing, to insert a break prior to reaching 280 characters please use Newline(s)'\n              ]\n            }\n          </p>\n          <textarea\n            className=\"p-2 tweries-background-color-blue-white tweries-border\"\n            data-testid=\"source\"\n            name=\"source\"\n            onChange={e => {\n              dispatch({\n                type: types.CHANGE_SOURCE,\n                value: e.target.value\n              });\n              setSource(e.target.value);\n            }}\n            placeholder={copy['Type your thoughts here']}\n            rows={8}\n            value={source}\n          />\n          <Counter length={source.length} />\n          <label className=\"pb-1 text-sm\" htmlFor=\"hashtags\">\n            {copy.Tags}\n          </label>\n          <textarea\n            className=\"p-2 tweries-background-color-blue-white tweries-border\"\n            data-testid=\"hashtags\"\n            name=\"hashtags\"\n            onChange={e => {\n              dispatch({\n                type: types.CHANGE_HASHTAGS,\n                value: e.target.value\n              });\n              setHashtags(e.target.value);\n            }}\n            placeholder={copy['#']}\n            rows={1}\n            type=\"text\"\n            value={hashtags}\n          />\n          <Counter length={hashtags.length} />\n          {items.length > 0 && [\n            <p className=\"italic py-4 text-sm\" key=\"copy\">\n              {copy['Edits can be made in the boxes below before publishing']}\n            </p>,\n            <ul className=\"flex flex-col\" data-testid=\"list\" key=\"list\">\n              {items.map((item, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <li className=\"flex flex-col\" key={index}>\n                  <label className=\"pb-1 text-sm\" htmlFor={item.id}>\n                    {`${copy.Tweet} #${index + 1}`}\n                  </label>\n                  {renderTextarea(item)}\n                  <Counter length={item.tweet.length} type=\"tweet\" />\n                </li>\n              ))}\n            </ul>\n          ]}\n          <TweetstormButton\n            disabled={disabled()}\n            onClick={onClick}\n            waiting={waiting}\n          />\n        </form>\n      ) : (\n        <p className=\"flex justify-center\">\n          <button\n            className=\"font-bold my-4 px-6 py-2 rounded tweries-background-color-blue-button\"\n            data-testid=\"login\"\n            onClick={() => loginWithRedirect({})}\n            type=\"button\"\n          >\n            {copy['Log in']}\n          </button>\n        </p>\n      )}\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nApp.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  reducer: PropTypes.func.isRequired\n};\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS:\n      case types.CHANGE_SOURCE:\n      case types.CHANGE_TWEET:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import { FEATURE_V1 } from './constants';\n\nconst features = [FEATURE_V1];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './styles.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nfunction renderApp(logEvent) {\n  initializeReactGA();\n  const feature = setFeatures(features);\n  return (\n    <FeatureProvider features={features}>\n      <App\n        initialState={makeInitialState({ feature })}\n        reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n      />\n    </FeatureProvider>\n  );\n}\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>{({ logEvent }) => renderApp(logEvent)}</Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}