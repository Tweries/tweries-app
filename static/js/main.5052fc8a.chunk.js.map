{"version":3,"sources":["constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","components/LinefeedPicker/LinefeedPicker.js","store/makeTweetstorm.js","store/makeInitialState.js","store/reducer.js","react-auth0-wrapper.js","components/NavBar/NavBar.js","hooks/useLocalStorage.js","containers/App/Counter.js","containers/App/App.js","store/augment.js","feature.js","serviceWorker.js","index.js"],"names":["BASE_URL","BACK_UP_TO_LAST_PUNCTUATION","COUNTER_V1","PICK_YOUR_OWN_LINEFEED_V1","PICK_YOUR_OWN_LINEFEED_V2","LINEFEED","NEWLINE","a","fetch","response","json","fetchHealth","items","userId","body","JSON","stringify","headers","method","fetchTweetstorm","Footer","healthy","version","className","classnames","Date","getFullYear","types","custom","newline","Custom","disabled","onChange","value","data-testid","maxLength","placeholder","size","LinefeedPicker","feature","useState","type","setType","setCustom","active","defaultChecked","name","htmlFor","e","target","MAX_LENGTH","SEQUENCE_NUMBER_PLACEHOLDER","backUpToLastPunctuation","take","data","map","punctuation","key","v","lastIndexOf","sort","b","substr","makeSequenceNumber","index","length","undefined","makeTweetstorm","hashtags","linefeed","source","copy","slice","replace","replaceNewlinesWithNewline","parts","prune","indexOf","push","part","tweet","trim","makeInitialState","CHANGE_HASHTAGS","CHANGE_LINEFEED","CHANGE_SOURCE","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","reducer","state","action","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","useEffect","sub","alt","src","picture","aria-label","role","onClick","returnTo","href","useLocalStorage","initialValue","item","localStorage","getItem","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","Counter","show","App","loading","fetchData","hashtags_","setHashtags","source_","setSource","useReducer","onSubmit","preventDefault","rows","readOnly","augment","features","setFeatures","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5052fc8a.chunk.js","sourcesContent":["export const BASE_URL = 'https://china-musk-api.herokuapp.com'; // 'https://china-musk-api.herokuapp.com' | 'http://localhost:9000'\n\nexport const BACK_UP_TO_LAST_PUNCTUATION = 'BACK_UP_TO_LAST_PUNCTUATION';\nexport const COUNTER_V1 = 'COUNTER_V1';\nexport const PICK_YOUR_OWN_LINEFEED_V1 = 'PICK_YOUR_OWN_LINEFEED_V1';\nexport const PICK_YOUR_OWN_LINEFEED_V2 = 'PICK_YOUR_OWN_LINEFEED_V2';\n\nexport const LINEFEED = ';;';\nexport const NEWLINE = '\\n';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v1/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n    body: JSON.stringify({ items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport React from 'react';\nimport './Footer.css';\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className={classnames({ healthy: healthy })}>\n      Tweries v{version} &copy; {new Date().getFullYear()}\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport {\n  LINEFEED,\n  NEWLINE,\n  PICK_YOUR_OWN_LINEFEED_V1,\n  PICK_YOUR_OWN_LINEFEED_V2\n} from '../../constants';\nimport './LinefeedPicker.css';\n\nconst types = {\n  custom: 'custom',\n  newline: 'newline'\n};\n\nfunction Custom({ disabled, onChange, value }) {\n  return (\n    <input\n      className=\"App__linefeed\"\n      data-testid=\"linefeed\"\n      disabled={disabled}\n      maxLength=\"4\"\n      onChange={onChange}\n      placeholder={LINEFEED}\n      size=\"4\"\n      value={value}\n    />\n  );\n}\n\nfunction LinefeedPicker({ feature, onChange }) {\n  const [type, setType] = useState(types.newline);\n  const [custom, setCustom] = useState(LINEFEED);\n\n  if (feature.active(PICK_YOUR_OWN_LINEFEED_V2) === true) {\n    return (\n      <ul className=\"LinefeedPicker__ul\">\n        <li className=\"LinefeedPicker__li\">\n          <input\n            data-testid=\"newline\"\n            defaultChecked\n            name=\"linefeed\"\n            onChange={() => {\n              setType(types.newline);\n              onChange(NEWLINE);\n            }}\n            type=\"radio\"\n            value=\"newline\"\n          />\n          <label htmlFor=\"newline\">Newline(s)</label>\n        </li>\n        <li className=\"LinefeedPicker__li\">\n          <input\n            data-testid=\"custom\"\n            name=\"linefeed\"\n            onChange={() => {\n              setType(types.custom);\n              onChange(custom);\n            }}\n            type=\"radio\"\n            value=\"custom\"\n          />\n          <label htmlFor=\"louie\">\n            <Custom\n              disabled={type !== types.custom}\n              onChange={e => {\n                const {\n                  target: { value }\n                } = e;\n                setCustom(value);\n                onChange(value);\n              }}\n              value={custom}\n            />\n          </label>\n        </li>\n      </ul>\n    );\n  }\n  if (feature.active(PICK_YOUR_OWN_LINEFEED_V1) === true) {\n    return <Custom disabled={false} onChange={onChange} value={custom} />;\n  }\n  return <span>{custom}</span>;\n}\n\nexport default LinefeedPicker;\n","import v from 'voca';\nimport { BACK_UP_TO_LAST_PUNCTUATION, LINEFEED, NEWLINE } from '../constants';\n\nconst MAX_LENGTH = 280;\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\nfunction backUpToLastPunctuation(take) {\n  const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n  const data = punctuations\n    .map(punctuation => ({\n      key: punctuation,\n      value: v.lastIndexOf(take, punctuation)\n    }))\n    .sort((a, b) => {\n      if (a.value > b.value) {\n        return -1;\n      }\n      if (a.value < b.value) {\n        return 1;\n      }\n      return 0;\n    })[0];\n  if (data.value !== -1) {\n    take = v.substr(take, 0, data.value + 1);\n  }\n  return take;\n}\n\nfunction makeSequenceNumber(index, length) {\n  if (index === undefined && length === undefined) {\n    return SEQUENCE_NUMBER_PLACEHOLDER;\n  }\n  return `${index + 1}/${length}`;\n}\n\nfunction replaceNewlinesWithNewline(linefeed, source) {\n  let copy = source.slice();\n  if (linefeed === NEWLINE) {\n    copy = copy.replace(/\\n+/g, NEWLINE);\n  }\n  return copy;\n}\n\nfunction makeTweetstorm({ feature, hashtags, linefeed, source }) {\n  // INFO: hack :(\n  if (linefeed === null || linefeed === undefined || linefeed === '') {\n    linefeed = LINEFEED;\n  }\n\n  let copy = replaceNewlinesWithNewline(linefeed, source);\n  const parts = [];\n\n  while (copy.length !== 0) {\n    let take;\n    if (hashtags.length > 0) {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - hashtags.length - makeSequenceNumber().length - 2, // INFO: 1 space before the hashtags and 1 space before the sequence number\n        ''\n      );\n    } else {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - makeSequenceNumber().length - 1, // INFO: 1 space before the sequence number\n        ''\n      );\n    }\n    if (take.indexOf(linefeed) > -1) {\n      take = v.substr(take, 0, take.indexOf(linefeed));\n      // take = backUpToLastPunctuation(take);\n      copy = v.substr(copy, take.length + linefeed.length);\n    } else {\n      if (feature.active(BACK_UP_TO_LAST_PUNCTUATION)) {\n        take = backUpToLastPunctuation(take);\n      }\n      copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n    }\n    parts.push(take);\n  }\n\n  const tweetstorm = parts.map((part, index) => {\n    let tweet;\n    if (hashtags.length > 0) {\n      tweet = `${v.trim(part)} ${hashtags} ${makeSequenceNumber(\n        index,\n        parts.length\n      )}`;\n    } else {\n      tweet = `${v.trim(part)} ${makeSequenceNumber(index, parts.length)}`;\n    }\n\n    return { length: tweet.length, tweet };\n  });\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { LINEFEED } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({\n  feature,\n  hashtags = '',\n  linefeed = LINEFEED,\n  source = ''\n}) {\n  return {\n    feature,\n    hashtags,\n    healthy: false,\n    items: makeTweetstorm({ feature, hashtags, linefeed, source }),\n    linefeed,\n    source,\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_LINEFEED: 'CHANGE_LINEFEED',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction reducer(state = makeInitialState({}), action) {\n  switch (action.type) {\n    case types.CHANGE_HASHTAGS: {\n      return {\n        ...state,\n        hashtags: action.value,\n        items: makeTweetstorm({\n          feature: state.feature,\n          hashtags: action.value,\n          linefeed: state.linefeed,\n          source: state.source\n        })\n      };\n    }\n    case types.CHANGE_LINEFEED: {\n      return {\n        ...state,\n        linefeed: action.value,\n        items: makeTweetstorm({\n          feature: state.feature,\n          hashtags: state.hashtags,\n          linefeed: action.value,\n          source: state.source\n        })\n      };\n    }\n    case types.CHANGE_SOURCE: {\n      return {\n        ...state,\n        items: makeTweetstorm({\n          feature: state.feature,\n          hashtags: state.hashtags,\n          linefeed: state.linefeed,\n          source: action.value\n        }),\n        source: action.value\n      };\n    }\n    case types.RESET_TWEETSTORM: {\n      return {\n        ...makeInitialState({}),\n        healthy: state.healthy,\n        userId: state.userId\n      };\n    }\n    case types.SET_HEALTHY: {\n      return {\n        ...state,\n        healthy: action.value\n      };\n    }\n    case types.SET_USER_ID: {\n      return {\n        ...state,\n        userId: action.value\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { types } from '../../store/reducer';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './NavBar.css';\n\nconst NavBar = ({ dispatch }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [dispatch, isAuthenticated, user]);\n\n  return (\n    <header className=\"NavBar\">\n      {isAuthenticated ? (\n        [\n          <img alt={user.name} key=\"img\" src={user.picture} />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            data-testid=\"logout\"\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            Log out\n          </button>\n        ]\n      ) : (\n        <button data-testid=\"login\" onClick={() => loginWithRedirect({})}>\n          Log in\n        </button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from 'react';\n\nfunction Counter({ length, show }) {\n  const value = show ? (length === 0 ? '' : length) : '';\n  return <small className=\"App__counter\">{value}</small>;\n}\n\nexport default Counter;\n","import classnames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth.js';\nimport fetchTweetstorm from '../../api/fetchTweetstorm.js';\nimport Footer from '../../components/Footer/Footer';\nimport LinefeedPicker from '../../components/LinefeedPicker/LinefeedPicker';\nimport NavBar from '../../components/NavBar/NavBar';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeInitialState from '../../store/makeInitialState';\nimport { types } from '../../store/reducer';\nimport {\n  COUNTER_V1,\n  LINEFEED,\n  NEWLINE,\n  PICK_YOUR_OWN_LINEFEED_V2\n} from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './App.css';\nimport Counter from './Counter';\n\nfunction App({ feature, reducer }) {\n  const { isAuthenticated, loading } = useAuth0();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetchHealth();\n        console.log(data);\n        dispatch({ type: types.SET_HEALTHY, value: true });\n      } catch (error) {\n        console.log(error);\n        dispatch({ type: types.SET_HEALTHY, value: false });\n      }\n    }\n    fetchData();\n  }, []);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [{ hashtags, healthy, items, source, userId }, dispatch] = useReducer(\n    reducer,\n    makeInitialState({\n      feature,\n      hashtags: hashtags_,\n      linefeed:\n        feature.active(PICK_YOUR_OWN_LINEFEED_V2) === true ? NEWLINE : LINEFEED,\n      source: source_\n    })\n  );\n\n  function disabled() {\n    return !isAuthenticated || !items.length > 0 || !healthy;\n  }\n\n  return loading ? (\n    <article>...</article>\n  ) : (\n    <article>\n      <NavBar dispatch={dispatch} />\n      <h1>Tweries</h1>\n      <form onSubmit={e => e.preventDefault()}>\n        <small className=\"App__small\">\n          Start typing, to insert a break prior to reaching 280 characters\n          please use{' '}\n          <LinefeedPicker\n            feature={feature}\n            onChange={value => {\n              dispatch({ type: types.CHANGE_LINEFEED, value });\n            }}\n          />\n        </small>\n        <textarea\n          data-testid=\"source\"\n          placeholder=\"What's happening?\"\n          rows={8}\n          value={source}\n          onChange={e => {\n            dispatch({ type: types.CHANGE_SOURCE, value: e.target.value });\n            setSource(e.target.value);\n          }}\n        />\n        <Counter length={source.length} show={feature.active(COUNTER_V1)} />\n        <textarea\n          data-testid=\"hashtags\"\n          onChange={e => {\n            dispatch({ type: types.CHANGE_HASHTAGS, value: e.target.value });\n            setHashtags(e.target.value);\n          }}\n          placeholder=\"#hashtags\"\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <Counter length={hashtags.length} show={feature.active(COUNTER_V1)} />\n        <ul data-testid=\"list\">\n          {items.map((item, index) => (\n            <li key={index}>\n              <textarea readOnly rows={4} value={item.tweet} />\n              <Counter length={item.length} show={feature.active(COUNTER_V1)} />\n            </li>\n          ))}\n        </ul>\n        <button\n          className={classnames('App__button', {\n            'App__button--disabled': disabled()\n          })}\n          data-testid=\"tweet\"\n          disabled={disabled()}\n          onClick={async () => {\n            try {\n              const data = await fetchTweetstorm({ items, userId });\n              console.log(data);\n              dispatch({ type: types.RESET_TWEETSTORM });\n              setSource('');\n              setHashtags('');\n            } catch (error) {\n              console.log(error);\n              dispatch({ type: types.RESET_TWEETSTORM });\n              setSource('');\n              setHashtags('');\n            }\n          }}\n        >\n          Tweet\n        </button>\n      </form>\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nexport default App;\n","function augment(reducer) {\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import {\n  BACK_UP_TO_LAST_PUNCTUATION,\n  COUNTER_V1,\n  PICK_YOUR_OWN_LINEFEED_V1,\n  PICK_YOUR_OWN_LINEFEED_V2\n} from './constants';\n\nconst features = [\n  BACK_UP_TO_LAST_PUNCTUATION,\n  COUNTER_V1,\n  PICK_YOUR_OWN_LINEFEED_V1,\n  PICK_YOUR_OWN_LINEFEED_V2\n];\n\nfunction setFeatures(features) {\n  return {\n    active: feature => {\n      return features.indexOf(feature) > -1;\n    }\n  };\n}\n\nconst feature = setFeatures(features);\n\nexport default feature;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport reducer from './store/reducer';\nimport config from './auth_config.json';\nimport feature from './feature';\nimport './index.css';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <App feature={feature} reducer={augment(reducer)} />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}