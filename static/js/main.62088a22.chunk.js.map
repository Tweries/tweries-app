{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.js","store/initialState.js","store/makeTweetstorm.js","store/reducer.js","containers/App/augment.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","useEffect","type","value","sub","className","alt","name","key","src","picture","aria-label","role","onClick","returnTo","href","initialState","hashtags","healthy","items","source","userId","LINEFEED","MAX_LENGTH","PREFIX_PLACEHOLDER","makePrefix","index","length","undefined","makeTweetstorm","suffix","copy","slice","parts","take","v","prune","indexOf","substr","push","map","part","tweet","trim","reducer","state","action","augment","BASE_URL","App","loading","fetch","then","response","json","data","console","log","catch","error","useReducer","onSubmit","e","preventDefault","data-testid","rows","onChange","target","item","readOnly","disabled","body","JSON","stringify","headers","method","classnames","version","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62088a22.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './NavBar.css';\n\nconst NavBar = ({ dispatch }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch({ type: 'SET_USER_ID', value: user.sub });\n    }\n  }, [dispatch, isAuthenticated, user]);\n\n  return (\n    <header className=\"NavBar\">\n      {isAuthenticated ? (\n        [\n          <img alt={user.name} key=\"img\" src={user.picture} />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              ðŸ‘‹\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            Log out\n          </button>\n        ]\n      ) : (\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","const HASHTAGS = '#QueenFTW';\nconst SOURCE = `Mama, just killed a man\nPut a gun against his head\nPulled my trigger, now he's dead\nMama, life had just begun\nBut now I've gone and thrown it all away\n[..]\nMama, ooh\nDidn't mean to make you cry\nIf I'm not back again this time tomorrow\nCarry on, carry on\nAs if nothing really matters\n[..]\nToo late, my time has come\nSends shivers down my spine\nBody's aching all the time\nGoodbye everybody, I've got to go\nGotta leave you all behind and face the truth`;\n\nconst initialState = {\n  hashtags: HASHTAGS,\n  healthy: false,\n  items: [],\n  source: SOURCE,\n  userId: null\n};\n\nexport default initialState;\n","import v from 'voca';\n\nconst LINEFEED = '[..]';\nconst MAX_LENGTH = 280;\nconst PREFIX_PLACEHOLDER = '_/_';\n\nfunction makePrefix(index, length) {\n  if (index === undefined && length === undefined) {\n    return PREFIX_PLACEHOLDER;\n  }\n  return `${index + 1}/${length}`;\n}\n\nfunction makeTweetstorm(source, suffix) {\n  let copy = source.slice();\n  const parts = [];\n\n  while (copy.length !== 0) {\n    let take = v.prune(\n      copy,\n      MAX_LENGTH - makePrefix().length - suffix.length - 2, // INFO: 1 space after the prefix and one space before the suffix\n      ''\n    );\n    if (take.indexOf(LINEFEED) > -1) {\n      take = v.substr(take, 0, take.indexOf(LINEFEED));\n      copy = v.substr(copy, take.length + 4); // INFO: 4 is the lenght of the linefeed\n    } else {\n      copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n    }\n    parts.push(take);\n  }\n\n  const tweetstorm = parts.map((part, index) => {\n    const tweet = `${makePrefix(index, parts.length)} ${v.trim(\n      part\n    )} ${suffix}`;\n    return { length: tweet.length, tweet };\n  });\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import initialState from './initialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CHANGE_HASHTAGS': {\n      return {\n        ...state,\n        hashtags: action.value\n      };\n    }\n    case 'CHANGE_SOURCE': {\n      return {\n        ...state,\n        source: action.value\n      };\n    }\n    case 'GENERATE_TWEETSTORM': {\n      return {\n        ...state,\n        items: makeTweetstorm(state.source, state.hashtags)\n      };\n    }\n    case 'RESET_TWEETSTORM': {\n      return {\n        ...state,\n        items: []\n      };\n    }\n    case 'SET_HEALTHY': {\n      return {\n        ...state,\n        healthy: action.value\n      };\n    }\n    case 'SET_USER_ID': {\n      return {\n        ...state,\n        userId: action.value\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","function augment(reducer) {\n  function logAction(state, action) {\n    // console.log('action:', action);\n    return reducer(state, action);\n  }\n  return logAction;\n}\n\nexport default augment;\n","import classnames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { version } from '../../../package.json';\nimport NavBar from '../../components/NavBar/NavBar';\nimport initialState from '../../store/initialState';\nimport reducer from '../../store/reducer';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './App.css';\nimport augment from './augment';\n\nconst BASE_URL = 'https://china-musk-api.herokuapp.com'; // 'https://china-musk-api.herokuapp.com' | 'http://localhost:9000'\n\nfunction App() {\n  const { isAuthenticated, loading } = useAuth0();\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/api/v1/health`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        dispatch({ type: 'SET_HEALTHY', value: true });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch({ type: 'SET_HEALTHY', value: false });\n      });\n  }, []);\n\n  const [{ hashtags, healthy, items, source, userId }, dispatch] = useReducer(\n    augment(reducer),\n    initialState\n  );\n\n  function disabled() {\n    return !isAuthenticated || !items.length > 0 || !healthy;\n  }\n\n  return loading ? (\n    <article>...</article>\n  ) : (\n    <article>\n      <NavBar dispatch={dispatch} />\n      <h1>Tweries</h1>\n      <form onSubmit={e => e.preventDefault()}>\n        <textarea\n          data-testid=\"source\"\n          rows={16}\n          value={source}\n          onChange={e =>\n            dispatch({ type: 'CHANGE_SOURCE', value: e.target.value })\n          }\n        />\n        <textarea\n          data-testid=\"hashtags\"\n          onChange={e =>\n            dispatch({ type: 'CHANGE_HASHTAGS', value: e.target.value })\n          }\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <button\n          data-testid=\"generate\"\n          onClick={() => dispatch({ type: 'GENERATE_TWEETSTORM' })}\n        >\n          Generate Tweetstorm\n        </button>\n        <ul data-testid=\"list\">\n          {items.map((item, index) => (\n            <li key={index}>\n              <textarea readOnly rows={8} value={item.tweet} />\n            </li>\n          ))}\n        </ul>\n        <button\n          data-testid=\"tweet\"\n          disabled={disabled()}\n          onClick={() => {\n            fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n              body: JSON.stringify({ items, userId }),\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              method: 'POST'\n            })\n              .then(response => response.json())\n              .then(data => {\n                console.log(data);\n                dispatch({ type: 'RESET_TWEETSTORM' });\n              })\n              .catch(error => {\n                console.log(error);\n                dispatch({ type: 'RESET_TWEETSTORM' });\n              });\n          }}\n        >\n          Tweet\n        </button>\n      </form>\n      <footer className={classnames({ healthy: healthy })}>v{version}</footer>\n    </article>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport config from './auth_config.json';\nimport './index.css';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\n\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.href}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}