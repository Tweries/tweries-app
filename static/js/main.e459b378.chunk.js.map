{"version":3,"sources":["constants.js","components/Footer/Footer.js","api/fetchTweet.js","containers/ReplyToTweet/ReplyToTweet.js","components/Counter/Counter.js","components/SubHeader/SubHeader.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","react-auth0-wrapper.js","containers/Playground/Playground.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["BASE_URL","Footer","a","inReplyToTweetUrl","userId","fetch","body","JSON","stringify","tweetUrl","headers","method","response","json","fetchTweet","copy","ReplyToTweet","callback","onChange","useState","isValidTweet","setIsValidTweet","waiting","setWaiting","useEffect","console","log","data","error","fetchData","className","htmlFor","classnames","data-testid","name","value","target","placeholder","rows","Counter","length","danger","type","defaultProps","SubHeader","ToastNotification","notification","onClick","link","message","href","rel","useLocalStorage","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","loginWithRedirect","logout","Playground","sub","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","setFeatures","render","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","logEvent","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e459b378.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const DANGER = 'danger';\n\nexport const FEATURE_V1 = 'FEATURE_V1';\n\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\nexport const SUCCESS = 'success';\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  '@TweriesApp': '@TweriesApp',\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-sm\">\n      <ul className=\"flex\">\n        <li className=\"m-1\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n        <li className=\"m-1\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n      </ul>\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}\n      </p>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  healthy: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired\n};\n\nexport default Footer;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ inReplyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweet`, {\n    body: JSON.stringify({ tweetUrl: inReplyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'If you want to reply to a specific Tweet:':\n    'If you want to reply to a specific Tweet:',\n  'URL goes here': 'URL goes here'\n};\n\nfunction ReplyToTweet({ callback, onChange, tweetUrl, userId }) {\n  const [isValidTweet, setIsValidTweet] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchTweet({\n          inReplyToTweetUrl: tweetUrl,\n          userId\n        });\n        console.log(response);\n        if (response.data) {\n          callback(null, response.data);\n          setIsValidTweet(true);\n          setWaiting(false);\n        } else {\n          callback(response.error);\n          setIsValidTweet(false);\n          setWaiting(false);\n        }\n      } catch (error) {\n        callback(error);\n        setIsValidTweet(false);\n        setWaiting(false);\n      }\n    }\n    if (tweetUrl && userId) {\n      setWaiting(true);\n      fetchData();\n    }\n  }, [callback, tweetUrl, userId]);\n\n  return (\n    <>\n      <label className=\"pb-1 text-sm\" htmlFor=\"reply-to\">\n        {copy['If you want to reply to a specific Tweet:']}\n      </label>\n      <textarea\n        className={classnames('p-2 tweries-border', {\n          'bg-green-200': waiting === false && tweetUrl !== '' && isValidTweet,\n          'bg-red-200': waiting === false && tweetUrl !== '' && !isValidTweet,\n          'tweries-background-color-blue-white':\n            waiting === true || tweetUrl === ''\n        })}\n        data-testid=\"reply-to\"\n        name=\"reply-to\"\n        onChange={({ target: { value } }) => {\n          onChange(value);\n        }}\n        placeholder={copy['URL goes here']}\n        rows={1}\n        value={tweetUrl}\n      />\n    </>\n  );\n}\n\nReplyToTweet.propTypes = {\n  callback: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tweetUrl: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n};\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\nfunction Counter({ length, type }) {\n  const value = length === 0 ? null : length;\n  const danger = type === 'tweet';\n\n  return (\n    <p\n      className={classnames('text-right text-xs', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      &nbsp;\n      {value}\n    </p>\n  );\n}\n\nCounter.propTypes = {\n  length: PropTypes.number.isRequired,\n  type: PropTypes.string\n};\n\nCounter.defaultProps = {\n  type: ''\n};\n\nexport default Counter;\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst copy = {\n  Tweries: 'Tweries',\n  \"When 280 characters just aren't enough\":\n    \"When 280 characters just aren't enough\"\n};\n\nfunction SubHeader() {\n  return (\n    <>\n      <h1 className=\"font-bold my-4 text-5xl text-center tweries-font-family\">\n        {copy.Tweries}\n      </h1>\n      <h2 className=\"my-4 text-center\">\n        {copy[\"When 280 characters just aren't enough\"]}\n      </h2>\n      <p className=\"my-4 text-center\">\n        <FontAwesomeIcon\n          className=\"tweries-color-blue\"\n          icon={faTwitter}\n          size=\"3x\"\n        />\n      </p>\n    </>\n  );\n}\n\nexport default SubHeader;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DANGER, SUCCESS } from '../../constants';\n\nconst copy = {\n  'Your tweetstorm has been created!': 'Your tweetstorm has been created!'\n};\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { link, message, type } = notification;\n    return (\n      <p\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === SUCCESS,\n          'bg-red-100 border-red-800 text-red-800': type === DANGER\n        })}\n        data-testid=\"notification\"\n      >\n        <span>\n          {type === DANGER && message}\n          {type === SUCCESS && (\n            <a\n              className=\"underline\"\n              href={link}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {copy['Your tweetstorm has been created!']}\n            </a>\n          )}\n        </span>\n        <button\n          className=\"font-bold\"\n          data-testid=\"dismiss\"\n          onClick={onClick}\n          type=\"button\"\n        >\n          &times;\n        </button>\n      </p>\n    );\n  }\n  return null;\n}\n\nToastNotification.defaultProps = {\n  notification: null\n};\n\nToastNotification.propTypes = {\n  notification: PropTypes.object,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  function setValue(value) {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport React, { useContext, useEffect, useState } from 'react';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        handleRedirectCallback,\n        isAuthenticated,\n        loading,\n        loginWithPopup,\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        logout: (...p) => auth0Client.logout(...p),\n        popupOpen,\n        user\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from 'react';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport ReplyToTweet from '../ReplyToTweet/ReplyToTweet';\nimport './Playground.css';\n\nfunction Playground() {\n  const { user } = useAuth0();\n\n  const tweetUrl = 'https://twitter.com/mattiaerre/status/1256370963622629376';\n\n  return (\n    <div className=\"Playground\">\n      {user ? (\n        <>\n          <ReplyToTweet\n            callback={console.log}\n            onChange={console.log}\n            tweetUrl={tweetUrl}\n            userId={user.sub}\n          />\n          <pre>userId: {user.sub}</pre>\n        </>\n      ) : (\n        <span>Loading user ...</span>\n      )}\n    </div>\n  );\n}\n\nexport default Playground;\n","import { FEATURE_V1 } from './constants';\n\nconst features = [FEATURE_V1];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './styles.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport App from './containers/App/App';\nimport Playground from './containers/Playground/Playground';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\n\nconst feature = setFeatures(features);\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nfunction onRedirectCallback(appState) {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n}\n\nconst { REACT_APP_PLAYGROUND } = process.env;\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>\n        {({ logEvent }) => (\n          <FeatureProvider features={features}>\n            {REACT_APP_PLAYGROUND === 'on' ? (\n              <Playground />\n            ) : (\n              <App\n                initialState={makeInitialState({ feature })}\n                reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n              />\n            )}\n          </FeatureProvider>\n        )}\n      </Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root'),\n  initializeReactGA()\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}