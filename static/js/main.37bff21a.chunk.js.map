{"version":3,"sources":["constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","components/LinefeedPicker/LinefeedPicker.js","components/NavBar/NavBar.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","react-auth0-wrapper.js","containers/App/Counter.js","containers/App/App.js","store/augment.js","feature.js","serviceWorker.js","index.js"],"names":["BASE_URL","EMPTY_FIRST_SEQUENCE_NUMBER_V1","READONLY_TWEETSTORM_V1","READONLY_TWEETSTORM_V2","SPACE_AFTER_PUNCTUATION_V1","LINEFEED","NEWLINE","a","fetch","response","json","fetchHealth","items","userId","body","JSON","stringify","headers","method","fetchTweetstorm","Footer","healthy","version","className","classnames","Date","getFullYear","href","rel","target","types","custom","newline","Custom","disabled","onChange","value","data-testid","maxLength","placeholder","size","LinefeedPicker","feature","useState","type","setType","setCustom","defaultChecked","name","htmlFor","e","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","alt","key","src","picture","aria-label","role","onClick","returnTo","window","location","ToastNotification","notification","message","useLocalStorage","initialValue","item","localStorage","getItem","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","MAX_LENGTH","SEQUENCE_NUMBER_PLACEHOLDER","makeTweetstorm","backUpToLastPunctuation","take","data","map","punctuation","v","lastIndexOf","sort","b","index","active","substr","hasSpaceAfterPunctuation","makeSequenceNumber","length","undefined","hashtags","linefeed","source","copy","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","tweet","trim","makeInitialState","CHANGE_HASHTAGS","CHANGE_LINEFEED","CHANGE_SOURCE","DISMISS_TOAST","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","makeReducer","state","action","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","useAuth0","useContext","Counter","App","initialState","reducer","loading","setHealthy","useEffect","fetchData","sub","hashtags_","setHashtags","source_","setSource","useReducer","onSubmit","preventDefault","rows","readOnly","renderTextarea","augment","logEvent","newState","features","setFeatures","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37bff21a.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const EMPTY_FIRST_SEQUENCE_NUMBER_V1 = 'EMPTY_FIRST_SEQUENCE_NUMBER_V1';\nexport const FEATURE_V1 = 'FEATURE_V1';\nexport const READONLY_TWEETSTORM_V1 = 'READONLY_TWEETSTORM_V1';\nexport const READONLY_TWEETSTORM_V2 = 'READONLY_TWEETSTORM_V2';\nexport const SPACE_AFTER_PUNCTUATION_V1 = 'SPACE_AFTER_PUNCTUATION_V1';\n\nexport const LINEFEED = ';;';\nexport const NEWLINE = '\\n';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v1/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n    body: JSON.stringify({ items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport React from 'react';\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-xs\">\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        Tweries v{version} &copy; {new Date().getFullYear()}{' '}\n      </p>\n      <ul className=\"flex\">\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            @TweriesApp\n          </a>\n        </li>\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            github.com/Tweries\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { LINEFEED, NEWLINE } from '../../constants';\n\nconst types = {\n  custom: 'custom',\n  newline: 'newline'\n};\n\nfunction Custom({ disabled, onChange, value }) {\n  return (\n    <input\n      className=\"bg-gray-200 border border-gray-500 rounded text-center\"\n      data-testid=\"linefeed\"\n      disabled={disabled}\n      maxLength=\"4\"\n      onChange={onChange}\n      placeholder={LINEFEED}\n      size=\"4\"\n      value={value}\n    />\n  );\n}\n\nfunction LinefeedPicker({ feature, onChange }) {\n  const [type, setType] = useState(types.newline);\n  const [custom, setCustom] = useState(LINEFEED);\n\n  return (\n    <ul className=\"flex\">\n      <li>\n        <input\n          className=\"ml-1\"\n          data-testid=\"newline\"\n          defaultChecked\n          name=\"linefeed\"\n          onChange={() => {\n            setType(types.newline);\n            onChange(NEWLINE);\n          }}\n          type=\"radio\"\n          value=\"newline\"\n        />\n        <label className=\"ml-1\" htmlFor=\"newline\">\n          Newline(s)\n        </label>\n      </li>\n      <li>\n        <input\n          className=\"ml-1\"\n          data-testid=\"custom\"\n          name=\"linefeed\"\n          onChange={() => {\n            setType(types.custom);\n            onChange(custom);\n          }}\n          type=\"radio\"\n          value=\"custom\"\n        />\n        <label className=\"ml-1\" htmlFor=\"louie\">\n          <Custom\n            disabled={type !== types.custom}\n            onChange={e => {\n              const {\n                target: { value }\n              } = e;\n              setCustom(value);\n              onChange(value);\n            }}\n            value={custom}\n          />\n        </label>\n      </li>\n    </ul>\n  );\n}\n\nexport default LinefeedPicker;\n","import React from 'react';\n\nconst NavBar = ({\n  dispatch,\n  isAuthenticated,\n  loginWithRedirect,\n  logout,\n  user\n}) => {\n  return (\n    <header className=\"flex flex-col items-center\">\n      {isAuthenticated ? (\n        [\n          <img\n            alt={user.name}\n            className=\"border border-gray-500 rounded\"\n            key=\"img\"\n            src={user.picture}\n          />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            className=\"bg-gray-300 border border-gray-500 font-bold px-4 rounded\"\n            data-testid=\"logout\"\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            Log out\n          </button>\n        ]\n      ) : (\n        <button\n          className=\"bg-gray-300 border border-gray-500 font-bold px-4 rounded\"\n          data-testid=\"login\"\n          onClick={() => loginWithRedirect({})}\n        >\n          Log in\n        </button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import classnames from 'classnames';\nimport React from 'react';\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { message, type } = notification;\n    return (\n      <div\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === 'success',\n          'bg-red-100 border-red-800 text-red-800': type === 'danger'\n        })}\n      >\n        <span>{message}</span>\n        <button className=\"font-bold\" data-testid=\"dismiss\" onClick={onClick}>\n          &times;\n        </button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport {\n  EMPTY_FIRST_SEQUENCE_NUMBER_V1,\n  LINEFEED,\n  NEWLINE,\n  SPACE_AFTER_PUNCTUATION_V1\n} from '../constants';\n\nconst MAX_LENGTH = 280;\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    if (feature.active(SPACE_AFTER_PUNCTUATION_V1)) {\n      // INFO: index + 1 is the character after the punctuation\n      return v.substr(take, index + 1, 1) === ' ';\n    }\n    return true;\n  }\n\n  function backUpToLastPunctuation(take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map(punctuation => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (data.value !== -1 && hasSpaceAfterPunctuation(data.value, take)) {\n      take = v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return SEQUENCE_NUMBER_PLACEHOLDER;\n    }\n    if (\n      feature.active(EMPTY_FIRST_SEQUENCE_NUMBER_V1) &&\n      index === 0 &&\n      length === 1\n    ) {\n      return '';\n    }\n    return `${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  function tweetstorm({ hashtags, linefeed, source }) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      linefeed = LINEFEED;\n    }\n\n    let copy = replaceNewlinesWithNewline(linefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      let max;\n      if (hashtags.length > 0) {\n        max = MAX_LENGTH - hashtags.length - makeSequenceNumber().length - 2; // INFO: 1 space before the hashtags and 1 space before the sequence number\n      } else {\n        max = MAX_LENGTH - makeSequenceNumber().length - 1; // INFO: 1 space before the sequence number\n      }\n      take = v.prune(copy, max, '');\n      if (take.indexOf(linefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(linefeed));\n        copy = v.substr(copy, take.length + linefeed.length);\n      } else {\n        take = backUpToLastPunctuation(take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweetstorm = parts.map((part, index) => {\n      let tweet;\n      if (hashtags.length > 0) {\n        tweet = `${v.trim(part)} ${hashtags} ${makeSequenceNumber(\n          index,\n          parts.length\n        )}`;\n      } else {\n        tweet = `${v.trim(part)} ${makeSequenceNumber(index, parts.length)}`;\n      }\n\n      return { length: tweet.length, tweet };\n    });\n\n    return tweetstorm;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { LINEFEED } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({\n  feature,\n  hashtags = '',\n  linefeed = LINEFEED,\n  source = ''\n}) {\n  return {\n    hashtags,\n    healthy: false,\n    items: makeTweetstorm(feature)({ hashtags, linefeed, source }),\n    linefeed,\n    notification: null,\n    source,\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_LINEFEED: 'CHANGE_LINEFEED',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS: {\n        return {\n          ...state,\n          hashtags: action.value,\n          items: makeTweetstorm(feature)({\n            hashtags: action.value,\n            linefeed: state.linefeed,\n            source: state.source\n          })\n        };\n      }\n      case types.CHANGE_LINEFEED: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: action.value,\n            source: state.source\n          }),\n          linefeed: action.value\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        return {\n          ...makeInitialState({ feature }),\n          healthy: state.healthy,\n          notification: action.value,\n          userId: state.userId\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from 'react';\n\nfunction Counter({ length }) {\n  const value = length === 0 ? '' : length;\n  return <small className=\"mb-2 text-gray-700 text-right\">{value}</small>;\n}\n\nexport default Counter;\n","import classnames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth.js';\nimport fetchTweetstorm from '../../api/fetchTweetstorm.js';\nimport Footer from '../../components/Footer/Footer';\nimport LinefeedPicker from '../../components/LinefeedPicker/LinefeedPicker';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification.js';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport {\n  READONLY_TWEETSTORM_V1,\n  READONLY_TWEETSTORM_V2\n} from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport Counter from './Counter';\n\nfunction App({ feature, initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  function setHealthy(error, data) {\n    let message = data;\n    let value = true;\n    if (error) {\n      message = error;\n      value = false;\n    }\n    console.log(message);\n    dispatch({ type: types.SET_HEALTHY, value });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetchHealth();\n        setHealthy(null, data);\n      } catch (error) {\n        setHealthy(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { hashtags, healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    hashtags: hashtags_,\n    items: makeTweetstorm(feature)({\n      hashtags: hashtags_,\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  function disabled() {\n    return !isAuthenticated || !items.length > 0 || !healthy;\n  }\n\n  function renderTextarea(item) {\n    if (feature.active(READONLY_TWEETSTORM_V2)) {\n      return <p>{item.tweet}</p>;\n    }\n    if (feature.active(READONLY_TWEETSTORM_V1)) {\n      return (\n        <textarea\n          disabled\n          className=\"bg-blue-200 p-2 rounded text-gray-700\"\n          readOnly\n          rows={3}\n          value={item.tweet}\n        />\n      );\n    } else {\n      return <textarea readOnly rows={4} value={item.tweet} />;\n    }\n  }\n\n  return loading ? (\n    <article className=\"container content-center flex flex-col items-center mx-auto m-1 p-4\">\n      ...\n    </article>\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <NavBar\n        dispatch={dispatch}\n        isAuthenticated={isAuthenticated}\n        loginWithRedirect={loginWithRedirect}\n        logout={logout}\n        user={user}\n      />\n      <h1 className=\"font-bold logo my-4 text-5xl text-center\">Tweries</h1>\n      <form className=\"flex flex-col\" onSubmit={e => e.preventDefault()}>\n        <small className=\"flex mb-8\">\n          Start typing, to insert a break prior to reaching 280 characters\n          please use{' '}\n          <LinefeedPicker\n            feature={feature}\n            onChange={value => {\n              dispatch({ type: types.CHANGE_LINEFEED, value });\n            }}\n          />\n        </small>\n        <textarea\n          className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n          data-testid=\"source\"\n          placeholder=\"What's happening?\"\n          rows={8}\n          value={source}\n          onChange={e => {\n            dispatch({ type: types.CHANGE_SOURCE, value: e.target.value });\n            setSource(e.target.value);\n          }}\n        />\n        <Counter length={source.length} />\n        <textarea\n          className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n          data-testid=\"hashtags\"\n          onChange={e => {\n            dispatch({ type: types.CHANGE_HASHTAGS, value: e.target.value });\n            setHashtags(e.target.value);\n          }}\n          placeholder=\"#hashtags\"\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <Counter length={hashtags.length} />\n        <ul className=\"flex flex-col\" data-testid=\"list\">\n          {items.map((item, index) => (\n            <li className=\"flex flex-col\" key={index}>\n              {renderTextarea(item)}\n              <Counter length={item.length} />\n            </li>\n          ))}\n        </ul>\n        <button\n          disabled={disabled()}\n          className={classnames(\n            'bg-gray-300 border border-gray-500 font-bold px-4 mb-2 rounded self-center',\n            {\n              'bg-blue-600 text-white': !disabled(),\n              'cursor-auto': disabled()\n            }\n          )}\n          data-testid=\"tweet\"\n          onClick={async () => {\n            try {\n              const data = await fetchTweetstorm({ items, userId });\n              console.log(data);\n              dispatch({\n                type: types.RESET_TWEETSTORM,\n                value: {\n                  message: 'The tweetstorm has been created successfully.',\n                  type: 'success'\n                }\n              });\n              setSource('');\n              setHashtags('');\n            } catch (error) {\n              console.log(error);\n              dispatch({\n                type: types.RESET_TWEETSTORM,\n                value: { message: error.message, type: 'danger' }\n              });\n              setSource('');\n              setHashtags('');\n            }\n          }}\n        >\n          Tweet\n        </button>\n      </form>\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS:\n      case types.CHANGE_SOURCE:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import {\n  EMPTY_FIRST_SEQUENCE_NUMBER_V1,\n  FEATURE_V1,\n  READONLY_TWEETSTORM_V1,\n  SPACE_AFTER_PUNCTUATION_V1\n} from './constants';\n\nconst features = [\n  EMPTY_FIRST_SEQUENCE_NUMBER_V1,\n  FEATURE_V1,\n  READONLY_TWEETSTORM_V1,\n  SPACE_AFTER_PUNCTUATION_V1\n];\n\nfunction setFeatures(features) {\n  return {\n    active: feature => {\n      return features.indexOf(feature) !== -1;\n    }\n  };\n}\n\nconst feature = setFeatures(features);\n\nexport default feature;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './styles/tailwind.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY, NEWLINE } from './constants';\nimport feature from './feature';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>\n        {({ logEvent }) => (\n          <App\n            feature={feature}\n            initialState={makeInitialState({\n              feature,\n              linefeed: NEWLINE\n            })}\n            reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n          />\n        )}\n      </Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}