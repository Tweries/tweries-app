{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/initialState.js","store/reducer.js","containers/App/augment.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","dispatch","isAuthenticated","loginWithRedirect","logout","user","useEffect","type","value","sub","className","alt","name","key","src","picture","aria-label","role","onClick","returnTo","href","useLocalStorage","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","LINEFEED","MAX_LENGTH","PREFIX_PLACEHOLDER","makeSequenceNumber","index","length","undefined","makeTweetstorm","source","hashtags","copy","slice","parts","take","v","prune","indexOf","substr","push","map","part","tweet","trim","makeInitialState","healthy","items","userId","reducer","state","action","augment","BASE_URL","App","loading","fetch","then","response","json","data","catch","hashtags_","setHashtags","source_","setSource","useReducer","disabled","onSubmit","e","preventDefault","data-testid","placeholder","rows","onChange","target","readOnly","classnames","body","headers","method","version","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e589024.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './NavBar.css';\n\nconst NavBar = ({ dispatch }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch({ type: 'SET_USER_ID', value: user.sub });\n    }\n  }, [dispatch, isAuthenticated, user]);\n\n  return (\n    <header className=\"NavBar\">\n      {isAuthenticated ? (\n        [\n          <img alt={user.name} key=\"img\" src={user.picture} />,\n          <span key=\"span\">\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>,\n          <button\n            key=\"button\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n          >\n            Log out\n          </button>\n        ]\n      ) : (\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\n      )}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\n\nconst LINEFEED = '[..]';\nconst MAX_LENGTH = 280;\nconst PREFIX_PLACEHOLDER = '_/_';\n\nfunction makeSequenceNumber(index, length) {\n  if (index === undefined && length === undefined) {\n    return PREFIX_PLACEHOLDER;\n  }\n  return `${index + 1}/${length}`;\n}\n\n// TODO: source <==> hashtags\nfunction makeTweetstorm(source, hashtags) {\n  let copy = source.slice();\n  const parts = [];\n\n  while (copy.length !== 0) {\n    let take;\n    if (hashtags.length > 0) {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - hashtags.length - makeSequenceNumber().length - 2, // INFO: 1 space before the hashtags and 1 space before the sequence number\n        ''\n      );\n    } else {\n      take = v.prune(\n        copy,\n        MAX_LENGTH - makeSequenceNumber().length - 1, // INFO: 1 space before the sequence number\n        ''\n      );\n    }\n    if (take.indexOf(LINEFEED) > -1) {\n      take = v.substr(take, 0, take.indexOf(LINEFEED));\n      copy = v.substr(copy, take.length + 4); // INFO: 4 is the length of the linefeed\n    } else {\n      copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n    }\n    parts.push(take);\n  }\n\n  const tweetstorm = parts.map((part, index) => {\n    let tweet;\n    if (hashtags.length > 0) {\n      tweet = `${v.trim(part)} ${hashtags} ${makeSequenceNumber(\n        index,\n        parts.length\n      )}`;\n    } else {\n      tweet = `${v.trim(part)} ${makeSequenceNumber(index, parts.length)}`;\n    }\n\n    return { length: tweet.length, tweet };\n  });\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import makeTweetstorm from './makeTweetstorm';\n\n/*\nconst HASHTAGS = '#QueenFTW';\n\nconst SOURCE = `Mama, just killed a man\nPut a gun against his head\nPulled my trigger, now he's dead\nMama, life had just begun\nBut now I've gone and thrown it all away\n[..]\nMama, ooh\nDidn't mean to make you cry\nIf I'm not back again this time tomorrow\nCarry on, carry on\nAs if nothing really matters\n[..]\nToo late, my time has come\nSends shivers down my spine\nBody's aching all the time\nGoodbye everybody, I've got to go\nGotta leave you all behind and face the truth`;\n*/\n\n/*\nconst initialState = {\n  hashtags: '',\n  healthy: false,\n  items: makeTweetstorm('', ''),\n  source: '',\n  userId: null\n};\n*/\n\nfunction makeInitialState(hashtags = '', source = '') {\n  return {\n    hashtags,\n    healthy: false,\n    items: makeTweetstorm(source, hashtags),\n    source,\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './initialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction reducer(state = makeInitialState('', ''), action) {\n  switch (action.type) {\n    case 'CHANGE_HASHTAGS': {\n      return {\n        ...state,\n        hashtags: action.value,\n        items: makeTweetstorm(state.source, action.value)\n      };\n    }\n    case 'CHANGE_SOURCE': {\n      return {\n        ...state,\n        items: makeTweetstorm(action.value, state.hashtags),\n        source: action.value\n      };\n    }\n    case 'RESET_TWEETSTORM': {\n      return {\n        ...makeInitialState(),\n        healthy: state.healthy,\n        userId: state.value\n      };\n    }\n    case 'SET_HEALTHY': {\n      return {\n        ...state,\n        healthy: action.value\n      };\n    }\n    case 'SET_USER_ID': {\n      return {\n        ...state,\n        userId: action.value\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","function augment(reducer) {\n  function logAction(state, action) {\n    // console.log('action:', action);\n    return reducer(state, action);\n  }\n  return logAction;\n}\n\nexport default augment;\n","import classnames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { version } from '../../../package.json';\nimport NavBar from '../../components/NavBar/NavBar';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeInitialState from '../../store/initialState';\nimport reducer from '../../store/reducer';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport './App.css';\nimport augment from './augment';\n\nconst BASE_URL = 'https://china-musk-api.herokuapp.com'; // 'https://china-musk-api.herokuapp.com' | 'http://localhost:9000'\n\nfunction App() {\n  const { isAuthenticated, loading } = useAuth0();\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/api/v1/health`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        dispatch({ type: 'SET_HEALTHY', value: true });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch({ type: 'SET_HEALTHY', value: false });\n      });\n  }, []);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [{ hashtags, healthy, items, source, userId }, dispatch] = useReducer(\n    augment(reducer),\n    makeInitialState(hashtags_, source_)\n  );\n\n  function disabled() {\n    return !isAuthenticated || !items.length > 0 || !healthy;\n  }\n\n  return loading ? (\n    <article>...</article>\n  ) : (\n    <article>\n      <NavBar dispatch={dispatch} />\n      <h1>Tweries</h1>\n      <form onSubmit={e => e.preventDefault()}>\n        <small>\n          Start typing, to insert a break prior to reaching 280 characters\n          please use [..]\n        </small>\n        <textarea\n          data-testid=\"source\"\n          placeholder=\"What's happening?\"\n          rows={8}\n          value={source}\n          onChange={e => {\n            dispatch({ type: 'CHANGE_SOURCE', value: e.target.value });\n            setSource(e.target.value);\n          }}\n        />\n        <textarea\n          data-testid=\"hashtags\"\n          onChange={e => {\n            dispatch({ type: 'CHANGE_HASHTAGS', value: e.target.value });\n            setHashtags(e.target.value);\n          }}\n          placeholder=\"#hashtags\"\n          rows={1}\n          type=\"text\"\n          value={hashtags}\n        />\n        <ul data-testid=\"list\">\n          {items.map((item, index) => (\n            <li key={index}>\n              <textarea readOnly rows={4} value={item.tweet} />\n            </li>\n          ))}\n        </ul>\n        <button\n          className={classnames('App__button', {\n            'App__button--disabled': disabled()\n          })}\n          data-testid=\"tweet\"\n          disabled={disabled()}\n          onClick={() => {\n            fetch(`${BASE_URL}/api/v1/tweetstorm`, {\n              body: JSON.stringify({ items, userId }),\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              method: 'POST'\n            })\n              .then(response => response.json())\n              .then(data => {\n                console.log(data);\n                dispatch({ type: 'RESET_TWEETSTORM' });\n                setSource('');\n                setHashtags('');\n              })\n              .catch(error => {\n                console.log(error);\n                dispatch({ type: 'RESET_TWEETSTORM' });\n                setSource('');\n                setHashtags('');\n              });\n          }}\n        >\n          Tweet\n        </button>\n      </form>\n      <footer className={classnames({ healthy: healthy })}>v{version}</footer>\n    </article>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport config from './auth_config.json';\nimport './index.css';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\n\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.href}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}