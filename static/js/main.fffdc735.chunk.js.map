{"version":3,"sources":["constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","components/NavBar/NavBar.js","api/fetchTweet.js","components/ReplyToTweet/ReplyToTweet.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","react-auth0-wrapper.js","containers/App/Counter.js","containers/App/makeLink.js","containers/App/TweetstormButton.js","containers/App/App.js","store/augment.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["BASE_URL","a","fetch","response","json","fetchHealth","inReplyToTweetUrl","items","userId","body","JSON","stringify","headers","method","fetchTweetstorm","copy","Footer","healthy","version","className","href","rel","target","classnames","Date","getFullYear","NavBar","logout","user","useState","show","setShow","alt","name","onError","src","picture","data-testid","onClick","returnTo","window","location","type","tweetUrl","fetchTweet","ReplyToTweet","callback","onChange","isValidTweet","setIsValidTweet","waiting","setWaiting","useEffect","console","log","data","error","fetchData","htmlFor","value","placeholder","rows","ToastNotification","notification","link","message","defaultProps","useLocalStorage","key","initialValue","item","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","makeTweetstorm","feature","backUpToLastPunctuation","take","map","punctuation","v","lastIndexOf","sort","b","index","substr","hasSpaceAfterPunctuation","endOfSource","makeSequenceNumber","length","undefined","linefeed","source","goodLinefeed","getGoodLineFeed","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","sequenceNumber","tweet","trim","id","Math","random","toString","makeInitialState","types","makeReducer","state","action","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","Counter","danger","makeLink","split","statusIds","TweetstormButton","disabled","icon","faSpinner","spin","App","initialState","reducer","useContext","useFeature","setHealthy","dispatch","sub","source_","setSource","useReducer","timer","setTimeout","clearTimeout","setInReplyToTweetUrl","resetTweetstorm","memoizedCallback","useCallback","screen_name","faTwitter","size","onSubmit","e","preventDefault","renderTextarea","find","faInfo","augment","logEvent","newState","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","render","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","setFeatures","renderApp","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fffdc735.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const DANGER = 'danger';\n\nexport const FEATURE_V1 = 'FEATURE_V1';\n\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\nexport const SUCCESS = 'success';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v2/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ inReplyToTweetUrl, items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweetstorm`, {\n    body: JSON.stringify({ inReplyToTweetUrl, items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries',\n  '@TweriesApp': '@TweriesApp'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-sm\">\n      <ul className=\"flex\">\n        <li className=\"m-1\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n        <li className=\"m-1\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n      </ul>\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}\n      </p>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  healthy: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst copy = {\n  'Log out': 'Log out'\n};\n\nfunction NavBar({ logout, user }) {\n  const [show, setShow] = useState(true);\n\n  return (\n    <>\n      <p className=\"flex items-center\">\n        {show && (\n          <img\n            alt={user.name}\n            className=\"border mr-2 rounded-full tweries-border-color\"\n            onError={/* istanbul ignore next */ () => setShow(false)}\n            src={user.picture}\n          />\n        )}\n        {user.name}\n      </p>\n      <button\n        className=\"px-4 underline\"\n        data-testid=\"logout\"\n        onClick={() =>\n          logout({\n            returnTo: window.location.href\n          })\n        }\n        type=\"button\"\n      >\n        {copy['Log out']}\n      </button>\n    </>\n  );\n}\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default NavBar;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ inReplyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweet`, {\n    body: JSON.stringify({ tweetUrl: inReplyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'If you want to reply to a specific Tweet:':\n    'If you want to reply to a specific Tweet:',\n  'Optional: reply to Tweet URL': 'Optional: reply to Tweet URL',\n  'URL goes here': 'URL goes here'\n};\n\n// TODO: move to containers\nfunction ReplyToTweet({ callback, onChange, tweetUrl, userId }) {\n  const [isValidTweet, setIsValidTweet] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchTweet({\n          inReplyToTweetUrl: tweetUrl,\n          userId\n        });\n        console.log(response);\n        if (response.data) {\n          callback(null, response.data);\n          setIsValidTweet(true);\n          setWaiting(false);\n        } else {\n          callback(response.error);\n          setIsValidTweet(false);\n          setWaiting(false);\n        }\n      } catch (error) {\n        callback(error);\n        setIsValidTweet(false);\n        setWaiting(false);\n      }\n    }\n    if (tweetUrl && userId) {\n      setWaiting(true);\n      fetchData();\n    }\n  }, [callback, tweetUrl, userId]);\n\n  return (\n    <>\n      <label className=\"pb-1 text-sm\" htmlFor=\"reply-to\">\n        {copy['If you want to reply to a specific Tweet:']}\n      </label>\n      <textarea\n        className={classnames('p-2 tweries-border', {\n          'tweries-background-color-blue-white':\n            waiting === true || tweetUrl === '',\n          'bg-green-200': waiting === false && tweetUrl !== '' && isValidTweet,\n          'bg-red-200': waiting === false && tweetUrl !== '' && !isValidTweet\n        })}\n        data-testid=\"reply-to\"\n        name=\"reply-to\"\n        onChange={({ target: { value } }) => {\n          onChange(value);\n        }}\n        placeholder={copy['URL goes here']}\n        rows={1}\n        value={tweetUrl}\n      />\n    </>\n  );\n}\n\nReplyToTweet.propTypes = {\n  callback: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tweetUrl: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n};\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DANGER, SUCCESS } from '../../constants';\n\nconst copy = {\n  'Your tweetstorm has been created!': 'Your tweetstorm has been created!'\n};\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { link, message, type } = notification;\n    return (\n      <p\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === SUCCESS,\n          'bg-red-100 border-red-800 text-red-800': type === DANGER\n        })}\n      >\n        <span>\n          {type === DANGER && message}\n          {type === SUCCESS && (\n            <a\n              className=\"underline\"\n              href={link}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {copy['Your tweetstorm has been created!']}\n            </a>\n          )}\n        </span>\n        <button\n          className=\"font-bold\"\n          data-testid=\"dismiss\"\n          onClick={onClick}\n          type=\"button\"\n        >\n          &times;\n        </button>\n      </p>\n    );\n  }\n  return null;\n}\n\nToastNotification.defaultProps = {\n  notification: null\n};\n\nToastNotification.propTypes = {\n  notification: PropTypes.object,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  function setValue(value) {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport { MAX_LENGTH, NEWLINE } from '../constants';\n\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\n// CREDIT: https://gist.github.com/gordonbrander/2230317\nfunction generateUniqueId() {\n  return `_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    // INFO: index + 1 is the character after the punctuation\n    return v.substr(take, index + 1, 1) === ' ';\n  }\n\n  function endOfSource(copy, take) {\n    return copy === take;\n  }\n\n  function backUpToLastPunctuation(copy, take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map((punctuation) => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (\n      data.value !== -1 &&\n      hasSpaceAfterPunctuation(data.value, take) &&\n      !endOfSource(copy, take)\n    ) {\n      return v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return ` ${SEQUENCE_NUMBER_PLACEHOLDER}`;\n    }\n    if (index === 0 && length === 1) {\n      return '';\n    }\n    return ` ${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  function getGoodLineFeed(linefeed) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      return NEWLINE;\n    }\n    return linefeed;\n  }\n\n  function tweetstorm({ linefeed, source }) {\n    const goodLinefeed = getGoodLineFeed(linefeed);\n\n    let copy = replaceNewlinesWithNewline(goodLinefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      const max = MAX_LENGTH - makeSequenceNumber().length; // INFO: 1 space before the sequence number\n      take = v.prune(copy, max, '');\n      if (take.indexOf(goodLinefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(goodLinefeed));\n        copy = v.substr(copy, take.length + goodLinefeed.length);\n      } else {\n        take = backUpToLastPunctuation(copy, take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweets = parts.map((part, index) => {\n      const sequenceNumber = makeSequenceNumber(index, parts.length);\n      const tweet = `${v.trim(part)}${sequenceNumber}`;\n      return { id: generateUniqueId(), tweet };\n    });\n\n    return tweets;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { NEWLINE } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({ feature }) {\n  return {\n    healthy: false,\n    items: makeTweetstorm(feature)({\n      linefeed: NEWLINE,\n      source: ''\n    }),\n    linefeed: NEWLINE,\n    notification: null,\n    source: '',\n    userId: ''\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  APPEND_SCREEN_NAME: 'APPEND_SCREEN_NAME',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  CHANGE_TWEET: 'CHANGE_TWEET',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.APPEND_SCREEN_NAME: {\n        const source = `@${action.value} ${state.source}`;\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            linefeed: state.linefeed,\n            source\n          }),\n          source\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.CHANGE_TWEET: {\n        return {\n          ...state,\n          items: [...state.items].map((item) => {\n            const copy = { ...item };\n            if (copy.id === action.value.id) {\n              copy.tweet = action.value.tweet;\n            }\n            return copy;\n          })\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        return {\n          ...makeInitialState({ feature }),\n          healthy: state.healthy,\n          notification: action.value,\n          userId: state.userId\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\n// TODO: move to components\nfunction Counter({ length, type }) {\n  const value = length === 0 ? null : length;\n  const danger = type === 'tweet';\n\n  return (\n    <p\n      className={classnames('text-right text-xs', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      &nbsp;\n      {value}\n    </p>\n  );\n}\n\nCounter.propTypes = {\n  length: PropTypes.number.isRequired,\n  type: PropTypes.string\n};\n\nCounter.defaultProps = {\n  type: ''\n};\n\nexport default Counter;\n","function makeLink(data) {\n  return `https://twitter.com/${data.userId.split('|')[1]}/status/${\n    data.statusIds[0]\n  }`;\n}\n\nexport default makeLink;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst copy = {\n  Tweet: 'Tweet'\n};\n\n// TODO: move to components\nfunction TweetstormButton({ disabled, onClick, waiting }) {\n  return (\n    <button\n      disabled={disabled}\n      className={classnames(\n        'bg-gray-300 border border-gray-500 font-bold my-4 px-6 py-2 rounded self-center',\n        {\n          'tweries-background-color-blue-button': !disabled,\n          'cursor-auto': disabled\n        }\n      )}\n      data-testid=\"tweet\"\n      onClick={onClick}\n      type=\"button\"\n    >\n      {waiting ? <FontAwesomeIcon icon={faSpinner} spin /> : copy.Tweet}\n    </button>\n  );\n}\n\nTweetstormButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  waiting: PropTypes.bool.isRequired\n};\n\nexport default TweetstormButton;\n","import classnames from 'classnames';\nimport { useFeature } from 'feature-provider';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth';\nimport fetchTweetstorm from '../../api/fetchTweetstorm';\nimport Footer from '../../components/Footer/Footer';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ReplyToTweet from '../../components/ReplyToTweet/ReplyToTweet';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport { DANGER, MAX_LENGTH, SUCCESS } from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport Counter from './Counter';\nimport makeLink from './makeLink';\nimport TweetstormButton from './TweetstormButton';\n\nconst copy = {\n  '...': '...',\n  'Edits can be made in the boxes below before publishing':\n    'Edits can be made in the boxes below before publishing',\n  'Log in': 'Log in',\n  'Login is necessary in order for your series of Tweets to be sent through your Twitter account':\n    'Login is necessary in order for your series of Tweets to be sent through your Twitter account',\n  'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)':\n    'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)',\n  Tags: 'Tags',\n  Tweet: 'Tweet',\n  Tweries: 'Tweries',\n  'Type your thoughts here': 'Type your thoughts here',\n  \"When 280 characters just aren't enough\":\n    \"When 280 characters just aren't enough\",\n  'Your tweetstorm has been created!': 'Your tweetstorm has been created!'\n};\n\nfunction App({ initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  const feature = useFeature();\n\n  function setHealthy(error, response) {\n    if (error) {\n      console.log(error);\n      dispatch({ type: types.SET_HEALTHY, value: false });\n    }\n    if (response) {\n      console.log(response);\n      dispatch({\n        type: types.SET_HEALTHY,\n        value: !response.error\n      });\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchHealth();\n        setHealthy(null, response);\n      } catch (error) {\n        setHealthy(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    items: makeTweetstorm(feature)({\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (notification && notification.type !== DANGER) {\n      const timer = setTimeout(() => {\n        dispatch({ type: types.DISMISS_TOAST });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // TODO: add to global state?\n  const [inReplyToTweetUrl, setInReplyToTweetUrl] = useState('');\n  const [waiting, setWaiting] = useState(false);\n\n  function disabled() {\n    return (\n      !isAuthenticated ||\n      !items.length > 0 ||\n      !healthy ||\n      items.find((item) => item.tweet.length > MAX_LENGTH)\n    );\n  }\n\n  function renderTextarea(item) {\n    return (\n      <textarea\n        className={classnames('p-2 tweries-background-color-blue-white', {\n          'tweries-border': item.tweet.length <= MAX_LENGTH,\n          'border-2 border-red-500': item.tweet.length > MAX_LENGTH\n        })}\n        name={item.id}\n        onChange={(e) => {\n          dispatch({\n            type: types.CHANGE_TWEET,\n            value: {\n              id: item.id,\n              tweet: e.target.value\n            }\n          });\n        }}\n        rows={4}\n        value={item.tweet}\n      />\n    );\n  }\n\n  function resetTweetstorm(error, response) {\n    let link = null;\n    let message = null;\n    let type = SUCCESS;\n    if (error || response.error) {\n      message = error ? error.message : response.error.message;\n      type = DANGER;\n    } else {\n      link = makeLink(response.data);\n    }\n    console.log(error, response);\n    dispatch({\n      type: types.RESET_TWEETSTORM,\n      value: {\n        link,\n        message,\n        type\n      }\n    });\n    setInReplyToTweetUrl('');\n    setSource('');\n    setWaiting(false);\n  }\n\n  async function onClick() {\n    setWaiting(true);\n    try {\n      const response = await fetchTweetstorm({\n        inReplyToTweetUrl,\n        items,\n        userId\n      });\n      resetTweetstorm(null, response);\n    } catch (error) {\n      resetTweetstorm(error);\n    }\n  }\n\n  const memoizedCallback = useCallback((error, data) => {\n    if (data) {\n      dispatch({\n        type: types.APPEND_SCREEN_NAME,\n        value: data.user.screen_name\n      });\n    }\n  }, []);\n\n  return loading ? (\n    <article className=\"container content-center mx-auto m-1 p-4 text-center\">\n      {copy['...']}\n    </article>\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <header className=\"flex flex-row justify-between\">\n        {isAuthenticated ? (\n          <NavBar logout={logout} user={user} />\n        ) : (\n          <span className=\"my-4\" />\n        )}\n      </header>\n      <h1 className=\"font-bold my-4 text-5xl text-center tweries-font-family\">\n        {copy.Tweries}\n      </h1>\n      <h2 className=\"my-4 text-center\">\n        {copy[\"When 280 characters just aren't enough\"]}\n      </h2>\n      <p className=\"my-4 text-center\">\n        <FontAwesomeIcon\n          className=\"tweries-color-blue\"\n          icon={faTwitter}\n          size=\"3x\"\n        />\n      </p>\n      {isAuthenticated ? (\n        <form className=\"flex flex-col\" onSubmit={(e) => e.preventDefault()}>\n          <ReplyToTweet\n            callback={memoizedCallback}\n            onChange={setInReplyToTweetUrl}\n            tweetUrl={inReplyToTweetUrl}\n            userId={userId}\n          />\n          <p className=\"italic py-4 text-sm\">\n            {\n              copy[\n                'Start typing. To insert a break prior to reaching 280 characters, please use Newline(s)'\n              ]\n            }\n          </p>\n          <textarea\n            className=\"p-2 tweries-background-color-blue-white tweries-border\"\n            data-testid=\"source\"\n            name=\"source\"\n            onChange={(e) => {\n              dispatch({\n                type: types.CHANGE_SOURCE,\n                value: e.target.value\n              });\n              setSource(e.target.value);\n            }}\n            placeholder={copy['Type your thoughts here']}\n            rows={8}\n            value={source}\n          />\n          <Counter length={source.length} />\n          {items.length > 0 && [\n            <p className=\"italic py-4 text-sm\" key=\"copy\">\n              {copy['Edits can be made in the boxes below before publishing']}\n            </p>,\n            <ul className=\"flex flex-col\" data-testid=\"list\" key=\"list\">\n              {items.map((item, index) => (\n                <li className=\"flex flex-col\" key={item.id}>\n                  <label className=\"pb-1 text-sm\" htmlFor={item.id}>\n                    {`${copy.Tweet} #${index + 1}`}\n                  </label>\n                  {renderTextarea(item)}\n                  <Counter length={item.tweet.length} type=\"tweet\" />\n                </li>\n              ))}\n            </ul>\n          ]}\n          <TweetstormButton\n            disabled={disabled() || false}\n            onClick={onClick}\n            waiting={waiting}\n          />\n        </form>\n      ) : (\n        <>\n          <p className=\"flex justify-center my-4\">\n            <button\n              className=\"font-bold px-6 py-2 rounded tweries-background-color-blue-button\"\n              data-testid=\"login\"\n              onClick={() => loginWithRedirect({})}\n              type=\"button\"\n            >\n              {copy['Log in']}\n            </button>\n          </p>\n          <p className=\"flex justify-center my-4\">\n            <FontAwesomeIcon\n              className=\"tooltip tweries-color-dark-blue\"\n              icon={faInfo}\n              size=\"1x\"\n            />\n            <span className=\"p-3 mt-6 -ml-1 tooltip-text tweries-border\">\n              {\n                copy[\n                  'Login is necessary in order for your series of Tweets to be sent through your Twitter account'\n                ]\n              }\n            </span>\n          </p>\n        </>\n      )}\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nApp.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  reducer: PropTypes.func.isRequired\n};\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_SOURCE:\n      case types.CHANGE_TWEET:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import { FEATURE_V1 } from './constants';\n\nconst features = [FEATURE_V1];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './styles.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nfunction onRedirectCallback(appState) {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n}\n\nfunction renderApp(logEvent) {\n  const feature = setFeatures(features);\n  return (\n    <FeatureProvider features={features}>\n      <App\n        initialState={makeInitialState({ feature })}\n        reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n      />\n    </FeatureProvider>\n  );\n}\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>{({ logEvent }) => renderApp(logEvent)}</Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root'),\n  initializeReactGA()\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}