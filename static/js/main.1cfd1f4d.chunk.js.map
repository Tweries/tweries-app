{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.js","components/Layout/Layout.js","constants.js","api/fetchHealth.js","api/fetchTweetstorm.js","components/Footer/Footer.js","api/fetchTweet.js","components/ReplyToTweet/ReplyToTweet.js","components/ToastNotification/ToastNotification.js","hooks/useLocalStorage.js","store/makeTweetstorm.js","store/makeInitialState.js","store/makeReducer.js","containers/App/Counter.js","containers/App/TweetstormButton.js","containers/App/App.js","store/augment.js","features.js","initializeReactGA.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","copy","Button","dataTestId","onClick","className","data-testid","NavBar","isAuthenticated","loginWithRedirect","logout","user","alt","name","src","picture","aria-label","role","returnTo","href","Layout","BASE_URL","SHOW_FORM_V1","MAX_LENGTH","NEWLINE","a","fetch","response","json","fetchHealth","inReplyToTweetUrl","items","userId","body","JSON","stringify","headers","method","fetchTweetstorm","Tweries","Footer","healthy","version","classnames","Date","getFullYear","rel","target","tweetUrl","fetchTweet","ReplyToTweet","callback","onChange","useState","isValidTweet","setIsValidTweet","waiting","setWaiting","useEffect","console","log","data","error","fetchData","value","placeholder","rows","ToastNotification","notification","message","type","useLocalStorage","key","initialValue","item","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","SEQUENCE_NUMBER_PLACEHOLDER","makeTweetstorm","feature","backUpToLastPunctuation","take","map","punctuation","v","lastIndexOf","sort","b","index","substr","hasSpaceAfterPunctuation","endOfSource","makeSequenceNumber","length","undefined","hashtags","linefeed","source","slice","replace","replaceNewlinesWithNewline","parts","max","prune","indexOf","push","part","tweet","sequenceNumber","trim","id","Math","random","toString","makeInitialState","types","APPEND_SCREEN_NAME","CHANGE_HASHTAGS","CHANGE_SOURCE","CHANGE_TWEET","DISMISS_TOAST","RESET_TWEETSTORM","SET_HEALTHY","SET_USER_ID","makeReducer","state","action","Counter","danger","Tweet","TweetstormButton","disabled","icon","faSpinner","spin","App","initialState","reducer","loading","useFeature","setHealthy","dispatch","sub","hashtags_","setHashtags","source_","setSource","useReducer","timer","setTimeout","clearTimeout","setInReplyToTweetUrl","resetTweetstorm","memoizedCallback","useCallback","screen_name","active","onSubmit","e","preventDefault","renderTextarea","find","augment","logEvent","newState","features","initializeReactGA","ReactGA","initialize","pageview","Boolean","hostname","match","render","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","client_id","config","clientId","domain","targetUrl","redirect_uri","origin","amplitudeInstance","amplitude","getInstance","apiKey","setFeatures","renderApp","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cfd1f4d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from 'react';\n\nconst copy = {\n  'Log in': 'Log in',\n  'Log out': 'Log out'\n};\n\nfunction Button({ dataTestId, onClick, copy }) {\n  return (\n    <button\n      className=\"bg-gray-300 border border-gray-500 font-bold px-4 rounded\"\n      data-testid={dataTestId}\n      onClick={onClick}\n    >\n      {copy}\n    </button>\n  );\n}\n\nfunction NavBar({ isAuthenticated, loginWithRedirect, logout, user }) {\n  return (\n    <header className=\"flex flex-col items-center\">\n      {isAuthenticated ? (\n        <>\n          <img\n            alt={user.name}\n            className=\"border border-gray-500 rounded\"\n            src={user.picture}\n          />\n          <span>\n            <span aria-label=\"hello\" role=\"img\">\n              👋\n            </span>{' '}\n            {user.name}\n          </span>\n          <Button\n            dataTestId=\"logout\"\n            onClick={() =>\n              logout({\n                returnTo: window.location.href\n              })\n            }\n            copy={copy['Log out']}\n          />\n        </>\n      ) : (\n        <Button\n          dataTestId=\"login\"\n          onClick={() => loginWithRedirect({})}\n          copy={copy['Log in']}\n        />\n      )}\n    </header>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport NavBar from '../NavBar/NavBar';\n\nconst copy = {\n  Tweries: 'Tweries'\n};\n\nfunction Layout() {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex mb-4\">\n        <div className=\"w-full\">\n          {loading ? (\n            <h2 className=\"text-center\">...</h2>\n          ) : (\n            <NavBar\n              dispatch={console.log}\n              isAuthenticated={isAuthenticated}\n              loginWithRedirect={loginWithRedirect}\n              logout={logout}\n              user={user}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"flex mb-4\">\n        <div className=\"w-full\">\n          <h1 className=\"font-bold logo my-4 text-5xl text-center\">\n            {copy.Tweries}\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","const { NODE_ENV } = process.env;\n\nexport const AMPLITUDE_KEY =\n  NODE_ENV === 'development'\n    ? '039c425306f07c99a39e41bc9af44bc3'\n    : '7cbe8a9a37db4f88f06c79a387943cca';\n\nexport const BASE_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:9000'\n    : 'https://tweries-api.herokuapp.com';\n\nexport const FEATURE_V1 = 'FEATURE_V1';\nexport const SHOW_FORM_V1 = 'SHOW_FORM_V1';\n\nexport const MAX_LENGTH = 280;\nexport const NEWLINE = '\\n';\n","import { BASE_URL } from '../constants';\n\nasync function fetchHealth() {\n  const response = await fetch(`${BASE_URL}/api/v2/health`);\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchHealth;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweetstorm({ inReplyToTweetUrl, items, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweetstorm`, {\n    body: JSON.stringify({ inReplyToTweetUrl, items, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweetstorm;\n","import classnames from 'classnames';\nimport React from 'react';\n\nconst copy = {\n  'github.com/Tweries': 'github.com/Tweries',\n  Tweries: 'Tweries',\n  '@TweriesApp': '@TweriesApp'\n};\n\nfunction Footer({ healthy, version }) {\n  return (\n    <footer className=\"flex flex-col items-center text-xs\">\n      <p\n        className={classnames({\n          'text-green-800': healthy,\n          'text-red-800': !healthy\n        })}\n      >\n        {copy.Tweries} v{version} &copy; {new Date().getFullYear()}{' '}\n      </p>\n      <ul className=\"flex\">\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://twitter.com/TweriesApp\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['@TweriesApp']}\n          </a>\n        </li>\n        <li className=\"font-bold m-1 text-blue-800\">\n          <a\n            href=\"https://github.com/Tweries\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {copy['github.com/Tweries']}\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { BASE_URL } from '../constants';\n\nasync function fetchTweet({ inReplyToTweetUrl, userId }) {\n  const response = await fetch(`${BASE_URL}/api/v2/tweet`, {\n    body: JSON.stringify({ tweetUrl: inReplyToTweetUrl, userId }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const json = await response.json();\n  return json;\n}\n\nexport default fetchTweet;\n","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport fetchTweet from '../../api/fetchTweet';\n\nconst copy = {\n  'Optional: reply to Tweet URL': 'Optional: reply to Tweet URL'\n};\n\n// TODO: move to containers\nfunction ReplyToTweet({ callback, onChange, tweetUrl, userId }) {\n  const [isValidTweet, setIsValidTweet] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchTweet({\n          inReplyToTweetUrl: tweetUrl,\n          userId\n        });\n        console.log(response);\n        if (response.data) {\n          callback(null, response.data);\n          setIsValidTweet(true);\n          setWaiting(false);\n        } else {\n          callback(response.error);\n          setIsValidTweet(false);\n          setWaiting(false);\n        }\n      } catch (error) {\n        callback(error);\n        setIsValidTweet(false);\n        setWaiting(false);\n      }\n    }\n    if (tweetUrl && userId) {\n      setWaiting(true);\n      fetchData();\n    }\n  }, [callback, tweetUrl, userId]);\n\n  return (\n    <textarea\n      className={classnames('border border-gray-500 p-2 rounded', {\n        'bg-gray-200': waiting === true || tweetUrl === '',\n        'bg-green-200': waiting === false && tweetUrl !== '' && isValidTweet,\n        'bg-red-200': waiting === false && tweetUrl !== '' && !isValidTweet\n      })}\n      data-testid=\"reply-to\"\n      onChange={({ target: { value } }) => {\n        onChange(value);\n      }}\n      placeholder={copy['Optional: reply to Tweet URL']}\n      rows={1}\n      value={tweetUrl}\n    />\n  );\n}\n\nexport default ReplyToTweet;\n","import classnames from 'classnames';\nimport React from 'react';\n\nfunction ToastNotification({ notification, onClick }) {\n  if (notification) {\n    const { message, type } = notification;\n    return (\n      <div\n        className={classnames('border flex justify-between mb-2 p-2 rounded', {\n          'bg-green-100 border-green-800 text-green-800': type === 'success',\n          'bg-red-100 border-red-800 text-red-800': type === 'danger'\n        })}\n      >\n        <span>{message}</span>\n        <button className=\"font-bold\" data-testid=\"dismiss\" onClick={onClick}>\n          &times;\n        </button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ToastNotification;\n","import { useState } from 'react';\n\n// credit: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import v from 'voca';\nimport { MAX_LENGTH, NEWLINE } from '../constants';\n\nconst SEQUENCE_NUMBER_PLACEHOLDER = '_/_';\n\n// CREDIT: https://gist.github.com/gordonbrander/2230317\nfunction generateUniqueId() {\n  return (\n    '_' +\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  );\n}\n\nfunction makeTweetstorm(feature) {\n  function hasSpaceAfterPunctuation(index, take) {\n    // INFO: index + 1 is the character after the punctuation\n    return v.substr(take, index + 1, 1) === ' ';\n  }\n\n  function endOfSource(copy, take) {\n    return copy === take;\n  }\n\n  function backUpToLastPunctuation(copy, take) {\n    const punctuations = ['-', '–', '.', ',', ';', '!', '?'];\n    const data = punctuations\n      .map(punctuation => ({\n        key: punctuation,\n        value: v.lastIndexOf(take, punctuation)\n      }))\n      .sort((a, b) => {\n        if (a.value > b.value) {\n          return -1;\n        }\n        if (a.value < b.value) {\n          return 1;\n        }\n        return 0;\n      })[0];\n    if (\n      data.value !== -1 &&\n      hasSpaceAfterPunctuation(data.value, take) &&\n      !endOfSource(copy, take)\n    ) {\n      take = v.substr(take, 0, data.value + 1);\n    }\n    return take;\n  }\n\n  function makeSequenceNumber(index, length) {\n    if (index === undefined && length === undefined) {\n      return ` ${SEQUENCE_NUMBER_PLACEHOLDER}`;\n    }\n    if (index === 0 && length === 1) {\n      return '';\n    }\n    return ` ${index + 1}/${length}`;\n  }\n\n  function replaceNewlinesWithNewline(linefeed, source) {\n    let copy = source.slice();\n    if (linefeed === NEWLINE) {\n      copy = copy.replace(/\\n+/g, NEWLINE);\n    }\n    return copy;\n  }\n\n  // TODO: change name\n  function tweetstorm({ hashtags, linefeed, source }) {\n    // INFO: hack :(\n    if (linefeed === null || linefeed === undefined || linefeed === '') {\n      linefeed = NEWLINE;\n    }\n\n    let copy = replaceNewlinesWithNewline(linefeed, source);\n    const parts = [];\n\n    while (copy.length !== 0) {\n      let take;\n      let max;\n      if (hashtags.length > 0) {\n        max = MAX_LENGTH - hashtags.length - 1 - makeSequenceNumber().length; // INFO: 1 space before the hashtags\n      } else {\n        max = MAX_LENGTH - makeSequenceNumber().length; // INFO: 1 space before the sequence number\n      }\n      take = v.prune(copy, max, '');\n      if (take.indexOf(linefeed) !== -1) {\n        take = v.substr(take, 0, take.indexOf(linefeed));\n        copy = v.substr(copy, take.length + linefeed.length);\n      } else {\n        take = backUpToLastPunctuation(copy, take);\n        copy = v.substr(copy, take.length + 1); // INFO: 1 is the space after the word\n      }\n      parts.push(take);\n    }\n\n    const tweetstorm = parts.map((part, index) => {\n      let tweet;\n      const sequenceNumber = makeSequenceNumber(index, parts.length);\n      if (hashtags.length > 0) {\n        tweet = `${v.trim(part)} ${hashtags}${sequenceNumber}`;\n      } else {\n        tweet = `${v.trim(part)}${sequenceNumber}`;\n      }\n\n      return { id: generateUniqueId(), tweet };\n    });\n\n    return tweetstorm;\n  }\n\n  return tweetstorm;\n}\n\nexport default makeTweetstorm;\n","import { NEWLINE } from '../constants';\nimport makeTweetstorm from './makeTweetstorm';\n\nfunction makeInitialState({ feature }) {\n  return {\n    hashtags: '',\n    healthy: false,\n    items: makeTweetstorm(feature)({\n      hashtags: '',\n      linefeed: NEWLINE,\n      source: ''\n    }),\n    linefeed: NEWLINE,\n    notification: null,\n    source: '',\n    userId: null\n  };\n}\n\nexport default makeInitialState;\n","import makeInitialState from './makeInitialState';\nimport makeTweetstorm from './makeTweetstorm';\n\nexport const types = {\n  APPEND_SCREEN_NAME: 'APPEND_SCREEN_NAME',\n  CHANGE_HASHTAGS: 'CHANGE_HASHTAGS',\n  CHANGE_SOURCE: 'CHANGE_SOURCE',\n  CHANGE_TWEET: 'CHANGE_TWEET',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  RESET_TWEETSTORM: 'RESET_TWEETSTORM',\n  SET_HEALTHY: 'SET_HEALTHY',\n  SET_USER_ID: 'SET_USER_ID'\n};\n\nfunction makeReducer(feature) {\n  function reducer(state = makeInitialState({ feature }), action) {\n    switch (action.type) {\n      case types.APPEND_SCREEN_NAME: {\n        const source = `@${action.value} ${state.source}`;\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source\n          }),\n          source\n        };\n      }\n      case types.CHANGE_HASHTAGS: {\n        return {\n          ...state,\n          hashtags: action.value,\n          items: makeTweetstorm(feature)({\n            hashtags: action.value,\n            linefeed: state.linefeed,\n            source: state.source\n          })\n        };\n      }\n      case types.CHANGE_SOURCE: {\n        return {\n          ...state,\n          items: makeTweetstorm(feature)({\n            hashtags: state.hashtags,\n            linefeed: state.linefeed,\n            source: action.value\n          }),\n          source: action.value\n        };\n      }\n      case types.CHANGE_TWEET: {\n        return {\n          ...state,\n          items: [...state.items].map(item => {\n            if (item.id === action.value.id) {\n              item.tweet = action.value.tweet;\n            }\n            return item;\n          })\n        };\n      }\n      case types.DISMISS_TOAST: {\n        return {\n          ...state,\n          notification: null\n        };\n      }\n      case types.RESET_TWEETSTORM: {\n        return {\n          ...makeInitialState({ feature }),\n          healthy: state.healthy,\n          notification: action.value,\n          userId: state.userId\n        };\n      }\n      case types.SET_HEALTHY: {\n        return {\n          ...state,\n          healthy: action.value\n        };\n      }\n      case types.SET_USER_ID: {\n        return {\n          ...state,\n          userId: action.value\n        };\n      }\n      default:\n        return state;\n    }\n  }\n\n  return reducer;\n}\n\nexport default makeReducer;\n","import classnames from 'classnames';\nimport React from 'react';\nimport { MAX_LENGTH } from '../../constants';\n\n// TODO: move to components\nfunction Counter({ length, type }) {\n  const value = length === 0 ? '' : length;\n  const danger = type === 'tweet' ? true : false;\n\n  return (\n    <small\n      className={classnames('mb-2 text-right', {\n        'text-gray-700': !danger || (danger && length <= MAX_LENGTH),\n        'text-red-500 ': danger && length > MAX_LENGTH\n      })}\n    >\n      {value}\n    </small>\n  );\n}\n\nexport default Counter;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\nimport React from 'react';\n\nconst copy = {\n  Tweet: 'Tweet'\n};\n\n// TODO: move to components\nfunction TweetstormButton({ disabled, onClick, waiting }) {\n  return (\n    <button\n      disabled={disabled}\n      className={classnames(\n        'bg-gray-300 border border-gray-500 font-bold px-4 mb-2 rounded self-center',\n        {\n          'bg-blue-600 text-white': !disabled,\n          'cursor-auto': disabled\n        }\n      )}\n      data-testid=\"tweet\"\n      onClick={onClick}\n    >\n      {waiting ? <FontAwesomeIcon icon={faSpinner} spin={true} /> : copy.Tweet}\n    </button>\n  );\n}\n\nexport default TweetstormButton;\n","import classnames from 'classnames';\nimport { useFeature } from 'feature-provider';\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport { version } from '../../../package.json';\nimport fetchHealth from '../../api/fetchHealth.js';\nimport fetchTweetstorm from '../../api/fetchTweetstorm.js';\nimport Footer from '../../components/Footer/Footer';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ReplyToTweet from '../../components/ReplyToTweet/ReplyToTweet';\nimport ToastNotification from '../../components/ToastNotification/ToastNotification.js';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport makeTweetstorm from '../../store/makeTweetstorm';\nimport { types } from '../../store/makeReducer';\nimport { MAX_LENGTH, SHOW_FORM_V1 } from '../../constants';\nimport { useAuth0 } from '../../react-auth0-wrapper';\nimport Counter from './Counter';\nimport TweetstormButton from './TweetstormButton';\n\nconst copy = {\n  '...': '...',\n  'Edits can be made in the boxes below before publishing':\n    'Edits can be made in the boxes below before publishing',\n  'Newline(s)': 'Newline(s)',\n  \"See what's happening in the world right now.\":\n    \"See what's happening in the world right now.\",\n  'Start typing, to insert a break prior to reaching 280 characters please use':\n    'Start typing, to insert a break prior to reaching 280 characters please use',\n  'The tweetstorm has been created successfully.':\n    'The tweetstorm has been created successfully.',\n  Tweries: 'Tweries',\n  \"What's happening?\": \"What's happening?\",\n  '#hashtags': '#hashtags'\n};\n\nfunction App({ initialState, reducer }) {\n  const {\n    isAuthenticated,\n    loading,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n\n  const feature = useFeature();\n\n  function setHealthy(error, response) {\n    if (error) {\n      console.log(error);\n      dispatch({ type: types.SET_HEALTHY, value: false });\n    }\n    if (response) {\n      console.log(response);\n      dispatch({\n        type: types.SET_HEALTHY,\n        value: response.error ? false : true\n      });\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetchHealth();\n        setHealthy(null, response);\n      } catch (error) {\n        setHealthy(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      dispatch({ type: types.SET_USER_ID, value: user.sub });\n    }\n  }, [isAuthenticated, user]);\n\n  const [hashtags_, setHashtags] = useLocalStorage('hashtags', '');\n  const [source_, setSource] = useLocalStorage('source', '');\n\n  const [\n    { hashtags, healthy, items, notification, source, userId },\n    dispatch\n  ] = useReducer(reducer, {\n    ...initialState,\n    hashtags: hashtags_,\n    items: makeTweetstorm(feature)({\n      hashtags: hashtags_,\n      linefeed: initialState.linefeed,\n      source: source_\n    }),\n    source: source_\n  });\n\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        dispatch({ type: types.DISMISS_TOAST });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // TODO: add to global state?\n  const [inReplyToTweetUrl, setInReplyToTweetUrl] = useState('');\n  const [waiting, setWaiting] = useState(false);\n\n  function disabled() {\n    return (\n      !isAuthenticated ||\n      !items.length > 0 ||\n      !healthy ||\n      items.find(item => item.tweet.length > MAX_LENGTH)\n    );\n  }\n\n  function renderTextarea(item) {\n    return (\n      <textarea\n        className={classnames('bg-gray-200 p-2 rounded', {\n          'border border-gray-500': item.tweet.length <= MAX_LENGTH,\n          'border-2 border-red-500': item.tweet.length > MAX_LENGTH\n        })}\n        onChange={e => {\n          dispatch({\n            type: types.CHANGE_TWEET,\n            value: {\n              id: item.id,\n              tweet: e.target.value\n            }\n          });\n        }}\n        rows={4}\n        value={item.tweet}\n      />\n    );\n  }\n\n  function resetTweetstorm(error, response) {\n    let message = copy['The tweetstorm has been created successfully.'];\n    let type = 'success';\n    if (error || response.error) {\n      message = error ? error.message : response.error.message;\n      type = 'danger';\n    }\n    console.log(error, response);\n    dispatch({\n      type: types.RESET_TWEETSTORM,\n      value: {\n        message,\n        type\n      }\n    });\n    setHashtags('');\n    setInReplyToTweetUrl('');\n    setSource('');\n    setWaiting(false);\n  }\n\n  async function onClick() {\n    setWaiting(true);\n    try {\n      const response = await fetchTweetstorm({\n        inReplyToTweetUrl,\n        items,\n        userId\n      });\n      resetTweetstorm(null, response);\n    } catch (error) {\n      resetTweetstorm(error);\n    }\n  }\n\n  const memoizedCallback = useCallback((error, data) => {\n    if (data) {\n      dispatch({\n        type: types.APPEND_SCREEN_NAME,\n        value: data.user.screen_name\n      });\n    }\n  }, []);\n\n  return loading ? (\n    <article className=\"container content-center mx-auto m-1 p-4 text-center\">\n      {copy['...']}\n    </article>\n  ) : (\n    <article className=\"container content-center mx-auto m-1 p-4\">\n      <NavBar\n        dispatch={dispatch}\n        isAuthenticated={isAuthenticated}\n        loginWithRedirect={loginWithRedirect}\n        logout={logout}\n        user={user}\n      />\n      <h1 className=\"font-bold logo my-4 text-5xl text-center\">\n        {copy.Tweries}\n      </h1>\n      {feature.active(SHOW_FORM_V1) && !isAuthenticated && (\n        <h2 className=\"my-4 text-center\">\n          {copy[\"See what's happening in the world right now.\"]}\n        </h2>\n      )}\n      <form className=\"flex flex-col\" onSubmit={e => e.preventDefault()}>\n        {isAuthenticated && (\n          <ReplyToTweet\n            callback={memoizedCallback}\n            onChange={setInReplyToTweetUrl}\n            tweetUrl={inReplyToTweetUrl}\n            userId={userId}\n          />\n        )}\n        {((feature.active(SHOW_FORM_V1) && isAuthenticated) ||\n          !feature.active(SHOW_FORM_V1)) && (\n          <>\n            <small className=\"mb-2 p-2\">\n              {\n                copy[\n                  'Start typing, to insert a break prior to reaching 280 characters please use'\n                ]\n              }{' '}\n              <span className=\"font-bold\">{copy['Newline(s)']}</span>\n            </small>\n            <textarea\n              className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n              data-testid=\"source\"\n              placeholder={copy[\"What's happening?\"]}\n              rows={8}\n              value={source}\n              onChange={e => {\n                dispatch({\n                  type: types.CHANGE_SOURCE,\n                  value: e.target.value\n                });\n                setSource(e.target.value);\n              }}\n            />\n            <Counter length={source.length} />\n            <textarea\n              className=\"bg-gray-200 border border-gray-500 p-2 rounded\"\n              data-testid=\"hashtags\"\n              onChange={e => {\n                dispatch({\n                  type: types.CHANGE_HASHTAGS,\n                  value: e.target.value\n                });\n                setHashtags(e.target.value);\n              }}\n              placeholder={copy['#hashtags']}\n              rows={1}\n              type=\"text\"\n              value={hashtags}\n            />\n            <Counter length={hashtags.length} />\n            {items.length > 0 && [\n              <small className=\"mb-2 p-2\" key=\"copy\">\n                {copy['Edits can be made in the boxes below before publishing']}\n              </small>,\n              <ul className=\"flex flex-col\" data-testid=\"list\" key=\"list\">\n                {items.map((item, index) => (\n                  <li className=\"flex flex-col\" key={index}>\n                    {renderTextarea(item)}\n                    <Counter length={item.tweet.length} type=\"tweet\" />\n                  </li>\n                ))}\n              </ul>\n            ]}\n            <TweetstormButton\n              disabled={disabled()}\n              onClick={onClick}\n              waiting={waiting}\n            />\n          </>\n        )}\n      </form>\n      <ToastNotification\n        notification={notification}\n        onClick={() => dispatch({ type: types.DISMISS_TOAST })}\n      />\n      <Footer healthy={healthy} version={version} />\n    </article>\n  );\n}\n\nexport default App;\n","import { types } from './makeReducer';\n\n// TODO: change it into some sort of middleware(s)\nfunction augment({ logEvent, reducer }) {\n  // TODO: fix name\n  function logAction(state, action) {\n    // console.log('state:', state);\n    // console.log('action:', action);\n    const newState = reducer(state, action);\n    // console.log('newState:', newState);\n    switch (action.type) {\n      case types.CHANGE_HASHTAGS:\n      case types.CHANGE_SOURCE:\n      case types.CHANGE_TWEET:\n        break;\n      default:\n        logEvent(action.type, action.value);\n        break;\n    }\n    return newState;\n  }\n  return logAction;\n}\n\nexport default augment;\n","import { FEATURE_V1, SHOW_FORM_V1 } from './constants';\n\nconst features = [FEATURE_V1, SHOW_FORM_V1];\n\nexport default features;\n","import ReactGA from 'react-ga';\n\n// CREDIT: https://medium.com/google-cloud/tracking-site-visits-on-react-app-hosted-in-google-cloud-using-google-analytics-f49c2411d398\nfunction initializeReactGA() {\n  const { NODE_ENV } = process.env;\n  if (NODE_ENV !== 'development') {\n    ReactGA.initialize('UA-54446639-10');\n    ReactGA.pageview('/');\n  }\n}\n\nexport default initializeReactGA;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Amplitude, AmplitudeProvider } from '@amplitude/react-amplitude';\nimport amplitude from 'amplitude-js';\nimport FeatureProvider, { setFeatures } from 'feature-provider';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Layout from './components/Layout/Layout';\nimport App from './containers/App/App';\nimport augment from './store/augment';\nimport makeInitialState from './store/makeInitialState';\nimport makeReducer from './store/makeReducer';\nimport './styles.css';\nimport config from './auth_config.json';\nimport { AMPLITUDE_KEY } from './constants';\nimport features from './features';\nimport initializeReactGA from './initializeReactGA';\nimport { Auth0Provider } from './react-auth0-wrapper';\nimport * as serviceWorker from './serviceWorker';\n\n// TUTORIAL: https://manage.auth0.com/dashboard/us/dev-17-x3zfb/applications/iqgFXkcTFo9l80i7llzcurmrfgVsn3TZ/quickstart\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nfunction renderApp(logEvent) {\n  const { REACT_APP_LAYOUT_V1 } = process.env;\n  if (REACT_APP_LAYOUT_V1 === 'true') {\n    return <Layout />;\n  }\n  initializeReactGA();\n  const feature = setFeatures(features);\n  return (\n    <FeatureProvider features={features}>\n      <App\n        initialState={makeInitialState({ feature })}\n        reducer={augment({ logEvent, reducer: makeReducer(feature) })}\n      />\n    </FeatureProvider>\n  );\n}\n\nrender(\n  <Auth0Provider\n    client_id={config.clientId}\n    domain={config.domain}\n    onRedirectCallback={onRedirectCallback}\n    redirect_uri={window.location.origin}\n  >\n    <AmplitudeProvider\n      amplitudeInstance={amplitude.getInstance()}\n      apiKey={AMPLITUDE_KEY}\n    >\n      <Amplitude>{({ logEvent }) => renderApp(logEvent)}</Amplitude>\n    </AmplitudeProvider>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}